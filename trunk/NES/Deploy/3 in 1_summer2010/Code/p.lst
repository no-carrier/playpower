                                end_seq_check = $5a
                                buttons EQU $20
                                levelnum = $21
                                oldbuttons EQU $22
                                sk1 = $23
                                justpressed EQU $24
                                points = $25
                                freq EQU $26
                                counter EQU $27
                                ;;;;;;;;;;;
                                varX EQU $28
                                var1 EQU $29
                                var2 EQU $30
                                var3 EQU $31
                                var4 EQU $32
                                var5 EQU $33
                                var6 EQU $34
                                var7 EQU $35
                                var8 EQU $36
                                varY EQU $37
                                random1 EQU $38
                                random2 EQU $39
                                random3 EQU $40
                                random4 EQU $41
                                random5 EQU $42
                                random6 EQU $43
                                random7 EQU $44
                                loc1 EQU $45
                                loc2 EQU $46
                                loc3 EQU $47
                                loc4 EQU $48
                                loc5 EQU $49
                                loc6 EQU $50
                                loc7 EQU $51
                                k EQU $52
                                k1 EQU $53
                                k2 EQU $54
                                k3 EQU $55
                                k4 EQU $56
                                k5 EQU $57
                                k6 EQU $58
                                k7 EQU $59
                                hpy EQU $60
                                varYY EQU $61
                                 vary = $62
                                varyjsr = $63
                                cnt = $64
                                cntloop = $65
                                
                                obj1 = $66
                                 gudcount EQU $67
                                 ngud EQU $68
                                level EQU $69
                                tt EQU $6A
                                go = $6B
                                bo = $6C
                                cq = $6D
                                icq = $6E
                                counter1 = $6F
                                counter2 = $70
                                counter3 = $71
                                us = $72
                                cb = $73
                                cbb = $74
                                uss = $75
                                random_enable = $76
                                question_count  =$77
                                checkup_status = $78
                                checkdown_status = $79
                                control = $7A
                                bg = $7C
                                count = $7D
                                qq = $7E
                                bg1 =$7F
                                bg2=$80
                                bg3=$81
                                bg4=$82
                                bg5=$83
                                bg6=$84
                                question_no=$85
                                count2=$86
                                random11 EQU $87
                                random22 EQU $88
                                random33 EQU $89
                                random44 EQU $8A
                                vv1=$8B
                                vv2=$8C
                                vv3=$3A
                                vv4=$3B
                                vv5=$3C
                                vv6=$3E
                                vv7=$3F
                                v11=$4A
                                v22=$4B
                                v33=$4C
                                v44=$4D
                                v55=$4E
                                v66=$19
                                v77=$18
                                
                                varY1=$8D
                                varY2=$8E
                                varY3=$8F
                                varY4=$90
                                varY5=$91
                                varY6=$92
                                varY7=$93
                                gameover=$94
                                pointcheck=$95
                                game_finished = $95
                                wrongans   = $96
                                delay      = $97
                                L = $98
                                countl =$99
                                countr =$9A
                                waitt =$9B
                                h1 =$9C
                                h2 =$9D
                                h3 =$9E
                                tempcnt = $19
                                trigger_delay = $9F
                                delayy = $A0
                                trigger_delay2 = $A1
                                first_screen = $A2
                                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                scroll_h equ $A3
                                scroll_v equ $A4
                                ppucntl  equ $A5
                                scroll_step equ $A6
                                scrollup_act equ $A7
                                scrolldown_act equ $A8
                                screen_no equ $A9
                                scroll_h_temp equ $AB
                                scroll_v_temp equ $AC
                                scroll_change equ $ad
                                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                screen_start equ $B0
                                control_start equ $b1
                                
                                buttons_s EQU $b2
                                oldbuttons_s EQU $b3
                                justpressed_s EQU $b4
                                level1_complete equ $b5
                                
                                go0 = $b5
                                bo0 = $b6
                                cq0 = $b7
                                icq0 = $b8
                                
                                sec_count = $b9
                                time_ones = $ba
                                time_tens = $bb
                                time_hundreds = $bc
                                pp = $bd
                                
                                md1 EQU $bd
                                md2 EQU $be
                                md3 EQU $bf
                                md4 EQU $c0
                                u1 EQU $c1
                                u2 EQU $c2
                                u3 EQU $c3
                                u4 EQU $c4
                                oover = $c5
                                moveendtrig = $c6
                                moveawaytrig = $c7
                                downbagtrig = $c8
                                sadface = $c9
                                cntr = $cA
                                timend = $cb
                                bagpos = $cc
                                oover123 = $cd
                                gamelevel = $ce
                                trig_controller1=$cf
                                temp_varyjsr=$d0
                                loop_var1=$d1
                                loop_var2=$d2
                                bag_vertical=$d3
                                new_qst=$d4
                                new_qst1=$d5
                                last_try = $d6
                                ch1 =$d7
                                ch2 =$d8
                                ch3 =$d9
                                varch1 =$da
                                varch2 =$db
                                varch3 =$dc
                                sp1 =$dd
                                sp2 =$de
                                up_frame =$df
                                upmo =$e0
                                trig_endmotion =$e1
                                trig_startmotion =$e2
                                mx4 =$e3
                                color_right =$e4
                                color_left =$e5
                                mh2 =$e6
                                Qcount =$e7
                                trig_que =$e8
                                Gcount =$e9
                                trig_gud =$ea
                                trig_bad =$eb
                                trig_disp_level1 =$ec
                                smc1 =$ed
                                duf =$ee
                                sp3 =$ef
                                sp4 =$f0
                                sp5 =$f1
                                sp6 =$f2
                                sp7 =$f3
                                varss = $f4
                                sson = $f5
                                SongNumber = $f6
                                bad_temp = $f7
                                ps =$f8
                                ps1 =$f9
                                ;LoadAddy = $EC05
                                ;InitAddy = $EC05
                                ;PlayAddy = $EC08
                                bug  = $fa
                                bug_imp = $fb
                                desparate = $fc
                                test      = $fd
                                credit_enable   = $fe
                                duf1 =$ff
                                screen_start6 = $100
                                trig_st =$19
                                scro = $18
                                fast_speed =$17
                                updown1 =$16
                                updown2 =$15
                                tpp =$14
                                tpp1 =$13
                                touch_trig=$12
                                select_var = $11
                                
                                NewButtons = $10
                                OldButtons = $102
                                JustPressed = $103
                                PPUCRTL = $104
                                bitmask = $105
                                temp = $106
                                sourceLo = $107
                                sourceHi = $108
                                nol = $109
                                cs EQU $10a
                                tempx EQU $10b
                                color1 = $10c
                                Current = $10d
                                scroll = $10e
                                hitrock EQU $10f
                                breakrock = $110
                                walk = $111
                                pointer= $112
                                wl = $113
                                wordlength = $114
                                wordnum = $115
                                xleft = $116
                                xright =  $117
                                ytop = $118
                                ybottom = $119
                                
                                sp0 EQU $11a
                                cs1 EQU $11b
                                tem EQU $11c
                                ts EQU $11d
                                i EQU $11e
                                ww EQU $11f
                                j EQU $120
                                moveforward_status EQU $121
                                scroll_status EQU $122
                                ll EQU $123
                                varZ EQU $124
                                kk EQU $125
                                color EQU $126
                                trigger = $127
                                wn = $128
                                total_letters = $129
                                trigger2 = $12a
                                ttempx = $12b
                                count1 EQU $12c
                                count3 EQU $12d
                                count4 EQU $12e
                                
                                upd EQU $12f
                                varM EQU $130
                                key EQu $131
                                varM1 EQU $132
                                key1 EQU $133
                                moh EQU $134
                                trigger0 = $135
                                
                                total_letters0 = $136
                                var01 = $137
                                
                                pointer0 = $138
                                
                                trig_delay = $139
                                
                                delay_cal_quiz = $13a
                                
                                
                                under = $13b
                                upper_byte=$13c
                                lower_byte=$13d
                                under1=$13e
                                under2=$13f
                                
                                
                                var_new = $140
                                var_walk EQU $141
                                co =$142
                                varP =$143
                                tri =$144
                                co1 =$145
                                co2 =$146
                                tri1 =$147
                                tri2 =$148
                                pro1 =$149
                                pro2 =$14a
                                pro3 =$14b
                                pro4 =$14c
                                varMM =$14d
                                key_fun2 =$14e
                                varMM1 =$14f
                                kkc =$150
                                varH =$151
                                mx =$152
                                sw =$153
                                varG =$154
                                mon_color = $155
                                mdd2=$156
                                col=$157
                                hanu_pal=$158
                                mdd21=$159
                                col1=$15a
                                level_change=$15b
                                clearing_byte=$15c
                                varYp=$15d
                                game_no = $15e
                                
                                
                                varA EQU $15f
                                varB EQU $160
                                mosX EQU $161
                                
                                varC EQU $162
                                varD EQU $163
                                varE EQU $164
                                varF EQU $165
                                
                                varZ1 EQU $166
                                varZ2 EQU $167
                                kg EQU $168
                                kg2 EQU $169
                                kg1 EQU $16a
                                varG1 EQU $16b
                                varG2 EQU $16c
                                
                                
                                mosY EQu $16d
                                racX EQU $16e
                                racY EQU $16f
                                
                                key2 EQU $170
                                key3 EQU $171
                                key4 EQU $172
                                key5 EQU $173
                                pressA EQU $174
                                jj EQU $175
                                md EQU $176
                                
                                md5 EQu $177
                                x1 EQU $178
                                x2 EQU $179
                                x3 EQU $180
                                x4 EQU $181
                                x5 EQU $182
                                z EQU $183
                                mosquito_dead EQU $184
                                
                                screen_change_trigger equ $185
                                rm EQU $186
                                rm1 EQU $187
                                
                                fr EQU $188
                                delay_selectup = $189
                                delay_selectdown  = $18a
                                initiate_con=$18b
                                stop_start = $18c
                                
                                hanu=$18d
                                head=$18e
                                bad=$18f
                                
                                blastsnake=$190
                                blastrock=$191
                                blastsoldier=$192
                                vv8 =$193
                                varY8 =$194
                                random8 =$195
                                loc8 =$196
                                k8 =$197
                                trig_m8 =$198
                                varY88 =$199
                                varch6 =$19a
                                ch6 =$19b
                                varch5 =$19c
                                ch5 =$19d
                                varch4 =$19e
                                ch4 =$19f
                                
                                scrollup_slow = $200
                                
                                trig_static = $201
                                bh = $202
                                trig_hit = $18
                                varB1 = $204
                                be1 = $17
                                bh1 = $d3
                                trig_fall = $c9
                                varB2 = $208
                                bh2 = $78
                                be2 = $79
                                varS = $6b
                                var_sol = $6c
                                trig_sol = $6d
                                varSS = $38
                                var_smoke =$39
                                trig_smoke=$40
                                
                                ch7 = $2a
                                varch7 =$2b
                                ps2 =$2c
                                ps3 =$2d
                                varch8 =$2e
                                typ_variable = $2f
                                game_no1 = $209
                                end_seq = $96
                                
                                
                                ;       ----------------------------------------------------
                                
                                        .ORG $7ff0
07FF0                           Header:                         ; 16 byte .NES header (iNES format)
07FF0 4E 45 53 1A               	.db "NES", $1a
07FF4 08                        	.db $08                 ; size of PRG ROM in 16kb units
07FF5 10                        	.db $10			; size of CHR ROM in 8kb units
07FF6 12                        	.db #%00010010		; mapper 1
07FF7 00                        	.db #%00000000		; mapper 1
07FF8 00                                .db $00                 ; size of PRG RAM in 8kb RAM
07FF9 00                                .db $00
07FFA 00                                .db $00
07FFB 00                                .db $00
07FFC 00                                .db $00
07FFD 00                                .db $00
07FFE 00                                .db $00
07FFF 00                                .db $00
08000                           
08000                           ;       ----------------------------------------------------
08000                           .base $8000
08000                           .include quiz_level1.asm
08000                           
08000                           
08000                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08000                           
08000                           
08000                           load_sprites:
08000                           
08000 A5 EC                                       lda trig_disp_level1
08002 C9 01                                         cmp #1
08004 D0 1B                                         bne rtt
08006                           
08006 E6 ED                                     INC smc1
08008 A5 ED                                     lda smc1
0800A C9 0F                                     CMP #15
0800C D0 13                                     BNE rtt
0800E A9 00                                     lda #0
08010 85 ED                                     sta smc1
08012                           
08012                           
08012 A5 EE                      jk :lda duf
08014 C9 00                          cmp #0
08016 D0 0A                          bne jk1
08018 A9 A2                          lda #$A2     ;;;L
0801A 8D A1 05                       sta $5A1
0801D                           
0801D A9 01                          lda #1
0801F 85 EE                          sta duf
08021 60                        rtt:     rts
08022                           
08022 A5 EE                      jk1: lda duf
08024 C9 01                          cmp #1
08026 D0 0A                          bne jk2
08028 A9 B2                           lda #$B2     ;;;E
0802A 8D A5 05                        sta $5A5
0802D                           
0802D A9 02                          lda #2
0802F 85 EE                          sta duf
08031 60                             rts
08032                           
08032 A5 EE                      jk2:lda duf
08034 C9 02                          cmp #2
08036 D0 0A                          bne jk3
08038 A9 A3                          lda #$A3     ;;;V
0803A 8D A9 05                       sta $5A9
0803D                           
0803D A9 03                          lda #3
0803F 85 EE                          sta duf
08041 60                             rts
08042                           
08042 A5 EE                       jk3:lda duf
08044 C9 03                          cmp #3
08046 D0 0A                          bne jk4
08048 A9 B2                          lda #$B2    ;;;E
0804A 8D AD 05                       sta $5AD
0804D A9 04                          lda #4
0804F 85 EE                          sta duf
08051 60                             rts
08052                           
08052 A5 EE                       jk4:lda duf
08054 C9 04                          cmp #4
08056 D0 0A                          bne jk5
08058 A9 A2                          lda #$A2    ;;;L
0805A 8D B1 05                       sta $5B1
0805D A9 05                          lda #5
0805F 85 EE                          sta duf
08061 60                             rts
08062                           
08062 A5 EE                       jk5:lda duf
08064 C9 05                          cmp #5
08066 D0 0A                          bne jk6
08068 A9 32                          lda #$32    ;;;1
0806A 8D B5 05                       sta $5B5
0806D A9 06                          lda #6
0806F 85 EE                          sta duf
08071 60                             rts
08072                                
08072                                
08072 A5 EE                       jk6:lda duf
08074 C9 06                           cmp #6
08076 D0 05                           bne jk7
08078                           
08078 A9 07                           lda #7
0807A 85 EE                           sta duf
0807C 60                              rts
0807D                           
0807D A5 EE                       jk7:lda duf
0807F C9 07                           cmp #7
08081 D0 05                           bne jk8
08083                           
08083 A9 08                           lda #8
08085 85 EE                           sta duf
08087 60                              rts
08088                           
08088 A5 EE                       jk8:lda duf
0808A C9 08                           cmp #8
0808C D0 19                           bne jk9
0808E                           
0808E A9 00                           lda #$00
08090 8D A1 05                        sta $5A1
08093 8D A5 05                        sta $5A5
08096 8D A9 05                        sta $5A9
08099 8D AD 05                        sta $5AD
0809C 8D B1 05                        sta $5B1
0809F 8D B5 05                        sta $5B5
080A2                           
080A2 A9 09                          lda #9
080A4 85 EE                          sta duf
080A6                               ;  lda #0
080A6                               ;  sta trig_disp_level1
080A6 60                             rts
080A7                           
080A7                           
080A7                           
080A7 A5 EE                       jk9:lda duf
080A9 C9 09                           cmp #9
080AB D0 05                           bne jk10
080AD                           
080AD A9 0A                           lda #10
080AF 85 EE                           sta duf
080B1 60                              rts
080B2                           
080B2                            jk10:
080B2 A9 2F                           lda #47
080B4 85 B5                           sta $b5
080B6                                 
080B6                                      ;  LDA #$01
080B6                                      ;  JSR setCHRPage0000
080B6                                      ;  LDA #$03
080B6                                      ;  JSR setCHRPage1000
080B6                           
080B6 60                          rtt1:    rts
080B7                           
080B7                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
080B7                           ;;this subroutine is called when a question mark is touched  by hanuman  ..... it loads the question screen .....it disables the mainscreen controller and 
080B7                           ;; initialises the questionscreen variables
080B7                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
080B7                           Questionscreen:
080B7 A9 00                     lda #0
080B9 85 B5                               sta go0
080BB 85 6B                               sta go
080BD 85 A8                               sta $A8
080BF 85 A7                               sta $A7
080C1 85 18                               sta scro
080C3 85 A6                               sta $A6
080C5                           ;LDA #$13
080C5                           ;JSR setCHRPage1000
080C5                            ;       ldx  #0
080C5                           ;back    lda $500 , x
080C5                           ;        sta $600 , x
080C5                           ;        inx
080C5                           ;        txa
080C5                           ;        bne back
080C5 E6 E7                              inc Qcount
080C7 A5 E7                              lda Qcount
080C9 C9 17                              cmp #23
080CB D0 08                              bne kjj
080CD A9 00                              lda #0
080CF 85 E7                              sta Qcount
080D1 A9 01                              lda #1
080D3 85 E8                              sta trig_que
080D5                           
080D5 A9 00                       kjj:   lda #0
080D7 85 CF                              sta trig_controller1
080D9 A2 00                             ldx #0
080DB A5 A3                             lda $A3
080DD 85 AB                             sta $AB
080DF A5 A4                             lda $A4
080E1 85 AC                             sta $AC
080E3 A9 00                             lda #0
080E5 85 A3                             sta $A3
080E7 85 A4                             sta $A4
080E9 A9 88                             lda #%10001000
080EB 8D 00 20                          sta $2000
080EE                                   
080EE 20 C5 E3                          jsr ClearSprites11
080F1                           
080F1 A2 00                             ldx #0
080F3                           
080F3 BD 1E E8                  @back1   lda sprite ,x            ;;;loading of sprites
080F6 9D 00 06                          sta $600, x
080F9 E8                                inx
080FA 8A                                txa
080FB C9 04                             cmp #4
080FD D0 F4                             bne @back1
080FF                           
080FF 20 C5 E3                          jsr ClearSprites11
08102 20 CC C1                          jsr update_sprites11
08105                           
08105 A9 0A                             lda #10
08107 85 AD                             sta $ad
08109                                   ;jsr pallatechange
08109 A9 00                             lda #%00000000
0810B 8D 01 20                          sta $2001
0810E 20 34 81                          jsr @Q44
08111                           
08111                           
08111 20 CC C1                          jsr update_sprites11
08114 A9 1E                             lda #%00011110
08116                           
08116 8D 01 20                          sta $2001
08119 A9 00                             lda #0
0811B 8D 05 20                          sta $2005
0811E 8D 05 20                          sta $2005
08121                           
08121 A9 01                             lda #1
08123 85 7C                             sta bg
08125                           
08125 A9 05                             lda #5
08127 85 7A                             sta control
08129                           
08129 A9 01                             lda #1
0812B 85 7C                             sta bg
0812D                           
0812D A9 05                             lda #5
0812F 85 7E                             sta qq
08131 85 76                             sta random_enable
08133                           
08133                           
08133                           ;jsr ClearSprites11
08133                            ;lda #142
08133                           ;sta $600
08133                           
08133                           
08133                           ;jsr update_sprites11
08133                           
08133                                   ;lda #$1E
08133                                   ;sta $6DC
08133                                   ;jsr update_sprites11
08133                                   
08133                                   
08133                           
08133                           
08133 60                         rts
08134                           
08134                            @Q44:
08134 A9 20                        	LDA #$20                ; set to beginning of first nametable
08136 8D 06 20                      	STA $2006
08139 A9 00                         	LDA #$00
0813B 8D 06 20                      	STA $2006
0813E A9 BA                             LDA #<pic1              ; load low byte of first picture
08140 85 10                             STA $10
08142 A9 EA                             LDA #>pic1              ; load high byte of first picture
08144 85 11                             STA $11
08146 A0 00                             LDY #$00
08148 A2 04                             LDX #$04
0814A B1 10                     @NameLoop6:    LDA ($10),y
0814C 8D 07 20                                STA $2007
0814F C8                                      INY
08150 D0 F8                                   BNE @NameLoop6
08152 E6 11                                   INC $11
08154 CA                                      DEX
08155 D0 F3                                   BNE @NameLoop6
08157 60                        RTS
08158                           
08158                             ;.................................................................................................................................................
08158                           ;.........................................................................................................................................................
08158                           ;.........................................................................................................................................................
08158                           ;;; Controller for Question screen......
08158                           ;;; selecting the options is done over here
08158                           ;;;and after selceting if the answer is right then execution moves to @corr otherwise @inncorrect1
08158                           newcontroller:
08158 A5 7A                             lda control
0815A C9 05                             cmp #5
0815C D0 5B                             bne @newCheckOver1
0815E                           
0815E A5 78                             lda checkup_status
08160 F0 02                             beq @nxt1
08162 C6 78                             dec checkup_status
08164                           @nxt1
08164 A5 79                             lda checkdown_status
08166 F0 02                             beq @nxt
08168 C6 79                             dec checkdown_status
0816A                           @nxt:
0816A A5 20                             LDA $20
0816C 85 22                     	sta $22
0816E                           
0816E                           
0816E A2 00                             ldx #$00
08170                           
08170 A9 01                             LDA #$01		; strobe joypad
08172 8D 16 40                  	STA $4016
08175 A9 00                     	LDA #$00
08177 8D 16 40                  	STA $4016
0817A                           @con_loop1:
0817A AD 16 40                  	LDA $4016		; check the state of each button
0817D 4A                        	LSR
0817E 66 20                     	ROR $20
08180 E8                                INX
08181 E0 08                             CPX #$08
08183 D0 F5                             bne @con_loop1
08185                           
08185 A5 22                     	LDA $22
08187 49 FF                     	EOR #$FF
08189 25 20                     	AND $20
0818B                           
0818B                           @newCheckUp:
0818B A5 78                             lda checkup_status
0818D D0 42                             bne @newCheckDown
0818F                           
0818F A9 10                     	LDA #%00010000
08191                           	;AND justpressed
08191 25 20                     	AND $20
08193 F0 3C                             BEQ @newCheckDown
08195 A9 1E                               lda #%00011110
08197 8D 01 20                                      sta $2001
0819A                           
0819A A9 0D                             lda #13
0819C 85 78                             sta checkup_status
0819E AD 00 06                         	lda $600
081A1 C9 8E                     	cmp #142
081A3 F0 0C                             beq @onedown
081A5 C9 9E                             cmp #158
081A7 F0 13                             beq @twodown
081A9 C9 AE                             cmp #174
081AB F0 17                             beq @threedown
081AD C9 BE                             cmp #190
081AF                           
081AF F0 1B                             beq @fourdown
081B1                           @onedown:
081B1 A9 BE                     lda #190
081B3 8D 00 06                  sta $600
081B6 4C 12 82                  jmp @newCheckLeft
081B9                           @newCheckOver1 :
081B9 4C 2B 82                  jmp @newCheckOver
081BC                           @twodown:
081BC A9 8E                     lda #142
081BE 8D 00 06                  sta $600
081C1 4C 12 82                  jmp @newCheckLeft
081C4                           @threedown:
081C4 A9 9E                     lda #158
081C6 8D 00 06                  sta $600
081C9 4C 12 82                  jmp @newCheckLeft
081CC                           @fourdown:
081CC A9 AE                     lda #174
081CE 8D 00 06                  sta $600
081D1                           
081D1                           
081D1                           @newCheckDown:
081D1 A5 79                             lda checkdown_status
081D3 D0 3D                             bne @newCheckLeft
081D5 A9 20                     	LDA #%00100000
081D7                           	;AND justpressed
081D7 25 20                     	AND $20
081D9 F0 37                     	BEQ @newCheckLeft
081DB A9 0D                     	lda #13
081DD 85 79                             sta checkdown_status
081DF AD 00 06                          lda $600
081E2 C9 8E                             cmp #142
081E4 F0 0C                             beq @one
081E6 C9 9E                             cmp #158
081E8 F0 10                             beq @two
081EA C9 AE                             cmp #174
081EC F0 14                             beq @three
081EE C9 BE                             cmp #190
081F0 F0 18                             beq @four
081F2                           @one:
081F2 A9 9E                     lda #158
081F4 8D 00 06                  sta $600
081F7 4C D1 81                  jmp @newCheckDown
081FA                           @two:
081FA A9 AE                     lda #174
081FC 8D 00 06                  sta $600
081FF 4C D1 81                  jmp @newCheckDown
08202                           @three:
08202 A9 BE                     lda #190
08204 8D 00 06                  sta $600
08207 4C D1 81                  jmp @newCheckDown
0820A                           @four:
0820A A9 8E                     lda #142
0820C 8D 00 06                  sta $600
0820F 4C D1 81                  jmp @newCheckDown
08212                           
08212                           
08212                           @newCheckLeft:
08212 A9 40                     	LDA #%01000000
08214 25 20                     	AND $20
08216 F0 00                     	BEQ @newCheckA
08218                           
08218                           
08218                           ;@newCheckRight:
08218                           ;	LDA #%10000000
08218                           ;	AND buttons
08218                           ;	BEQ @newCheckB
08218                           
08218                           ;	sta random_enable
08218                           ;bck1:	jsr backtomain
08218                           
08218                           ;	BEQ newCheckSe
08218                           
08218                           ;newCheckSel:
08218                           ;	LDA #%00000100
08218                           ;	AND justpressed
08218                           ;	BEQ newCheckStart
08218                           
08218                           ;newCheckStart
08218                           ;	LDA #%00001000
08218                           ;	AND justpressed
08218                           ;	BEQ newCheckB
08218                           
08218                           ;@newCheckB:
08218                                   ;lda wrongans
08218                                   ;cmp #10
08218                                   ;beq @newCheckA
08218                           ;	LDA #%00000010
08218                           ;	AND buttons
08218                           ;	BEQ @newCheckA
08218                           
08218                           
08218                           
08218                           @newCheckA:
08218 A9 01                                LDA #%00000001
0821A 25 20                     	AND $20
0821C F0 0D                     	BEQ @newCheckOver
0821E                           
0821E A4 77                              ldy question_count
08220                                   ; lda #80
08220 B9 24 9B                          lda answers,y
08223 CD 00 06                          cmp $600
08226                                ;   cmp #option1
08226 F0 04                             beq @corrr
08228 4C 2F 82                          jmp @inncorrect1
0822B                           @newCheckOver:
0822B                           
0822B 60                                RTS
0822C                           @corrr:
0822C 4C 15 83                        jmp @correct
0822F                             ;       ----------------------------------------------------
0822F                                       ; Loading Sad Face
0822F                                       ; triggering->jmp from new controller
0822F                               ;       ----------------------------------------------------
0822F                           
0822F                           @inncorrect1 :
0822F                                        ;LDA #$13
0822F                                        ;JSR setCHRPage1000
0822F                                       ;jsr LoadSprites55
0822F 20 0B E4                              jsr load_incorrect
08232 20 CC C1                              jsr update_sprites11
08235 A9 0A                                 lda #10
08237 85 96                                 sta wrongans
08239 85 7A                                 sta control
0823B A9 00                                 lda #%00000000
0823D 8D 01 20                              sta $2001
08240 A9 01                                 lda #1
08242 85 A1                                 sta trigger_delay2
08244                           
08244                           
08244 A9 00                             lda #%00000000
08246 8D 01 20                          sta $2001
08249 AD 02 20                   LDA $2002             ; read PPU status to reset the high/low latch
0824C A9 23                                 LDA #$23
0824E 8D 06 20                              STA $2006             ; write the high byte of $2000 address
08251 A9 04                                 LDA #$04
08253 8D 06 20                              STA $2006             ; write the low byte of $2000 address
08256 A2 00                                 LDX #$00
08258                           
08258 A9 F1                                 LDA #$F1               ;loading correponding tiles from chr
0825A 8D 07 20                              STA $2007
0825D A9 F2                                 LDA #$F2
0825F 8D 07 20                              STA $2007
08262                           
08262 AD 02 20                              LDA $2002             ; read PPU status to reset the high/low latch
08265 A9 22                                 LDA #$22
08267 8D 06 20                              STA $2006             ; write the high byte of $2000 address
0826A A9 84                                 LDA #$84
0826C 8D 06 20                              STA $2006             ; write the low byte of $2000 address
0826F A2 00                                 LDX #$00
08271                                       
08271 A9 B1                                 LDA #$B1               ;loading correponding tiles from chr
08273 8D 07 20                              STA $2007
08276 A9 B2                                 LDA #$b2
08278 8D 07 20                              STA $2007
0827B A9 B3                                 LDA #$B3
0827D 8D D7 07                              STA #2007
08280                           
08280 AD 02 20                              LDA $2002             ; read PPU status to reset the high/low latch
08283 A9 22                                 LDA #$22
08285 8D 06 20                              STA $2006             ; write the high byte of $2000 address
08288 A9 E4                                 LDA #$e4
0828A 8D 06 20                              STA $2006             ; write the low byte of $2000 address
0828D A2 00                                 LDX #$00
0828F                           
0828F A9 E0                                 LDA #$E0              ;loading correponding tiles from chr
08291 8D D7 07                              STA #2007
08294 A9 E1                                 LDA #$E1
08296 8D 07 20                              STA $2007
08299 A9 E2                                 LDA #$E2
0829B 8D 07 20                              STA $2007
0829E A9 E3                                 LDA #$E3
082A0 8D 07 20                              STA $2007
082A3                           
082A3 AD 02 20                              LDA $2002             ; read PPU status to reset the high/low latch
082A6 A9 22                                 LDA #$22
082A8 8D 06 20                              STA $2006             ; write the high byte of $2000 address
082AB A9 C4                                 LDA #$C4
082AD 8D 06 20                              STA $2006             ; write the low byte of $2000 address
082B0 A2 00                                 LDX #$00
082B2                           
082B2 A9 D1                                 LDA #$D1              ;loading correponding tiles from chr
082B4 8D 07 20                              STA $2007
082B7 A9 D2                                 LDA #$D2
082B9 8D 07 20                              STA $2007
082BC A9 D3                                 LDA #$D3
082BE 8D 07 20                              STA $2007
082C1                           
082C1 AD 02 20                              LDA $2002             ; read PPU status to reset the high/low latch
082C4 A9 22                                 LDA #$22
082C6 8D 06 20                              STA $2006             ; write the high byte of $2000 address
082C9 A9 A4                                 LDA #$A4
082CB 8D 06 20                              STA $2006             ; write the low byte of $2000 address
082CE A2 00                                 LDX #$00
082D0                           
082D0 A9 C1                                 LDA #$C1              ;loading correponding tiles from chr
082D2 8D 07 20                              STA $2007
082D5 A9 C2                                 LDA #$C2
082D7 8D 07 20                              STA $2007
082DA A9 C3                                 LDA #$C3
082DC 8D 07 20                              STA $2007
082DF                                       
082DF AD 02 20                              LDA $2002             ; read PPU status to reset the high/low latch
082E2 A9 23                                 LDA #$23
082E4 8D 06 20                              STA $2006             ; write the high byte of $2000 address
082E7 A9 41                                 LDA #$41
082E9 8D 06 20                              STA $2006             ; write the low byte of $2000 address
082EC A2 00                                 LDX #$00
082EE                           
082EE A9 57                                 lda #$57
082F0 8D 07 20                              sta $2007
082F3 A9 52                                 lda #$52
082F5 8D 07 20                              sta $2007
082F8 A9 4F                                 lda #$4F
082FA 8D 07 20                              sta $2007
082FD A9 4E                                 lda #$4E
082FF 8D 07 20                              sta $2007
08302 A9 47                                 lda #$47
08304 8D 07 20                              sta $2007
08307                           
08307 A9 1E                                 lda #%00011110        ; on the screen
08309 8D 01 20                              sta $2001
0830C A9 00                                 lda #0                ; clearin $2005 to avoid scroling
0830E 8D 05 20                              sta $2005
08311 8D 05 20                              sta $2005
08314 60                                rts
08315                           ;       -----------------------------------------------------
08315                                   ; Loading happy face
08315                                   ; triggering->jmp from new controller
08315                           @correct :
08315                                    ;jsr LoadSprites55
08315                                    ;jsr Loadwrong
08315 20 D0 E3                           jsr load_correct
08318 20 CC C1                           jsr update_sprites11
0831B A9 01                             lda #1
0831D 85 9F                             sta trigger_delay
0831F 85 7A                             sta control
08321                           
08321 A9 00                             lda #%00000000
08323 8D 01 20                          sta $2001
08326                           
08326 AD 02 20                          LDA $2002             ; read PPU status to reset the high/low latch
08329 A9 22                             LDA #$22
0832B 8D 06 20                          STA $2006             ; write the high byte of $2000 address
0832E A9 64                             LDA #$64
08330 8D 06 20                          STA $2006             ; write the low byte of $2000 address
08333 A2 00                             LDX #$00
08335                                   
08335                           
08335 A9 A5                             lda #$A5
08337 8D 07 20                          sta $2007
0833A A9 B4                             lda #$B4
0833C 8D 07 20                          sta $2007
0833F A9 A5                             lda #$A5
08341 8D 07 20                          sta $2007
08344                           
08344 A9 22                             LDA #$22
08346 8D 06 20                          STA $2006             ; write the high byte of $2000 address
08349 A9 84                             LDA #$84
0834B 8D 06 20                          STA $2006             ; write the low byte of $2000 address
0834E A2 00                             LDX #$00
08350                           
08350 A9 B5                             lda #$b5
08352 8D 07 20                          sta $2007
08355 A9 B6                             lda #$B6
08357 8D 07 20                          sta $2007
0835A A9 B7                             lda #$B7
0835C 8D 07 20                          sta $2007
0835F                           
0835F A9 22                             LDA #$22
08361 8D 06 20                          STA $2006             ; write the high byte of $2000 address
08364 A9 A4                             LDA #$A4
08366 8D 06 20                          STA $2006             ; write the low byte of $2000 address
08369 A2 00                             LDX #$00
0836B                           
0836B A9 C5                             lda #$C5
0836D 8D 07 20                          sta $2007
08370 A9 C4                             lda #$C4
08372 8D 07 20                          sta $2007
08375                           
08375 AD 02 20                          LDA $2002             ; read PPU status to reset the high/low latch
08378 A9 22                             LDA #$22
0837A 8D 06 20                          STA $2006             ; write the high byte of $2000 address
0837D A9 C3                             LDA #$C3
0837F 8D 06 20                          STA $2006             ; write the low byte of $2000 address
08382 A2 00                             LDX #$00
08384                           
08384 A9 D4                             lda #$D4
08386 8D 07 20                          sta $2007
08389 A9 D5                             lda #$D5
0838B 8D 07 20                          sta $2007
0838E A9 D6                             lda #$D6
08390 8D 07 20                          sta $2007
08393 A9 D7                             lda #$D7
08395 8D 07 20                          sta $2007
08398                           
08398 AD 02 20                          LDA $2002             ; read PPU status to reset the high/low latch
0839B A9 22                             LDA #$22
0839D 8D 06 20                          STA $2006             ; write the high byte of $2000 address
083A0 A9 E3                             LDA #$e3
083A2 8D 06 20                          STA $2006             ; write the low byte of $2000 address
083A5 A2 00                             LDX #$00
083A7                           
083A7 A9 E4                             lda #$E4
083A9 8D 07 20                          sta $2007
083AC A9 E5                             lda #$E5
083AE 8D 07 20                          sta $2007
083B1 A9 E6                             lda #$E6
083B3 8D 07 20                          sta $2007
083B6 A9 E7                             lda #$E7
083B8 8D 07 20                          sta $2007
083BB                           
083BB AD 02 20                          LDA $2002             ; read PPU status to reset the high/low latch
083BE A9 23                             LDA #$23
083C0 8D 06 20                          STA $2006             ; write the high byte of $2000 address
083C3 A9 04                             LDA #$04
083C5 8D 06 20                          STA $2006             ; write the low byte of $2000 address
083C8 A2 00                             LDX #$00
083CA                           
083CA A9 F5                             lda #$F5
083CC 8D 07 20                          sta $2007
083CF A9 F6                             lda #$F6
083D1 8D 07 20                          sta $2007
083D4                                   
083D4 AD 02 20                          LDA $2002             ; read PPU status to reset the high/low latch
083D7 A9 23                             LDA #$23
083D9 8D 06 20                          STA $2006             ; write the high byte of $2000 address
083DC A9 41                             LDA #$41
083DE 8D 06 20                          STA $2006             ; write the low byte of $2000 address
083E1 A2 00                             LDX #$00
083E3                           
083E3 A9 52                             LDA #$52
083E5 8D 07 20                          sta $2007
083E8 A9 49                             lda #$49
083EA 8D 07 20                          sta $2007
083ED A9 47                             lda #$47
083EF 8D 07 20                          sta $2007
083F2 A9 48                             lda #$48
083F4 8D 07 20                          sta $2007
083F7 A9 54                             lda #$54
083F9 8D 07 20                          sta $2007
083FC                           
083FC A9 1E                             lda #%00011110
083FE 8D 01 20                          sta $2001
08401 A9 00                             lda #0
08403 8D 05 20                          sta $2005
08406 8D 05 20                          sta $2005
08409 60                                rts
0840A                           
0840A                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0840A                           screenchange5:
0840A A9 20                        	LDA #$20                ; set to beginning of first nametable
0840C 8D 06 20                      	STA $2006
0840F A9 00                         	LDA #$00
08411 8D 06 20                      	STA $2006
08414 A9 3B                             LDA #<screen6              ; load low byte of first picture
08416 85 10                             STA $10
08418 A9 A3                             LDA #>screen6              ; load high byte of first picture
0841A 85 11                             STA $11
0841C A0 00                             LDY #$00
0841E A2 04                             LDX #$04
08420 B1 10                     @NameLoop22:    LDA ($10),y
08422 8D 07 20                                STA $2007
08425 C8                                      INY
08426 D0 F8                                   BNE @NameLoop22
08428 E6 11                                   INC $11
0842A CA                                      DEX
0842B D0 F3                                   BNE @NameLoop22
0842D A5 A5                                   lda $A5
0842F 8D 00 20                                sta $2000
08432 60                        rts
08433                           
08433                           screenchange7:
08433 A9 20                        	LDA #$20                ; set to beginning of first nametable
08435 8D 06 20                      	STA $2006
08438 A9 00                         	LDA #$00
0843A 8D 06 20                      	STA $2006
0843D A9 3B                             LDA #<screen7              ; load low byte of first picture
0843F 85 10                             STA $10
08441 A9 A7                             LDA #>screen7              ; load high byte of first picture
08443 85 11                             STA $11
08445 A0 00                             LDY #$00
08447 A2 04                             LDX #$04
08449 B1 10                     @NameLoop22:    LDA ($10),y
0844B 8D 07 20                                STA $2007
0844E C8                                      INY
0844F D0 F8                                   BNE @NameLoop22
08451 E6 11                                   INC $11
08453 CA                                      DEX
08454 D0 F3                                   BNE @NameLoop22
08456 A5 A5                                   lda $A5
08458 8D 00 20                                sta $2000
0845B 60                        rts
0845C                           
0845C                           screenchange9:
0845C A9 20                        	LDA #$20                ; set to beginning of first nametable
0845E 8D 06 20                      	STA $2006
08461 A9 00                         	LDA #$00
08463 8D 06 20                      	STA $2006
08466 A9 3B                             LDA #<screen9              ; load low byte of first picture
08468 85 10                             STA $10
0846A A9 AB                             LDA #>screen9              ; load high byte of first picture
0846C 85 11                             STA $11
0846E A0 00                             LDY #$00
08470 A2 04                             LDX #$04
08472 B1 10                     @NameLoop221    LDA ($10),y
08474 8D 07 20                                STA $2007
08477 C8                                      INY
08478 D0 F8                                   BNE @NameLoop221
0847A E6 11                                   INC $11
0847C CA                                      DEX
0847D D0 F3                                   BNE @NameLoop221
0847F A5 A5                                   lda $A5
08481 8D 00 20                                sta $2000
08484 60                        rts
08485                           
08485                           
08485                           Q44:
08485 A9 20                        	LDA #$20                ; set to beginning of first nametable
08487 8D 06 20                      	STA $2006
0848A A9 00                         	LDA #$00
0848C 8D 06 20                      	STA $2006
0848F A9 BA                             LDA #<pic1              ; load low byte of first picture
08491 85 10                             STA $10
08493 A9 EA                             LDA #>pic1              ; load high byte of first picture
08495 85 11                             STA $11
08497 A0 00                             LDY #$00
08499 A2 04                             LDX #$04
0849B B1 10                     @NameLoop6:    LDA ($10),y
0849D 8D 07 20                                STA $2007
084A0 C8                                      INY
084A1 D0 F8                                   BNE @NameLoop6
084A3 E6 11                                   INC $11
084A5 CA                                      DEX
084A6 D0 F3                                   BNE @NameLoop6
084A8 60                        RTS
084A9                           ;  ---------------------------------------------------------
084A9                           ;  -------------------------------------------------------------------
084A9                              ;loading the QUESTION on the QUESTION SCREEN
084A9                              ;triggered in question screen
084A9                           ;  --------------------------------------------------------------------
084A9                           
084A9                           ; Loading questions
084A9                           
084A9                           background:
084A9 A5 D4                                lda new_qst
084AB C9 01                                cmp #1
084AD D0 04                                bne @srt_qs
084AF 20 33 89                             jsr background__
084B2 60                                   rts
084B3                           @srt_qs:
084B3 A5 7C                                      lda bg
084B5 C9 01                                      cmp #1
084B7 F0 01                                      beq @new1
084B9 60                                         rts
084BA                           @new1:
084BA AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
084BD A9 20                                          LDA #$20
084BF 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
084C2 A9 86                                          LDA #$86
084C4 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
084C7 A2 00                                          LDX #$00
084C9 A4 7D                                          LDY count
084CB                                                             ; start out at 0
084CB                           @LoadBackgroundLoop11:
084CB A9 00                                         lda #%00000000
084CD 8D 01 20                                      sta $2001
084D0                           
084D0 B9 3C 92                                      LDA question1, y              ; load data from address (background + the value in x)
084D3 A6 85                                         ldx question_no
084D5 E0 00                                         cpx #0
084D7 F0 5E                                         beq @start
084D9                           
084D9 B9 D4 92                                      LDA question2, y
084DC A6 85                                         ldx question_no
084DE E0 01                                         cpx #1
084E0 F0 55                                         beq @start
084E2                           
084E2 B9 6C 93                                      LDA question3, y              ; load data from address (background + the value in x)
084E5 A6 85                                         ldx question_no
084E7 E0 02                                         cpx #2
084E9 F0 4C                                         beq @start
084EB                           
084EB B9 04 94                                      LDA question4, y              ; load data from address (background + the value in x)
084EE A6 85                                         ldx question_no
084F0 E0 03                                         cpx #3
084F2 F0 43                                         beq @start
084F4                           
084F4 B9 9C 94                                      LDA question5, y              ; load data from address (background + the value in x)
084F7 A6 85                                         ldx question_no
084F9 E0 04                                         cpx #4
084FB F0 3A                                         beq @start
084FD                           
084FD B9 34 95                                      LDA question6, y
08500 A6 85                                         ldx question_no
08502 E0 05                                         cpx #5
08504 F0 31                                         beq @start
08506                           
08506 B9 CC 95                                      LDA question7, y              ; load data from address (background + the value in x)
08509 A6 85                                         ldx question_no
0850B E0 06                                         cpx #6
0850D F0 28                                         beq @start
0850F                           
0850F B9 64 96                                      LDA question8, y              ; load data from address (background + the value in x)
08512 A6 85                                         ldx question_no
08514 E0 07                                         cpx #7
08516 F0 1F                                         beq @start
08518                           
08518 B9 FC 96                                      LDA question9, y              ; load data from address (background + the value in x)
0851B A6 85                                         ldx question_no
0851D E0 08                                         cpx #8
0851F F0 16                                         beq @start
08521                           
08521 B9 94 97                                      LDA question10, y
08524 A6 85                                         ldx question_no
08526 E0 09                                         cpx #9
08528 F0 0D                                         beq @start
0852A                                               
0852A A9 01                                         lda #1
0852C 85 D4                                         sta new_qst
0852E B9 2C 98                                      LDA question11, y              ; load data from address (background + the value in x)
08531 A6 85                                         ldx question_no
08533 E0 0A                                         cpx #10
08535 F0 00                                         beq @start
08537                           
08537                           
08537                           
08537                           
08537                           @start:
08537 8D 07 20                                      STA $2007
0853A C6 86                                         DEC count2
0853C C8                                            INY                   ; X = X + 1
0853D A9 00                                         lda #0
0853F C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08541 D0 88                                         BNE @LoadBackgroundLoop11
08543 A9 13                                         lda #19
08545 85 86                                         sta count2
08547                           
08547                           
08547 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
0854A A9 20                                          LDA #$20
0854C 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
0854F A9 C6                                          LDA #$C6
08551 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08554 A2 00                                          LDX #$00
08556                                                             ; start out at 0
08556                           @LoadBackgroundLoop12:
08556                           
08556 B9 3C 92                                      LDA question1, y              ; load data from address (background + the value in x)
08559 A6 85                                         ldx question_no
0855B E0 00                                         cpx #0
0855D F0 5A                                         beq @start1
0855F                           
0855F B9 D4 92                                      LDA question2, y
08562 A6 85                                         ldx question_no
08564 E0 01                                         cpx #1
08566 F0 51                                         beq @start1
08568                           
08568 B9 6C 93                                      LDA question3, y              ; load data from address (background + the value in x)
0856B A6 85                                         ldx question_no
0856D E0 02                                         cpx #2
0856F F0 48                                         beq @start1
08571                           
08571 B9 04 94                                      LDA question4, y              ; load data from address (background + the value in x)
08574 A6 85                                         ldx question_no
08576 E0 03                                         cpx #3
08578 F0 3F                                         beq @start1
0857A                           
0857A B9 9C 94                                      LDA question5, y              ; load data from address (background + the value in x)
0857D A6 85                                         ldx question_no
0857F E0 04                                         cpx #4
08581 F0 36                                         beq @start1
08583                           
08583 B9 34 95                                      LDA question6, y
08586 A6 85                                         ldx question_no
08588 E0 05                                         cpx #5
0858A F0 2D                                         beq @start1
0858C                           
0858C B9 CC 95                                      LDA question7, y              ; load data from address (background + the value in x)
0858F A6 85                                         ldx question_no
08591 E0 06                                         cpx #6
08593 F0 24                                         beq @start1
08595                           
08595 B9 64 96                                      LDA question8, y              ; load data from address (background + the value in x)
08598 A6 85                                         ldx question_no
0859A E0 07                                         cpx #7
0859C F0 1B                                         beq @start1
0859E                           
0859E B9 FC 96                                      LDA question9, y              ; load data from address (background + the value in x)
085A1 A6 85                                         ldx question_no
085A3 E0 08                                         cpx #8
085A5 F0 12                                         beq @start1
085A7                           
085A7 B9 94 97                                      LDA question10, y
085AA A6 85                                         ldx question_no
085AC E0 09                                         cpx #9
085AE F0 09                                         beq @start1
085B0                           
085B0 B9 2C 98                                      LDA question11, y              ; load data from address (background + the value in x)
085B3 A6 85                                         ldx question_no
085B5 E0 0A                                         cpx #10
085B7 F0 00                                         beq @start1
085B9                           
085B9                           @start1:
085B9 8D 07 20                                      STA $2007
085BC C6 86                                         DEC count2
085BE C8                                            INY                   ; X = X + 1
085BF A9 00                                         lda #0
085C1 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
085C3 D0 91                                         BNE @LoadBackgroundLoop12
085C5 A9 13                                         lda #19
085C7 85 86                                         sta count2
085C9                           
085C9                           
085C9 AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
085CC A9 21                                          LDA #$21
085CE 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
085D1 A9 06                                          LDA #$06
085D3 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
085D6 A2 00                                          LDX #$00
085D8                                                             ; start out at 0
085D8                           @LoadBackgroundLoop13:
085D8                           
085D8 B9 3C 92                                      LDA question1, y              ; load data from address (background + the value in x)
085DB A6 85                                         ldx question_no
085DD E0 00                                         cpx #0
085DF F0 5A                                         beq @start2
085E1                           
085E1 B9 D4 92                                      LDA question2, y
085E4 A6 85                                         ldx question_no
085E6 E0 01                                         cpx #1
085E8 F0 51                                         beq @start2
085EA                           
085EA B9 6C 93                                      LDA question3, y              ; load data from address (background + the value in x)
085ED A6 85                                         ldx question_no
085EF E0 02                                         cpx #2
085F1 F0 48                                         beq @start2
085F3                           
085F3 B9 04 94                                      LDA question4, y              ; load data from address (background + the value in x)
085F6 A6 85                                         ldx question_no
085F8 E0 03                                         cpx #3
085FA F0 3F                                         beq @start2
085FC                           
085FC B9 9C 94                                      LDA question5, y              ; load data from address (background + the value in x)
085FF A6 85                                         ldx question_no
08601 E0 04                                         cpx #4
08603 F0 36                                         beq @start2
08605                           
08605 B9 34 95                                      LDA question6, y
08608 A6 85                                         ldx question_no
0860A E0 05                                         cpx #5
0860C F0 2D                                         beq @start2
0860E                           
0860E B9 CC 95                                      LDA question7, y              ; load data from address (background + the value in x)
08611 A6 85                                         ldx question_no
08613 E0 06                                         cpx #6
08615 F0 24                                         beq @start2
08617                           
08617 B9 64 96                                      LDA question8, y              ; load data from address (background + the value in x)
0861A A6 85                                         ldx question_no
0861C E0 07                                         cpx #7
0861E F0 1B                                         beq @start2
08620                           
08620 B9 FC 96                                      LDA question9, y              ; load data from address (background + the value in x)
08623 A6 85                                         ldx question_no
08625 E0 08                                         cpx #8
08627 F0 12                                         beq @start2
08629                           
08629 B9 94 97                                      LDA question10, y
0862C A6 85                                         ldx question_no
0862E E0 09                                         cpx #9
08630 F0 09                                         beq @start2
08632                           
08632 B9 2C 98                                      LDA question11, y              ; load data from address (background + the value in x)
08635 A6 85                                         ldx question_no
08637 E0 0A                                         cpx #10
08639 F0 00                                         beq @start2
0863B                           
0863B                           @start2:
0863B 8D 07 20                                      STA $2007
0863E C6 86                                         DEC count2
08640 C8                                            INY                   ; X = X + 1
08641 A9 00                                         lda #0
08643 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08645 D0 91                                         BNE @LoadBackgroundLoop13
08647                           
08647 A9 1E                                         lda #%00011110
08649 8D 01 20                                      sta $2001
0864C A9 00                                         LDA #$00
0864E 8D 05 20                                      STA $2005
08651 8D 05 20                                      STA $2005
08654 A9 00                                         lda #0
08656 85 7C                                         sta bg
08658 A9 13                                         lda #19
0865A 85 86                                         sta count2
0865C A9 01                                         lda #1
0865E 85 7F                                         sta bg1
08660 84 7D                                         sty count
08662 60                                            rts
08663                           ;      -------------------------------------------------------------------
08663                           ; loading options on the question screen
08663                           background1:
08663 A5 D5                                 lda new_qst1
08665 C9 01                                 cmp #1
08667 D0 04                                 bne @srt_qs1
08669 20 22 8A                              jsr background1__
0866C 60                                    rts
0866D                           @srt_qs1:
0866D A5 7F                                      lda bg1
0866F C9 01                                      cmp #1
08671 F0 01                                      beq @new9
08673 60                                         rts
08674                           @new9:
08674 AD 02 20                                   LDA $2002             ; read PPU status to reset the high/low latch
08677 A9 21                                          LDA #$21
08679 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
0867C A9 EB                                          LDA #$EB
0867E 8D 06 20                                       STA $2006
08681 84 7D                                          sty count             ; write the low byte of $2000 address
08683                                                             ; start out at 0
08683                           @LoadBackgroundLoop29:
08683 A9 00                                         lda #%00000000
08685 8D 01 20                                      sta $2001
08688                           
08688 B9 3C 92                                      LDA question1, y              ; load data from address (background + the value in x)
0868B A6 85                                         ldx question_no
0868D E0 00                                         cpx #0
0868F F0 5E                                         beq @start91
08691                           
08691 B9 D4 92                                      LDA question2, y
08694 A6 85                                         ldx question_no
08696 E0 01                                         cpx #1
08698 F0 55                                         beq @start91
0869A                           
0869A B9 6C 93                                      LDA question3, y              ; load data from address (background + the value in x)
0869D A6 85                                         ldx question_no
0869F E0 02                                         cpx #2
086A1 F0 4C                                         beq @start91
086A3                           
086A3 B9 04 94                                      LDA question4, y              ; load data from address (background + the value in x)
086A6 A6 85                                         ldx question_no
086A8 E0 03                                         cpx #3
086AA F0 43                                         beq @start91
086AC                           
086AC B9 9C 94                                      LDA question5, y              ; load data from address (background + the value in x)
086AF A6 85                                         ldx question_no
086B1 E0 04                                         cpx #4
086B3 F0 3A                                         beq @start91
086B5                           
086B5 B9 34 95                                      LDA question6, y
086B8 A6 85                                         ldx question_no
086BA E0 05                                         cpx #5
086BC F0 31                                         beq @start91
086BE                           
086BE B9 CC 95                                      LDA question7, y              ; load data from address (background + the value in x)
086C1 A6 85                                         ldx question_no
086C3 E0 06                                         cpx #6
086C5 F0 28                                         beq @start91
086C7                           
086C7 B9 64 96                                      LDA question8, y              ; load data from address (background + the value in x)
086CA A6 85                                         ldx question_no
086CC E0 07                                         cpx #7
086CE F0 1F                                         beq @start91
086D0                           
086D0 B9 FC 96                                      LDA question9, y              ; load data from address (background + the value in x)
086D3 A6 85                                         ldx question_no
086D5 E0 08                                         cpx #8
086D7 F0 16                                         beq @start91
086D9                           
086D9 B9 94 97                                      LDA question10, y
086DC A6 85                                         ldx question_no
086DE E0 09                                         cpx #9
086E0 F0 0D                                         beq @start91
086E2                           
086E2 A9 01                                         LDA #1
086E4 85 D5                                         STA new_qst1
086E6 B9 2C 98                                      LDA question11, y              ; load data from address (background + the value in x)
086E9 A6 85                                         ldx question_no
086EB E0 0A                                         cpx #10
086ED F0 00                                         beq @start91
086EF                           
086EF                           @start91:
086EF 8D 07 20                                      STA $2007
086F2 C6 86                                         DEC count2
086F4 C8                                            INY                   ; X = X + 1
086F5 A9 00                                         lda #0
086F7 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
086F9 D0 88                                         BNE @LoadBackgroundLoop29
086FB A9 13                                         lda #19
086FD 85 86                                         sta count2
086FF                           
086FF                           
086FF AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08702 A9 22                                          LDA #$22
08704 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08707 A9 8B                                          LDA #$8B
08709 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
0870C A2 00                                          LDX #$00
0870E                                                             ; start out at 0
0870E AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08711 A9 22                                          LDA #$22
08713 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08716 A9 4B                                          LDA #$4B
08718 8D 06 20                                       STA $2006
0871B 84 7D                                          sty count             ; write the low byte of $2000 address
0871D                                                             ; start out at 0
0871D                           @LoadBackgroundLoop19:
0871D A9 00                                         lda #%00000000
0871F 8D 01 20                                      sta $2001
08722                           
08722 B9 3C 92                                      LDA question1, y              ; load data from address (background + the value in x)
08725 A6 85                                         ldx question_no
08727 E0 00                                         cpx #0
08729 F0 5A                                         beq @start9
0872B                           
0872B B9 D4 92                                      LDA question2, y
0872E A6 85                                         ldx question_no
08730 E0 01                                         cpx #1
08732 F0 51                                         beq @start9
08734                           
08734 B9 6C 93                                      LDA question3, y              ; load data from address (background + the value in x)
08737 A6 85                                         ldx question_no
08739 E0 02                                         cpx #2
0873B F0 48                                         beq @start9
0873D                           
0873D B9 04 94                                      LDA question4, y              ; load data from address (background + the value in x)
08740 A6 85                                         ldx question_no
08742 E0 03                                         cpx #3
08744 F0 3F                                         beq @start9
08746                           
08746 B9 9C 94                                      LDA question5, y              ; load data from address (background + the value in x)
08749 A6 85                                         ldx question_no
0874B E0 04                                         cpx #4
0874D F0 36                                         beq @start9
0874F                           
0874F B9 34 95                                      LDA question6, y
08752 A6 85                                         ldx question_no
08754 E0 05                                         cpx #5
08756 F0 2D                                         beq @start9
08758                           
08758 B9 CC 95                                      LDA question7, y              ; load data from address (background + the value in x)
0875B A6 85                                         ldx question_no
0875D E0 06                                         cpx #6
0875F F0 24                                         beq @start9
08761                           
08761 B9 64 96                                      LDA question8, y              ; load data from address (background + the value in x)
08764 A6 85                                         ldx question_no
08766 E0 07                                         cpx #7
08768 F0 1B                                         beq @start9
0876A                           
0876A B9 FC 96                                      LDA question9, y              ; load data from address (background + the value in x)
0876D A6 85                                         ldx question_no
0876F E0 08                                         cpx #8
08771 F0 12                                         beq @start9
08773                           
08773 B9 94 97                                      LDA question10, y
08776 A6 85                                         ldx question_no
08778 E0 09                                         cpx #9
0877A F0 09                                         beq @start9
0877C                           
0877C B9 2C 98                                      LDA question11, y              ; load data from address (background + the value in x)
0877F A6 85                                         ldx question_no
08781 E0 0A                                         cpx #10
08783 F0 00                                         beq @start9
08785                           
08785                           @start9:
08785 8D 07 20                                      STA $2007
08788 C6 86                                         DEC count2
0878A C8                                            INY                   ; X = X + 1
0878B A9 00                                         lda #0
0878D C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
0878F D0 8C                                         BNE @LoadBackgroundLoop19
08791 A9 13                                         lda #19
08793 85 86                                         sta count2
08795                           
08795                           
08795 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08798 A9 22                                          LDA #$22
0879A 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
0879D A9 8B                                          LDA #$8B
0879F 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
087A2 A2 00                                          LDX #$00
087A4                                                             ; start out at 0
087A4                           @LoadBackgroundLoop18:
087A4                           
087A4 B9 3C 92                                      LDA question1, y              ; load data from address (background + the value in x)
087A7 A6 85                                         ldx question_no
087A9 E0 00                                         cpx #0
087AB F0 5A                                         beq @start8
087AD                           
087AD B9 D4 92                                      LDA question2, y
087B0 A6 85                                         ldx question_no
087B2 E0 01                                         cpx #1
087B4 F0 51                                         beq @start8
087B6                           
087B6 B9 6C 93                                      LDA question3, y              ; load data from address (background + the value in x)
087B9 A6 85                                         ldx question_no
087BB E0 02                                         cpx #2
087BD F0 48                                         beq @start8
087BF                           
087BF B9 04 94                                      LDA question4, y              ; load data from address (background + the value in x)
087C2 A6 85                                         ldx question_no
087C4 E0 03                                         cpx #3
087C6 F0 3F                                         beq @start8
087C8                           
087C8 B9 9C 94                                      LDA question5, y              ; load data from address (background + the value in x)
087CB A6 85                                         ldx question_no
087CD E0 04                                         cpx #4
087CF F0 36                                         beq @start8
087D1                           
087D1 B9 34 95                                      LDA question6, y
087D4 A6 85                                         ldx question_no
087D6 E0 05                                         cpx #5
087D8 F0 2D                                         beq @start8
087DA                           
087DA B9 CC 95                                      LDA question7, y              ; load data from address (background + the value in x)
087DD A6 85                                         ldx question_no
087DF E0 06                                         cpx #6
087E1 F0 24                                         beq @start8
087E3                           
087E3 B9 64 96                                      LDA question8, y              ; load data from address (background + the value in x)
087E6 A6 85                                         ldx question_no
087E8 E0 07                                         cpx #7
087EA F0 1B                                         beq @start8
087EC                           
087EC B9 FC 96                                      LDA question9, y              ; load data from address (background + the value in x)
087EF A6 85                                         ldx question_no
087F1 E0 08                                         cpx #8
087F3 F0 12                                         beq @start8
087F5                           
087F5 B9 94 97                                      LDA question10, y
087F8 A6 85                                         ldx question_no
087FA E0 09                                         cpx #9
087FC F0 09                                         beq @start8
087FE                           
087FE B9 2C 98                                      LDA question11, y              ; load data from address (background + the value in x)
08801 A6 85                                         ldx question_no
08803 E0 0A                                         cpx #10
08805 F0 00                                         beq @start8
08807                           
08807                           @start8:
08807 8D 07 20                                      STA $2007
0880A C6 86                                         DEC count2
0880C C8                                            INY                   ; X = X + 1
0880D A9 00                                         lda #0
0880F C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08811 D0 91                                         BNE @LoadBackgroundLoop18
08813 A9 13                                         lda #19
08815 85 86                                         sta count2
08817                           
08817                           
08817 AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
0881A A9 22                                          LDA #$22
0881C 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
0881F A9 CB                                          LDA #$CB
08821 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08824 A2 00                                          LDX #$00
08826                                                             ; start out at 0
08826                           @LoadBackgroundLoop17:
08826                           
08826 B9 3C 92                                      LDA question1, y              ; load data from address (background + the value in x)
08829 A6 85                                         ldx question_no
0882B E0 00                                         cpx #0
0882D F0 5A                                         beq @start7
0882F                           
0882F B9 D4 92                                      LDA question2, y
08832 A6 85                                         ldx question_no
08834 E0 01                                         cpx #1
08836 F0 51                                         beq @start7
08838                           
08838 B9 6C 93                                      LDA question3, y              ; load data from address (background + the value in x)
0883B A6 85                                         ldx question_no
0883D E0 02                                         cpx #2
0883F F0 48                                         beq @start7
08841                           
08841 B9 04 94                                      LDA question4, y              ; load data from address (background + the value in x)
08844 A6 85                                         ldx question_no
08846 E0 03                                         cpx #3
08848 F0 3F                                         beq @start7
0884A                           
0884A B9 9C 94                                      LDA question5, y              ; load data from address (background + the value in x)
0884D A6 85                                         ldx question_no
0884F E0 04                                         cpx #4
08851 F0 36                                         beq @start7
08853                           
08853 B9 34 95                                      LDA question6, y
08856 A6 85                                         ldx question_no
08858 E0 05                                         cpx #5
0885A F0 2D                                         beq @start7
0885C                           
0885C B9 CC 95                                      LDA question7, y              ; load data from address (background + the value in x)
0885F A6 85                                         ldx question_no
08861 E0 06                                         cpx #6
08863 F0 24                                         beq @start7
08865                           
08865 B9 64 96                                      LDA question8, y              ; load data from address (background + the value in x)
08868 A6 85                                         ldx question_no
0886A E0 07                                         cpx #7
0886C F0 1B                                         beq @start7
0886E                           
0886E B9 FC 96                                      LDA question9, y              ; load data from address (background + the value in x)
08871 A6 85                                         ldx question_no
08873 E0 08                                         cpx #8
08875 F0 12                                         beq @start7
08877                           
08877 B9 94 97                                      LDA question10, y
0887A A6 85                                         ldx question_no
0887C E0 09                                         cpx #9
0887E F0 09                                         beq @start7
08880                           
08880 B9 2C 98                                      LDA question11, y              ; load data from address (background + the value in x)
08883 A6 85                                         ldx question_no
08885 E0 0A                                         cpx #10
08887 F0 00                                         beq @start7
08889                           
08889                           @start7:
08889 8D 07 20                                      STA $2007
0888C C6 86                                         DEC count2
0888E C8                                            INY                   ; X = X + 1
0888F A9 00                                         lda #0
08891 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08893 D0 91                                         BNE @LoadBackgroundLoop17
08895                           
08895 A9 13                                         lda #19
08897 85 86                                         sta count2
08899                           
08899 AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
0889C A9 23                                          LDA #$23
0889E 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
088A1 A9 0B                                          LDA #$0B
088A3 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
088A6 A2 00                                          LDX #$00
088A8                                                             ; start out at 0
088A8                           @LoadBackgroundLoop16:
088A8                           
088A8 B9 3C 92                                      LDA question1, y              ; load data from address (background + the value in x)
088AB A6 85                                         ldx question_no
088AD E0 00                                         cpx #0
088AF F0 5A                                         beq @start6
088B1                           
088B1 B9 D4 92                                      LDA question2, y
088B4 A6 85                                         ldx question_no
088B6 E0 01                                         cpx #1
088B8 F0 51                                         beq @start6
088BA                           
088BA B9 6C 93                                      LDA question3, y              ; load data from address (background + the value in x)
088BD A6 85                                         ldx question_no
088BF E0 02                                         cpx #2
088C1 F0 48                                         beq @start6
088C3                           
088C3 B9 04 94                                      LDA question4, y              ; load data from address (background + the value in x)
088C6 A6 85                                         ldx question_no
088C8 E0 03                                         cpx #3
088CA F0 3F                                         beq @start6
088CC                           
088CC B9 9C 94                                      LDA question5, y              ; load data from address (background + the value in x)
088CF A6 85                                         ldx question_no
088D1 E0 04                                         cpx #4
088D3 F0 36                                         beq @start6
088D5                           
088D5 B9 34 95                                      LDA question6, y
088D8 A6 85                                         ldx question_no
088DA E0 05                                         cpx #5
088DC F0 2D                                         beq @start6
088DE                           
088DE B9 CC 95                                      LDA question7, y              ; load data from address (background + the value in x)
088E1 A6 85                                         ldx question_no
088E3 E0 06                                         cpx #6
088E5 F0 24                                         beq @start6
088E7                           
088E7 B9 64 96                                      LDA question8, y              ; load data from address (background + the value in x)
088EA A6 85                                         ldx question_no
088EC E0 07                                         cpx #7
088EE F0 1B                                         beq @start6
088F0                           
088F0 B9 FC 96                                      LDA question9, y              ; load data from address (background + the value in x)
088F3 A6 85                                         ldx question_no
088F5 E0 08                                         cpx #8
088F7 F0 12                                         beq @start6
088F9                           
088F9 B9 94 97                                      LDA question10, y
088FC A6 85                                         ldx question_no
088FE E0 09                                         cpx #9
08900 F0 09                                         beq @start6
08902                           
08902 B9 2C 98                                      LDA question11, y              ; load data from address (background + the value in x)
08905 A6 85                                         ldx question_no
08907 E0 0A                                         cpx #10
08909 F0 00                                         beq @start6
0890B                           
0890B                           @start6:
0890B 8D 07 20                                      STA $2007
0890E C6 86                                         DEC count2
08910 C8                                            INY                   ; X = X + 1
08911 A9 00                                         lda #0
08913 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08915 D0 91                                         BNE @LoadBackgroundLoop16
08917                           
08917                           
08917 A9 1E                                         lda #%00011110
08919 8D 01 20                                      sta $2001
0891C A9 00                                         LDA #$00
0891E 8D 05 20                                      STA $2005
08921 8D 05 20                                      STA $2005
08924 A9 00                                         lda #0
08926 85 7F                                         sta bg1
08928 A9 00                                         lda #00
0892A 85 7D                                         sta count
0892C A9 13                                         lda #19
0892E 85 86                                         sta count2
08930 E6 85                                         inc question_no
08932 60                                            rts
08933                           ;;;;;               ----------------------------------------------------------------------------------------------
08933                           background__:
08933 A5 7C                                      lda bg
08935 C9 01                                      cmp #1
08937 F0 01                                      beq @new1
08939 60                                         rts
0893A                           @new1:
0893A AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
0893D A9 20                                          LDA #$20
0893F 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08942 A9 86                                          LDA #$86
08944 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08947 A2 00                                          LDX #$00
08949 A4 7D                                          LDY count
0894B                                                             ; start out at 0
0894B                           @LoadBackgroundLoop11:
0894B A9 00                                         lda #%00000000
0894D 8D 01 20                                      sta $2001
08950                           
08950 B9 C4 98                                      LDA question12, y              ; load data from address (background + the value in x)
08953 A6 85                                         ldx question_no
08955 E0 0B                                         cpx #11
08957 F0 1B                                         beq @start
08959                           
08959 B9 5C 99                                      LDA question13, y
0895C A6 85                                         ldx question_no
0895E E0 0C                                         cpx #12
08960 F0 12                                         beq @start
08962                           
08962 B9 F4 99                                      LDA question14, y              ; load data from address (background + the value in x)
08965 A6 85                                         ldx question_no
08967 E0 0D                                         cpx #13
08969 F0 09                                         beq @start
0896B                           
0896B B9 8C 9A                                      LDA question15, y              ; load data from address (background + the value in x)
0896E A6 85                                         ldx question_no
08970 E0 0E                                         cpx #14
08972 F0 00                                         beq @start
08974                           
08974                           @start:
08974 8D 07 20                                      STA $2007
08977 C6 86                                         DEC count2
08979 C8                                            INY                   ; X = X + 1
0897A A9 00                                         lda #0
0897C C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
0897E D0 CB                                         BNE @LoadBackgroundLoop11
08980 A9 13                                         lda #19
08982 85 86                                         sta count2
08984                           
08984                           
08984 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08987 A9 20                                          LDA #$20
08989 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
0898C A9 C6                                          LDA #$C6
0898E 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08991 A2 00                                          LDX #$00
08993                                                             ; start out at 0
08993                           @LoadBackgroundLoop12:
08993                           
08993 B9 C4 98                                      LDA question12, y              ; load data from address (background + the value in x)
08996 A6 85                                         ldx question_no
08998 E0 0B                                         cpx #11
0899A F0 1B                                         beq @start1
0899C                           
0899C B9 5C 99                                      LDA question13, y
0899F A6 85                                         ldx question_no
089A1 E0 0C                                         cpx #12
089A3 F0 12                                         beq @start1
089A5                           
089A5 B9 F4 99                                      LDA question14, y              ; load data from address (background + the value in x)
089A8 A6 85                                         ldx question_no
089AA E0 0D                                         cpx #13
089AC F0 09                                         beq @start1
089AE                           
089AE B9 8C 9A                                      LDA question15, y              ; load data from address (background + the value in x)
089B1 A6 85                                         ldx question_no
089B3 E0 0E                                         cpx #14
089B5 F0 00                                         beq @start1
089B7                           
089B7                           @start1:
089B7 8D 07 20                                      STA $2007
089BA C6 86                                         DEC count2
089BC C8                                            INY                   ; X = X + 1
089BD A9 00                                         lda #0
089BF C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
089C1 D0 D0                                         BNE @LoadBackgroundLoop12
089C3 A9 13                                         lda #19
089C5 85 86                                         sta count2
089C7                           
089C7                           
089C7 AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
089CA A9 21                                          LDA #$21
089CC 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
089CF A9 06                                          LDA #$06
089D1 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
089D4 A2 00                                          LDX #$00
089D6                                                             ; start out at 0
089D6                           @LoadBackgroundLoop13:
089D6                           
089D6 B9 C4 98                                      LDA question12, y              ; load data from address (background + the value in x)
089D9 A6 85                                         ldx question_no
089DB E0 0B                                         cpx #11
089DD F0 1B                                         beq @start2
089DF                           
089DF B9 5C 99                                      LDA question13, y
089E2 A6 85                                         ldx question_no
089E4 E0 0C                                         cpx #12
089E6 F0 12                                         beq @start2
089E8                           
089E8 B9 F4 99                                      LDA question14, y              ; load data from address (background + the value in x)
089EB A6 85                                         ldx question_no
089ED E0 0D                                         cpx #13
089EF F0 09                                         beq @start2
089F1                           
089F1 B9 8C 9A                                      LDA question15, y              ; load data from address (background + the value in x)
089F4 A6 85                                         ldx question_no
089F6 E0 0E                                         cpx #14
089F8 F0 00                                         beq @start2
089FA                           
089FA                           @start2:
089FA 8D 07 20                                      STA $2007
089FD C6 86                                         DEC count2
089FF C8                                            INY                   ; X = X + 1
08A00 A9 00                                         lda #0
08A02 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08A04 D0 D0                                         BNE @LoadBackgroundLoop13
08A06                           
08A06 A9 1E                                         lda #%00011110
08A08 8D 01 20                                      sta $2001
08A0B A9 00                                         LDA #$00
08A0D 8D 05 20                                      STA $2005
08A10 8D 05 20                                      STA $2005
08A13 A9 00                                         lda #0
08A15 85 7C                                         sta bg
08A17 A9 13                                         lda #19
08A19 85 86                                         sta count2
08A1B A9 01                                         lda #1
08A1D 85 7F                                         sta bg1
08A1F 84 7D                                         sty count
08A21 60                                            rts
08A22                           ;      -------------------------------------------------------------------
08A22                           ; loading options on the question screen
08A22                           background1__:
08A22 A5 7F                                      lda bg1
08A24 C9 01                                      cmp #1
08A26 F0 01                                      beq @new9
08A28 60                                         rts
08A29                           @new9:
08A29 AD 02 20                                   LDA $2002             ; read PPU status to reset the high/low latch
08A2C A9 21                                          LDA #$21
08A2E 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08A31 A9 EB                                          LDA #$EB
08A33 8D 06 20                                       STA $2006
08A36 84 7D                                          sty count             ; write the low byte of $2000 address
08A38                                                             ; start out at 0
08A38                           @LoadBackgroundLoop29:
08A38 A9 00                                         lda #%00000000
08A3A 8D 01 20                                      sta $2001
08A3D                           
08A3D B9 C4 98                                      LDA question12, y              ; load data from address (background + the value in x)
08A40 A6 85                                         ldx question_no
08A42 E0 0B                                         cpx #11
08A44 F0 1B                                         beq @start91
08A46                           
08A46 B9 5C 99                                      LDA question13, y
08A49 A6 85                                         ldx question_no
08A4B E0 0C                                         cpx #12
08A4D F0 12                                         beq @start91
08A4F                           
08A4F B9 F4 99                                      LDA question14, y              ; load data from address (background + the value in x)
08A52 A6 85                                         ldx question_no
08A54 E0 0D                                         cpx #13
08A56 F0 09                                         beq @start91
08A58                           
08A58 B9 8C 9A                                      LDA question15, y              ; load data from address (background + the value in x)
08A5B A6 85                                         ldx question_no
08A5D E0 0E                                         cpx #14
08A5F F0 00                                         beq @start91
08A61                           
08A61                           @start91:
08A61 8D 07 20                                      STA $2007
08A64 C6 86                                         DEC count2
08A66 C8                                            INY                   ; X = X + 1
08A67 A9 00                                         lda #0
08A69 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08A6B D0 CB                                         BNE @LoadBackgroundLoop29
08A6D A9 13                                         lda #19
08A6F 85 86                                         sta count2
08A71                           
08A71                           
08A71 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08A74 A9 22                                          LDA #$22
08A76 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08A79 A9 8B                                          LDA #$8B
08A7B 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08A7E A2 00                                          LDX #$00
08A80                                                             ; start out at 0
08A80 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08A83 A9 22                                          LDA #$22
08A85 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08A88 A9 4B                                          LDA #$4B
08A8A 8D 06 20                                       STA $2006
08A8D 84 7D                                          sty count             ; write the low byte of $2000 address
08A8F                                                             ; start out at 0
08A8F                           @LoadBackgroundLoop19:
08A8F A9 00                                         lda #%00000000
08A91 8D 01 20                                      sta $2001
08A94                           
08A94 B9 C4 98                                      LDA question12, y              ; load data from address (background + the value in x)
08A97 A6 85                                         ldx question_no
08A99 E0 0B                                         cpx #11
08A9B F0 1B                                         beq @start9
08A9D                           
08A9D B9 5C 99                                      LDA question13, y
08AA0 A6 85                                         ldx question_no
08AA2 E0 0C                                         cpx #12
08AA4 F0 12                                         beq @start9
08AA6                           
08AA6 B9 F4 99                                      LDA question14, y              ; load data from address (background + the value in x)
08AA9 A6 85                                         ldx question_no
08AAB E0 0D                                         cpx #13
08AAD F0 09                                         beq @start9
08AAF                           
08AAF B9 8C 9A                                      LDA question15, y              ; load data from address (background + the value in x)
08AB2 A6 85                                         ldx question_no
08AB4 E0 0E                                         cpx #14
08AB6 F0 00                                         beq @start9
08AB8                           
08AB8                           @start9:
08AB8 8D 07 20                                      STA $2007
08ABB C6 86                                         DEC count2
08ABD C8                                            INY                   ; X = X + 1
08ABE A9 00                                         lda #0
08AC0 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08AC2 D0 CB                                         BNE @LoadBackgroundLoop19
08AC4 A9 13                                         lda #19
08AC6 85 86                                         sta count2
08AC8                           
08AC8                           
08AC8 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08ACB A9 22                                          LDA #$22
08ACD 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08AD0 A9 8B                                          LDA #$8B
08AD2 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08AD5 A2 00                                          LDX #$00
08AD7                                                             ; start out at 0
08AD7                           @LoadBackgroundLoop18:
08AD7                           
08AD7 B9 C4 98                                      LDA question12, y              ; load data from address (background + the value in x)
08ADA A6 85                                         ldx question_no
08ADC E0 0B                                         cpx #11
08ADE F0 1B                                         beq @start8
08AE0                           
08AE0 B9 5C 99                                      LDA question13, y
08AE3 A6 85                                         ldx question_no
08AE5 E0 0C                                         cpx #12
08AE7 F0 12                                         beq @start8
08AE9                           
08AE9 B9 F4 99                                      LDA question14, y              ; load data from address (background + the value in x)
08AEC A6 85                                         ldx question_no
08AEE E0 0D                                         cpx #13
08AF0 F0 09                                         beq @start8
08AF2                           
08AF2 B9 8C 9A                                      LDA question15, y              ; load data from address (background + the value in x)
08AF5 A6 85                                         ldx question_no
08AF7 E0 0E                                         cpx #14
08AF9 F0 00                                         beq @start8
08AFB                           
08AFB                           @start8:
08AFB 8D 07 20                                      STA $2007
08AFE C6 86                                         DEC count2
08B00 C8                                            INY                   ; X = X + 1
08B01 A9 00                                         lda #0
08B03 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08B05 D0 D0                                         BNE @LoadBackgroundLoop18
08B07 A9 13                                         lda #19
08B09 85 86                                         sta count2
08B0B                           
08B0B                           
08B0B AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
08B0E A9 22                                          LDA #$22
08B10 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08B13 A9 CB                                          LDA #$CB
08B15 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08B18 A2 00                                          LDX #$00
08B1A                                                             ; start out at 0
08B1A                           @LoadBackgroundLoop17:
08B1A                           
08B1A B9 C4 98                                      LDA question12, y              ; load data from address (background + the value in x)
08B1D A6 85                                         ldx question_no
08B1F E0 0B                                         cpx #11
08B21 F0 1B                                         beq @start7
08B23                           
08B23 B9 5C 99                                      LDA question13, y
08B26 A6 85                                         ldx question_no
08B28 E0 0C                                         cpx #12
08B2A F0 12                                         beq @start7
08B2C                           
08B2C B9 F4 99                                      LDA question14, y              ; load data from address (background + the value in x)
08B2F A6 85                                         ldx question_no
08B31 E0 0D                                         cpx #13
08B33 F0 09                                         beq @start7
08B35                           
08B35 B9 8C 9A                                      LDA question15, y              ; load data from address (background + the value in x)
08B38 A6 85                                         ldx question_no
08B3A E0 0E                                         cpx #14
08B3C F0 00                                         beq @start7
08B3E                           
08B3E                           @start7:
08B3E 8D 07 20                                      STA $2007
08B41 C6 86                                         DEC count2
08B43 C8                                            INY                   ; X = X + 1
08B44 A9 00                                         lda #0
08B46 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08B48 D0 D0                                         BNE @LoadBackgroundLoop17
08B4A                           
08B4A A9 13                                         lda #19
08B4C 85 86                                         sta count2
08B4E                           
08B4E AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
08B51 A9 23                                          LDA #$23
08B53 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08B56 A9 0B                                          LDA #$0B
08B58 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08B5B A2 00                                          LDX #$00
08B5D                                                             ; start out at 0
08B5D                           @LoadBackgroundLoop16:
08B5D                           
08B5D B9 C4 98                                      LDA question12, y              ; load data from address (background + the value in x)
08B60 A6 85                                         ldx question_no
08B62 E0 0B                                         cpx #11
08B64 F0 1B                                         beq @start6
08B66                           
08B66 B9 5C 99                                      LDA question13, y
08B69 A6 85                                         ldx question_no
08B6B E0 0C                                         cpx #12
08B6D F0 12                                         beq @start6
08B6F                           
08B6F B9 F4 99                                      LDA question14, y              ; load data from address (background + the value in x)
08B72 A6 85                                         ldx question_no
08B74 E0 0D                                         cpx #13
08B76 F0 09                                         beq @start6
08B78                           
08B78 B9 8C 9A                                      LDA question15, y              ; load data from address (background + the value in x)
08B7B A6 85                                         ldx question_no
08B7D E0 0E                                         cpx #14
08B7F F0 00                                         beq @start6
08B81                           
08B81                           @start6:
08B81 8D 07 20                                      STA $2007
08B84 C6 86                                         DEC count2
08B86 C8                                            INY                   ; X = X + 1
08B87 A9 00                                         lda #0
08B89 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08B8B D0 D0                                         BNE @LoadBackgroundLoop16
08B8D                           
08B8D                           
08B8D A9 1E                                         lda #%00011110
08B8F 8D 01 20                                      sta $2001
08B92 A9 00                                         LDA #$00
08B94 8D 05 20                                      STA $2005
08B97 8D 05 20                                      STA $2005
08B9A A9 00                                         lda #0
08B9C 85 7F                                         sta bg1
08B9E A9 00                                         lda #00
08BA0 85 7D                                         sta count
08BA2 A9 13                                         lda #19
08BA4 85 86                                         sta count2
08BA6 E6 85                                         inc question_no
08BA8 60                                            rts
08BA9                           ;;;;         -----------------------------------------
08BA9                           delay_cal2:
08BA9 A5 A1                               lda trigger_delay2
08BAB C9 01                               cmp #1
08BAD D0 24                               bne @end124
08BAF E6 A0                               inc delayy
08BB1 A5 A0                               lda delayy
08BB3 C9 64                               cmp #100
08BB5 D0 1C                               bne @end124
08BB7 A9 00                               lda #0
08BB9 85 A1                               sta trigger_delay2
08BBB 85 A0                               sta delayy
08BBD 20 C5 E3                            jsr ClearSprites11
08BC0 A9 00                               lda #0
08BC2 85 B5                               sta go0
08BC4 85 6B                               sta go
08BC6 85 6C                               sta bo
08BC8 85 A8                               sta $A8
08BCA 85 A7                               sta $A7
08BCC 85 18                               sta scro
08BCE 85 A6                               sta $A6
08BD0 4C D4 8B                            jmp @incorrect1
08BD3                           @end124
08BD3                           
08BD3                           
08BD3                           
08BD3 60                                rts
08BD4                                   
08BD4                           
08BD4                           
08BD4                           ;       -----------------------------------------------------------
08BD4                           ;        loading back the screen after correct ans is given
08BD4                           
08BD4                           
08BD4                           ;       -----------------------------------------
08BD4                           ;        loading the screen after giving incorrect answer
08BD4                           @incorrect1:
08BD4                                      ;lda #0
08BD4                                      ;sta wrongans
08BD4 A9 50                                lda #80
08BD6 85 97                                sta delay
08BD8 A9 01                                lda #1
08BDA 85 B8                                STA icq0
08BDC                           back_to_gamet:
08BDC E6 77                                inc question_count
08BDE 20 FF DA                             jsr palchange
08BE1 A9 01                                LDA #$01
08BE3 20 04 C2                             JSR setCHRPage0000
08BE6 A9 03                                LDA #$03
08BE8 20 18 C2                             JSR setCHRPage1000
08BEB A9 00                                lda #0
08BED 8D 01 20                             sta $2001
08BF0 85 AD                                sta $ad
08BF2                           
08BF2 A5 A9                                  lda $A9
08BF4 C9 00                                  cmp #0
08BF6 D0 06                     @abv1         bne @nex15       
08BF8 20 81 8C                               jsr mainscreen1
08BFB 4C 42 8C                               jmp @nex13
08BFE C9 01                     @nex15        cmp #1
08C00 D0 06                                  bne @nex14
08C02 20 CE 91                  @nex16        jsr screenchange11
08C05 4C 0F 8C                               jmp @nex17
08C08 C9 02                     @nex14        cmp #2
08C0A D0 03                                  bne @nex17
08C0C 4C 02 8C                               jmp @nex16
08C0F C9 03                     @nex17       cmp #3
08C11 D0 06                                  bne @nex18
08C13 20 0A 84                  @nex19       jsr screenchange5
08C16 4C 20 8C                               jmp @nex20
08C19 C9 04                     @nex18       cmp #4
08C1B D0 03                                  bne @nex20
08C1D 4C 13 8C                               jmp @nex19
08C20 C9 05                     @nex20       cmp #5
08C22 D0 06                                  bne @nex21
08C24 20 33 84                  @nex22       jsr screenchange7
08C27 4C 42 8C                               jmp @nex13
08C2A C9 06                     @nex21       cmp #6
08C2C D0 03                                  bne @nex23
08C2E 4C 24 8C                               jmp @nex22
08C31 C9 07                     @nex23       cmp #7
08C33 D0 06                                  bne @nex24
08C35 20 5C 84                  @nex25       jsr screenchange9
08C38 4C 42 8C                               jmp @nex13
08C3B C9 08                     @nex24       cmp #8
08C3D D0 03                                  bne @nex13
08C3F 4C 35 8C                               jmp @nex25
08C42                           @nex13 :
08C42 A5 AB                                lda $AB
08C44 85 A3                                sta $A3
08C46 A5 AC                                lda $AC
08C48 85 A4                                sta $A4
08C4A A5 A5                                lda $A5
08C4C 8D 00 20                             sta $2000
08C4F A9 1E                                lda #%00011110
08C51 8D 01 20                             sta $2001
08C54 20 B5 C1                             jsr update_sprites
08C57 A9 00                                lda #0
08C59 85 7E                                sta qq
08C5B A9 00                                lda #0
08C5D 85 7A                                sta control
08C5F                             ;;;;;;;;;;;;;
08C5F A9 FE                                lda #$fe
08C61 8D 00 05                             sta $500
08C64 8D 04 05                             sta $504
08C67 8D 08 05                             sta $508
08C6A 8D 0C 05                             sta $50C
08C6D 8D 10 05                             sta $510
08C70 8D 14 05                             sta $514
08C73 8D 18 05                             sta $518
08C76 A9 00                                lda #0
08C78 85 76                                sta random_enable
08C7A A9 01                                lda #1
08C7C                                     ; sta icq0
08C7C 85 74                                sta cbb
08C7E 85 CF                                sta trig_controller1
08C80 60                                   rts
08C81                              mainscreen1:
08C81 A9 20                        	LDA #$20                ; set to beginning of first nametable
08C83 8D 06 20                      	STA $2006
08C86 A9 00                         	LDA #$00
08C88 8D 06 20                      	STA $2006
08C8B A9 3B                             LDA #<screen1              ; load low byte of first picture
08C8D 85 10                             STA $10
08C8F A9 9B                             LDA #>screen1              ; load high byte of first picture
08C91 85 11                             STA $11
08C93 A0 00                             LDY #$00
08C95 A2 04                             LDX #$04
08C97 B1 10                     @NameLoop22:    LDA ($10),y
08C99 8D 07 20                                STA $2007
08C9C C8                                      INY
08C9D D0 F8                                   BNE @NameLoop22
08C9F E6 11                                   INC $11
08CA1 CA                                      DEX
08CA2 D0 F3                                   BNE @NameLoop22
08CA4 A5 A5                                   lda $A5
08CA6 8D 00 20                                sta $2000
08CA9 A9 EF                                   lda #239
08CAB 85 A4                                   sta $A4
08CAD 60                        rts
08CAE                           
08CAE                           ;       -----------------------------------------------------------------------
08CAE                           delay_cal:
08CAE A5 9F                               lda trigger_delay
08CB0 C9 01                               cmp #1
08CB2 D0 20                               bne @end123
08CB4 E6 A0                               inc delayy
08CB6 A5 A0                               lda delayy
08CB8 C9 64                               cmp #100
08CBA D0 18                               bne @end123
08CBC A9 00                               lda #0
08CBE 85 9F                               sta trigger_delay
08CC0 85 A0                               sta delayy
08CC2 A9 01                               lda #1
08CC4 85 B7                               STA cq0
08CC6 20 C5 E3                            jsr ClearSprites11
08CC9 A9 0A                               lda #10
08CCB 85 A8                               sta $A8
08CCD                                     ;sta scrollup_act
08CCD                                     ;sta scro
08CCD A9 B4                               lda #180
08CCF 85 A6                               sta $A6
08CD1 4C DC 8B                            jmp back_to_gamet
08CD4 60                        @end123: rts;-------------------------------------------------------------------
08CD5                           @back_to_game:
08CD5 E6 77                                  inc question_count
08CD7 20 FF DA                               jsr palchange
08CDA A9 01                                  LDA #$01
08CDC 20 04 C2                               JSR setCHRPage0000
08CDF A9 03                                  LDA #$03
08CE1 20 18 C2                               JSR setCHRPage1000
08CE4 A9 00                                  lda #0
08CE6 8D 01 20                               sta $2001
08CE9 85 AD                                  sta $ad
08CEB A5 A9                                  lda $A9
08CED C9 00                                  cmp #0
08CEF D0 06                     @abv1         bne @nex15       
08CF1 20 81 8C                               jsr mainscreen1
08CF4 4C 3B 8D                               jmp @nex13
08CF7 C9 01                     @nex15        cmp #1
08CF9 D0 06                                  bne @nex14
08CFB 20 CE 91                  @nex16        jsr screenchange11
08CFE 4C 08 8D                               jmp @nex17
08D01 C9 02                     @nex14        cmp #2
08D03 D0 03                                  bne @nex17
08D05 4C FB 8C                               jmp @nex16
08D08 C9 03                     @nex17       cmp #3
08D0A D0 06                                  bne @nex18
08D0C 20 0A 84                  @nex19       jsr screenchange5
08D0F 4C 19 8D                               jmp @nex20
08D12 C9 04                     @nex18       cmp #4
08D14 D0 03                                  bne @nex20
08D16 4C 0C 8D                               jmp @nex19
08D19 C9 05                     @nex20       cmp #5
08D1B D0 06                                  bne @nex21
08D1D 20 33 84                  @nex22       jsr screenchange7
08D20 4C 3B 8D                               jmp @nex13
08D23 C9 06                     @nex21       cmp #6
08D25 D0 03                                  bne @nex23
08D27 4C 1D 8D                               jmp @nex22
08D2A C9 07                     @nex23       cmp #7
08D2C D0 06                                  bne @nex24
08D2E 20 5C 84                  @nex25       jsr screenchange9
08D31 4C 3B 8D                               jmp @nex13
08D34 C9 08                     @nex24       cmp #8
08D36 D0 03                                  bne @nex13
08D38 4C 2E 8D                               jmp @nex25
08D3B A5 AB                     @nex13       lda $AB
08D3D 85 A3                                  sta $A3
08D3F A5 AC                                  lda $AC
08D41 85 A4                                  sta $A4
08D43 A9 1E                                  lda #%00011110
08D45 8D 01 20                               sta $2001
08D48 A9 00                                  lda #0
08D4A 85 7E                                  sta qq
08D4C A9 00                                  lda #0
08D4E 85 7A                                  sta control
08D50 A9 FE                                  lda #$fe
08D52 8D 00 05                               sta $500
08D55 8D 04 05                               sta $504
08D58 8D 08 05                               sta $508
08D5B 8D 0C 05                               sta $50C
08D5E 8D 10 05                               sta $510
08D61 8D 14 05                               sta $514
08D64 8D 18 05                               sta $518
08D67 A9 00                                  lda #0
08D69 85 76                                   sta random_enable
08D6B A9 01                                   lda #1
08D6D 85 B7                                   sta cq0
08D6F 85 75                                   sta uss
08D71 85 CF                                   sta trig_controller1
08D73 A5 A5                                   lda $A5
08D75 8D 00 20                                sta $2000
08D78                           @jj:
08D78 4C 78 8D                     jmp @jj
08D7B                           
08D7B                           
08D7B                           screen3to1:
08D7B A9 00                             lda #0
08D7D 8D 01 20                          sta $2001
08D80 A9 20                             LDA #$20                ; draw screen
08D82 8D 06 20                      	STA $2006
08D85 A9 00                         	LDA #$00
08D87 8D 06 20                      	STA $2006
08D8A                           
08D8A A0 00                             ldy #$00
08D8C A2 04                             ldx #$04
08D8E                           
08D8E A9 3B                             lda #<screen1
08D90 85 10                             sta $10
08D92 A9 9B                             lda #>screen1
08D94 85 11                             sta $11
08D96                           
08D96                           @NameLoop3:
08D96 B1 10                             lda ($10),y
08D98 8D 07 20                          sta $2007
08D9B C8                                iny
08D9C D0 F8                             bne @NameLoop3
08D9E E6 11                             inc $11
08DA0 CA                                dex
08DA1 D0 F3                             bne @NameLoop3
08DA3 A9 1E                             lda #30
08DA5 8D 01 20                          sta $2001
08DA8 A9 00                             lda #0
08DAA 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08DAC 60                        rts
08DAD                           screen4to2:
08DAD A9 00                             lda #0
08DAF 8D 01 20                          sta $2001
08DB2 A9 28                             LDA #$28                ; draw screen
08DB4 8D 06 20                      	STA $2006
08DB7 A9 00                         	LDA #$00
08DB9 8D 06 20                      	STA $2006
08DBC                           
08DBC A0 00                             ldy #$00
08DBE A2 04                             ldx #$04
08DC0                           
08DC0 A9 3B                             lda #<screen2
08DC2 85 10                             sta $10
08DC4 A9 9B                             lda #>screen2
08DC6 85 11                             sta $11
08DC8                           
08DC8                           @NameLoop3:
08DC8 B1 10                             lda ($10),y
08DCA 8D 07 20                          sta $2007
08DCD C8                                iny
08DCE D0 F8                             bne @NameLoop3
08DD0 E6 11                             inc $11
08DD2 CA                                dex
08DD3 D0 F3                             bne @NameLoop3
08DD5 A9 1E                             lda #30
08DD7 8D 01 20                          sta $2001
08DDA A9 01                             lda #1
08DDC 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08DDE 60                        rts
08DDF                           
08DDF                           screen5to3:
08DDF A9 00                              lda #0
08DE1 8D 01 20                          sta $2001
08DE4 A9 20                             LDA #$20                ; draw screen
08DE6 8D 06 20                      	STA $2006
08DE9 A9 00                         	LDA #$00
08DEB 8D 06 20                      	STA $2006
08DEE                           
08DEE A0 00                             ldy #$00
08DF0 A2 04                             ldx #$04
08DF2                           
08DF2 A9 3B                             lda #<screen2
08DF4 85 10                             sta $10
08DF6 A9 9B                             lda #>screen2
08DF8 85 11                             sta $11
08DFA                           
08DFA                           @NameLoop3:
08DFA B1 10                             lda ($10),y
08DFC 8D 07 20                          sta $2007
08DFF C8                                iny
08E00 D0 F8                             bne @NameLoop3
08E02 E6 11                             inc $11
08E04 CA                                dex
08E05 D0 F3                             bne @NameLoop3
08E07 A9 1E                             lda #30
08E09 8D 01 20                          sta $2001
08E0C A9 02                             lda #2
08E0E 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08E10 60                        rts
08E11                           
08E11                           screen6to4:
08E11 A9 00                             lda #0
08E13 8D 01 20                          sta $2001
08E16 A9 28                             LDA #$28                ; draw screen
08E18 8D 06 20                      	STA $2006
08E1B A9 00                         	LDA #$00
08E1D 8D 06 20                      	STA $2006
08E20                           
08E20 A0 00                             ldy #$00
08E22 A2 04                             ldx #$04
08E24                           
08E24 A9 3B                             lda #<screen4
08E26 85 10                             sta $10
08E28 A9 9F                             lda #>screen4
08E2A 85 11                             sta $11
08E2C                           
08E2C                           @NameLoop3:
08E2C B1 10                             lda ($10),y
08E2E 8D 07 20                          sta $2007
08E31 C8                                iny
08E32 D0 F8                             bne @NameLoop3
08E34 E6 11                             inc $11
08E36 CA                                dex
08E37 D0 F3                             bne @NameLoop3
08E39 A9 1E                             lda #30
08E3B 8D 01 20                          sta $2001
08E3E A9 03                             lda #3
08E40 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08E42 60                        rts
08E43                           
08E43                           screen7to5:
08E43 A9 00                              lda #0
08E45 8D 01 20                          sta $2001
08E48 A9 20                             LDA #$20                ; draw screen
08E4A 8D 06 20                      	STA $2006
08E4D A9 00                         	LDA #$00
08E4F 8D 06 20                      	STA $2006
08E52                           
08E52 A0 00                             ldy #$00
08E54 A2 04                             ldx #$04
08E56                           
08E56 A9 3B                             lda #<screen6
08E58 85 10                             sta $10
08E5A A9 A3                             lda #>screen6
08E5C 85 11                             sta $11
08E5E                           
08E5E                           @NameLoop3:
08E5E B1 10                             lda ($10),y
08E60 8D 07 20                          sta $2007
08E63 C8                                iny
08E64 D0 F8                             bne @NameLoop3
08E66 E6 11                             inc $11
08E68 CA                                dex
08E69 D0 F3                             bne @NameLoop3
08E6B A9 1E                             lda #30
08E6D 8D 01 20                          sta $2001
08E70 A9 04                             lda #4
08E72 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08E74 60                        rts
08E75                           
08E75                           screen8to6:
08E75 A9 00                             lda #0
08E77 8D 01 20                          sta $2001
08E7A A9 28                             LDA #$28                ; draw screen
08E7C 8D 06 20                      	STA $2006
08E7F A9 00                         	LDA #$00
08E81 8D 06 20                      	STA $2006
08E84                           
08E84 A0 00                             ldy #$00
08E86 A2 04                             ldx #$04
08E88                           
08E88 A9 3B                             lda #<screen7
08E8A 85 10                             sta $10
08E8C A9 A7                             lda #>screen7
08E8E 85 11                             sta $11
08E90                           
08E90                           @NameLoop3:
08E90 B1 10                             lda ($10),y
08E92 8D 07 20                          sta $2007
08E95 C8                                iny
08E96 D0 F8                             bne @NameLoop3
08E98 E6 11                             inc $11
08E9A CA                                dex
08E9B D0 F3                             bne @NameLoop3
08E9D A9 1E                             lda #30
08E9F 8D 01 20                          sta $2001
08EA2 A9 05                             lda #5
08EA4 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08EA6 60                        rts
08EA7                           
08EA7                           screen9to7:
08EA7 A9 00                              lda #0
08EA9 8D 01 20                          sta $2001
08EAC A9 20                             LDA #$20                ; draw screen
08EAE 8D 06 20                      	STA $2006
08EB1 A9 00                         	LDA #$00
08EB3 8D 06 20                      	STA $2006
08EB6                           
08EB6 A0 00                             ldy #$00
08EB8 A2 04                             ldx #$04
08EBA                           
08EBA A9 3B                             lda #<screen7
08EBC 85 10                             sta $10
08EBE A9 A7                             lda #>screen7
08EC0 85 11                             sta $11
08EC2                           
08EC2                           @NameLoop3:
08EC2 B1 10                             lda ($10),y
08EC4 8D 07 20                          sta $2007
08EC7 C8                                iny
08EC8 D0 F8                             bne @NameLoop3
08ECA E6 11                             inc $11
08ECC CA                                dex
08ECD D0 F3                             bne @NameLoop3
08ECF A9 1E                             lda #30
08ED1 8D 01 20                          sta $2001
08ED4 A9 06                             lda #6
08ED6 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08ED8 60                        rts
08ED9                           
08ED9                           screen10to8:
08ED9 A9 00                             lda #0
08EDB 8D 01 20                          sta $2001
08EDE A9 28                             LDA #$28                ; draw screen
08EE0 8D 06 20                      	STA $2006
08EE3 A9 00                         	LDA #$00
08EE5 8D 06 20                      	STA $2006
08EE8                           
08EE8 A0 00                             ldy #$00
08EEA A2 04                             ldx #$04
08EEC                           
08EEC A9 3B                             lda #<screen7
08EEE 85 10                             sta $10
08EF0 A9 A7                             lda #>screen7
08EF2 85 11                             sta $11
08EF4                           
08EF4                           @NameLoop3:
08EF4 B1 10                             lda ($10),y
08EF6 8D 07 20                          sta $2007
08EF9 C8                                iny
08EFA D0 F8                             bne @NameLoop3
08EFC E6 11                             inc $11
08EFE CA                                dex
08EFF D0 F3                             bne @NameLoop3
08F01 A9 1E                             lda #30
08F03 8D 01 20                          sta $2001
08F06 A9 07                             lda #7
08F08 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08F0A 60                        rts
08F0B                           
08F0B                           more240:
08F0B A5 A9                              lda $A9
08F0D C9 01                              cmp #1
08F0F D0 13                              bne @not12
08F11 20 7B 8D                           jsr screen3to1
08F14 A9 00                     @not11    lda #0
08F16 85 A4                              sta $A4
08F18 A9 02                              lda #2
08F1A 45 A5                              eor $A5
08F1C 85 A5                              sta $A5
08F1E 8D 00 20                           sta $2000
08F21 4C 6A 8F                           jmp @not1
08F24 C9 02                     @not12    cmp #2
08F26 D0 06                              bne @not1r
08F28 20 AD 8D                           jsr screen4to2
08F2B 4C 14 8F                           jmp @not11
08F2E C9 03                     @not1r    cmp #3
08F30 D0 06                              bne @not1e
08F32 20 DF 8D                           jsr screen5to3
08F35 4C 14 8F                           jmp @not11
08F38 C9 04                     @not1e    cmp #4
08F3A D0 06                              bne @not1p
08F3C 20 11 8E                           jsr screen6to4
08F3F 4C 14 8F                           jmp @not11          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08F42 C9 05                     @not1p    cmp #5
08F44 D0 06                              bne @not1d
08F46 20 43 8E                           jsr screen7to5
08F49 4C 14 8F                           jmp @not11
08F4C C9 06                     @not1d    cmp #6
08F4E D0 06                              bne @not1f
08F50 20 75 8E                           jsr screen8to6
08F53 4C 14 8F                           jmp @not11
08F56 C9 07                     @not1f    cmp #7
08F58 D0 06                              bne @not1g
08F5A 20 A7 8E                           jsr screen9to7
08F5D 4C 14 8F                           jmp @not11
08F60 C9 08                     @not1g    cmp #8
08F62 D0 06                              bne @not1
08F64 20 D9 8E                           jsr screen10to8
08F67 4C 14 8F                           jmp @not11
08F6A 60                        @not1     rts
08F6B                           
08F6B                           
08F6B                           ;;;;when scroll_step is set with x-pixels and then triggering it with the variable scrollup_act cause the background to move up by x-bixels ...this is basically called
08F6B                           ;;when a negative or a bad object gets detected
08F6B                           scrollup:
08F6B A5 A7                              lda $A7
08F6D C9 0A                              cmp #10
08F6F D0 18                              bne @end_s1
08F71 A9 00                              lda #0
08F73 85 12                              sta touch_trig
08F75 A5 A4                              lda $A4
08F77 C9 EF                              cmp #239
08F79 D0 13                              bne @dwn1
08F7B A5 A9                              lda $A9
08F7D C9 00                              cmp #0
08F7F D0 05                              bne @dwn2
08F81 A9 00                              lda #0
08F83 85 A7                              sta $A7
08F85                           
08F85 60                                 rts
08F86 20 0B 8F                  @dwn2     jsr more240
08F89                           @end_s1:
08F89 A9 01                               lda #1
08F8B 85 12                              sta touch_trig
08F8D 60                                 rts
08F8E                           
08F8E C6 A6                     @dwn1     dec $A6
08F90 A5 A6                              lda $A6
08F92 C9 00                              cmp #0
08F94 D0 08                              bne @next2
08F96 A9 00                              lda #0
08F98 85 A7                              sta $A7
08F9A A9 16                              lda #22
08F9C 85 A6                              sta $A6
08F9E E6 A4                     @next2    inc $A4
08FA0 60                                 rts
08FA1                                    ;       ----------------------------------------------------
08FA1                           screen1to3:
08FA1 A9 00                             lda #0
08FA3 8D 01 20                          sta $2001
08FA6 A9 20                             LDA #$20                ; draw screen
08FA8 8D 06 20                      	STA $2006
08FAB A9 00                         	LDA #$00
08FAD 8D 06 20                      	STA $2006
08FB0                           
08FB0 A0 00                             ldy #$00
08FB2 A2 04                             ldx #$04
08FB4                           
08FB4 A9 3B                             lda #<screen2
08FB6 85 10                             sta $10
08FB8 A9 9B                             lda #>screen2
08FBA 85 11                             sta $11
08FBC                           
08FBC                           @NameLoop3:
08FBC B1 10                             lda ($10),y
08FBE 8D 07 20                          sta $2007
08FC1 C8                                iny
08FC2 D0 F8                             bne @NameLoop3
08FC4 E6 11                             inc $11
08FC6 CA                                dex
08FC7 D0 F3                             bne @NameLoop3
08FC9 A9 1E                             lda #30
08FCB 8D 01 20                          sta $2001
08FCE A9 01                             lda #1
08FD0 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08FD2 60                        rts
08FD3                           screen2to4:
08FD3 A9 00                                     lda #0
08FD5 8D 01 20                          sta $2001
08FD8 A9 28                             LDA #$28                ; draw screen
08FDA 8D 06 20                      	STA $2006
08FDD A9 00                         	LDA #$00
08FDF 8D 06 20                      	STA $2006
08FE2                           
08FE2 A0 00                             ldy #$00
08FE4 A2 04                             ldx #$04
08FE6                           
08FE6 A9 3B                             lda #<screen4
08FE8 85 10                             sta $10
08FEA A9 9F                             lda #>screen4
08FEC 85 11                             sta $11
08FEE                           
08FEE                           @NameLoop3:
08FEE B1 10                             lda ($10),y
08FF0 8D 07 20                          sta $2007
08FF3 C8                                iny
08FF4 D0 F8                             bne @NameLoop3
08FF6 E6 11                             inc $11
08FF8 CA                                dex
08FF9 D0 F3                             bne @NameLoop3
08FFB A9 1E                             lda #30
08FFD 8D 01 20                          sta $2001
09000 A9 02                             lda #2
09002 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
09004 60                        rts
09005                           screen3to5:
09005 A9 00                             lda #0
09007 8D 01 20                          sta $2001
0900A A9 20                             LDA #$20                ; draw screen
0900C 8D 06 20                      	STA $2006
0900F A9 00                         	LDA #$00
09011 8D 06 20                      	STA $2006
09014                           
09014 A0 00                             ldy #$00
09016 A2 04                             ldx #$04
09018                           
09018 A9 3B                             lda #<screen6
0901A 85 10                             sta $10
0901C A9 A3                             lda #>screen6
0901E 85 11                             sta $11
09020                           
09020                           @NameLoop3:
09020 B1 10                             lda ($10),y
09022 8D 07 20                          sta $2007
09025 C8                                iny
09026 D0 F8                             bne @NameLoop3
09028 E6 11                             inc $11
0902A CA                                dex
0902B D0 F3                             bne @NameLoop3
0902D A9 1E                             lda #30
0902F 8D 01 20                          sta $2001
09032 A9 03                             lda #3
09034 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
09036 60                        rts
09037                           
09037                           screen4to6:
09037 A9 00                             lda #0
09039 8D 01 20                          sta $2001
0903C A9 28                             LDA #$28                ; draw screen
0903E 8D 06 20                      	STA $2006
09041 A9 00                         	LDA #$00
09043 8D 06 20                      	STA $2006
09046                           
09046 A0 00                             ldy #$00
09048 A2 04                             ldx #$04
0904A                           
0904A A9 3B                             lda #<screen7
0904C 85 10                             sta $10
0904E A9 A7                             lda #>screen7
09050 85 11                             sta $11
09052                           
09052                           @NameLoop3:
09052 B1 10                             lda ($10),y
09054 8D 07 20                          sta $2007
09057 C8                                iny
09058 D0 F8                             bne @NameLoop3
0905A E6 11                             inc $11
0905C CA                                dex
0905D D0 F3                             bne @NameLoop3
0905F A9 1E                             lda #30
09061 8D 01 20                          sta $2001
09064 A9 04                             lda #4
09066 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
09068 60                        rts
09069                           
09069                           screen5to7:
09069 A9 00                             lda #0
0906B 8D 01 20                          sta $2001
0906E A9 20                             LDA #$20                ; draw screen
09070 8D 06 20                      	STA $2006
09073 A9 00                         	LDA #$00
09075 8D 06 20                      	STA $2006
09078                           
09078 A0 00                             ldy #$00
0907A A2 04                             ldx #$04
0907C                           
0907C A9 3B                             lda #<screen7
0907E 85 10                             sta $10
09080 A9 A7                             lda #>screen7
09082 85 11                             sta $11
09084                           
09084                           @NameLoop3:
09084 B1 10                             lda ($10),y
09086 8D 07 20                          sta $2007
09089 C8                                iny
0908A D0 F8                             bne @NameLoop3
0908C E6 11                             inc $11
0908E CA                                dex
0908F D0 F3                             bne @NameLoop3
09091 A9 1E                             lda #30
09093 8D 01 20                          sta $2001
09096 A9 05                             lda #5
09098 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
0909A 60                        rts
0909B                           
0909B                           screen6to8:
0909B A9 00                             lda #0
0909D 8D 01 20                          sta $2001
090A0 A9 28                             LDA #$28                ; draw screen
090A2 8D 06 20                      	STA $2006
090A5 A9 00                         	LDA #$00
090A7 8D 06 20                      	STA $2006
090AA                           
090AA A0 00                             ldy #$00
090AC A2 04                             ldx #$04
090AE                           
090AE A9 3B                             lda #<screen7
090B0 85 10                             sta $10
090B2 A9 A7                             lda #>screen7
090B4 85 11                             sta $11
090B6                           
090B6                           @NameLoop3:
090B6 B1 10                             lda ($10),y
090B8 8D 07 20                          sta $2007
090BB C8                                iny
090BC D0 F8                             bne @NameLoop3
090BE E6 11                             inc $11
090C0 CA                                dex
090C1 D0 F3                             bne @NameLoop3
090C3 A9 1E                             lda #30
090C5 8D 01 20                          sta $2001
090C8 A9 06                             lda #6
090CA 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
090CC 60                        rts
090CD                           
090CD                           
090CD                           screen7to9:
090CD A9 00                             lda #0
090CF 8D 01 20                          sta $2001
090D2 A9 20                             LDA #$20                ; draw screen
090D4 8D 06 20                      	STA $2006
090D7 A9 00                         	LDA #$00
090D9 8D 06 20                      	STA $2006
090DC                           
090DC A0 00                             ldy #$00
090DE A2 04                             ldx #$04
090E0                           
090E0 A9 3B                             lda #<screen9
090E2 85 10                             sta $10
090E4 A9 AB                             lda #>screen9
090E6 85 11                             sta $11
090E8                           
090E8                           @NameLoop3:
090E8 B1 10                             lda ($10),y
090EA 8D 07 20                          sta $2007
090ED C8                                iny
090EE D0 F8                             bne @NameLoop3
090F0 E6 11                             inc $11
090F2 CA                                dex
090F3 D0 F3                             bne @NameLoop3
090F5 A9 1E                             lda #30
090F7 8D 01 20                          sta $2001
090FA A9 07                             lda #7
090FC 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
090FE 60                        rts
090FF                           
090FF                           screen8to10:
090FF A9 00                             lda #0
09101 8D 01 20                          sta $2001
09104 A9 28                             LDA #$28                ; draw screen
09106 8D 06 20                      	STA $2006
09109 A9 00                         	LDA #$00
0910B 8D 06 20                      	STA $2006
0910E                           
0910E A0 00                             ldy #$00
09110 A2 04                             ldx #$04
09112                           
09112 A9 3B                             lda #<screen10
09114 85 10                             sta $10
09116 A9 AB                             lda #>screen10
09118 85 11                             sta $11
0911A                           
0911A                           @NameLoop3:
0911A B1 10                             lda ($10),y
0911C 8D 07 20                          sta $2007
0911F C8                                iny
09120 D0 F8                             bne @NameLoop3
09122 E6 11                             inc $11
09124 CA                                dex
09125 D0 F3                             bne @NameLoop3
09127 A9 1E                             lda #30
09129 8D 01 20                          sta $2001
0912C A9 08                             lda #8
0912E 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
09130 60                        rts
09131                           
09131                           
09131                           
09131                           less0:
09131 A5 A9                             lda $A9
09133 C9 00                             cmp #0
09135 D0 13                             bne @dwn6
09137 20 A1 8F                          jsr screen1to3
0913A A9 EF                     @dwn18   lda #239
0913C 85 A4                             sta $A4
0913E A9 02                             lda #2
09140 45 A5                             eor $A5
09142 85 A5                             sta $A5
09144 8D 00 20                          sta $2000
09147 4C 90 91                          jmp @dwn17
0914A C9 01                     @dwn6    cmp #1
0914C D0 06                             bne @dwn19
0914E 20 D3 8F                          jsr screen2to4
09151 4C 3A 91                          jmp @dwn18
09154 C9 02                     @dwn19   cmp #2
09156 D0 06                             bne @dwn171
09158 20 05 90                          jsr screen3to5
0915B 4C 3A 91                          jmp @dwn18
0915E C9 03                     @dwn171  cmp #3
09160 D0 06                             bne @dwn172
09162 20 37 90                          jsr screen4to6
09165 4C 3A 91                          jmp @dwn18
09168 C9 04                     @dwn172  cmp #4
0916A D0 06                             bne @dwn17r
0916C 20 69 90                          jsr screen5to7
0916F 4C 3A 91                          jmp @dwn18
09172 C9 05                     @dwn17r  cmp #5
09174 D0 06                             bne @dwn17b
09176 20 9B 90                          jsr screen6to8
09179 4C 3A 91                          jmp @dwn18
0917C C9 10                     @dwn17b  cmp #16
0917E D0 06                             bne @dwn17c
09180 20 CD 90                          jsr screen7to9
09183 4C 3A 91                          jmp @dwn18
09186 C9 07                     @dwn17c  cmp #7
09188 D0 06                             bne @dwn17
0918A 20 FF 90                          jsr screen8to10
0918D 4C 3A 91                          jmp @dwn18
09190 60                        @dwn17   rts
09191                           ;;;;when scroll_step is set with x-pixels and then triggering it with the variable scrolldown_act cause the background to move down by x-bixels ...this is basically called
09191                           ;;when a postive or a good object gets detected
09191                           scrolldown:
09191 A5 A8                                lda $A8
09193 C9 0A                                cmp #10
09195 D0 1B                                bne @end_s2
09197 20 44 CF                             jsr upmotion
0919A                              ;      dec scroll_v
0919A A9 00                               lda #0
0919C 85 12                              sta touch_trig
0919E A5 A4                              lda $A4
091A0 C9 00                              cmp #0
091A2 D0 17                              bne @dwn4
091A4 A5 A9                              lda $A9
091A6 C9 06                              cmp #6
091A8 D0 09                              bne @dwn5
091AA                                ;   lda #1
091AA                                ;   sta trig_endmotion
091AA A9 0A                              lda #10
091AC 85 B5                              sta $b5
091AE A9 00                              lda #0
091B0 85 A8                              sta $A8
091B2                           
091B2                           @end_s2:
091B2                           
091B2 60                                 rts
091B3 20 31 91                  @dwn5     jsr less0
091B6 A9 01                              lda #1
091B8 85 12                              sta touch_trig
091BA 60                                 rts
091BB C6 A6                     @dwn4     dec $A6
091BD A5 A6                              lda $A6
091BF C9 00                              cmp #0
091C1 D0 08                              bne @nex1
091C3 A9 00                              lda #0
091C5 85 A8                              sta $A8
091C7 A9 16                              lda #22
091C9 85 A6                              sta $A6
091CB C6 A4                     @nex1     dec $A4
091CD 60                                 rts
091CE                           
091CE                           
091CE                           
091CE                           ;        --------------------------------------------------------------
091CE                           
091CE                           ;;;;;;; Load screen3 out of three
091CE                           screenchange11:
091CE A9 20                             LDA #$20                ; draw screen
091D0 8D 06 20                      	STA $2006
091D3 A9 00                         	LDA #$00
091D5 8D 06 20                      	STA $2006
091D8                           
091D8 A0 00                             ldy #$00
091DA A2 04                             ldx #$04
091DC                           
091DC A9 3B                             lda #<screen2
091DE 85 10                             sta $10
091E0 A9 9B                             lda #>screen2
091E2 85 11                             sta $11
091E4                           
091E4                           NameLoop211:
091E4 B1 10                             lda ($10),y
091E6 8D 07 20                          sta $2007
091E9 C8                                iny
091EA D0 F8                             bne NameLoop211
091EC E6 11                             inc $11
091EE CA                                dex
091EF D0 F3                             bne NameLoop211
091F1 60                        rts
091F2                           ;  ------------------------------------------------------------
091F2                           triggering_scroll:
091F2 A5 B5                                       lda go0                        ; checking good object detection
091F4 C9 01                                       cmp #1
091F6 D0 0C                                       bne @tri_scr1
091F8 A9 0A                                       lda #10
091FA 85 A8                                       sta $A8
091FC A9 1E                                       lda #30
091FE 85 A6                                       sta $A6
09200 A9 00                                       lda #0
09202 85 B5                                       sta go0
09204                           @tri_scr1:
09204 A5 B6                                       lda bo0                        ; checking bad object detection
09206 C9 01                                       cmp #1
09208 D0 0C                                       bne @tri_scr2
0920A A9 0A                                       lda #10
0920C 85 A7                                       sta $A7
0920E A5 18                                       lda scro
09210 85 A6                                       sta $A6
09212 A9 00                                       lda #0
09214 85 B6                                       sta bo0
09216                           @tri_scr2:
09216 A5 B7                                       lda cq0                       ;  correct answer detection
09218 C9 01                                       cmp #1
0921A D0 1F                                       bne @newlll
0921C A9 0A                                       lda #10
0921E 85 A8                                       sta $A8
09220 A9 96                                       lda #150
09222 85 A6                                       sta $A6
09224 A9 00                                       lda #0
09226 85 B7                                       sta cq0
09228                           
09228 A9 00                                      lda #0
0922A 85 23                                      sta sk1
0922C                           @incpoint:
0922C A5 25                                      lda points
0922E C9 05                                      cmp #5
09230 F0 09                                      beq @newlll
09232 E6 25                                      inc points
09234 E6 23                                      inc sk1       ; sk1 is counter for skull
09236 C9 03                                      cmp #3
09238 D0 F2                                      bne @incpoint
0923A 60                                         rts
0923B                           
0923B                           @newlll:
0923B                                           ; jmp @newl
0923B 60                                         rts
0923C                           
0923C                           ;;---------------------------------------------------------------------------
0923C                           
0923C                           ;;       ---------------------------------------------------------------------------
0923C                           question1:
0923C 32 06 6B 06 32 06 69 06..           .db '2',$06,$6B,$06,'2',$06,$69,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0924F 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09262 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09275 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09288 34 06 06 06 06 06 06 06..           .db '4',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0929B 35 06 06 06 06 06 06 06..           .db '5',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
092AE 32 06 06 06 06 06 06 06..           .db '2',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
092C1 31 06 06 06 06 06 06 06..           .db '1',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
092D4                           question2:
092D4 32 06 6A 06 32 06 69 06..           .db '2',$06,$6A,$06,'2',$06,$69,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
092E7 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
092FA 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0930D 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09320 35 06 06 06 06 06 06 06..           .db '5',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09333 34 06 06 06 06 06 06 06..           .db '4',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09346 32 06 06 06 06 06 06 06..           .db '2',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09359 31 06 06 06 06 06 06 06..           .db '1',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0936C                           
0936C                           question3:
0936C 57 48 41 54 06 49 53 06..           .db 'W','H','A','T',$06,'I','S',$06,'T','H','E',$06,'C','O','L','O','R',$06,$06
0937F 4F 46 06 53 4B 59 06 5B..           .db 'O','F',$06,'S','K','Y',$06,$5B,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09392 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
093A5 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
093B8 52 45 44 06 06 06 06 06..           .db 'R','E','D',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
093CB 42 4C 55 45 06 06 06 06..           .db 'B','L','U','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
093DE 47 52 45 45 4E 06 06 06..           .db 'G','R','E','E','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
093F1 42 4C 41 43 4B 06 06 06..           .db 'B','L','A','C','K',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09404                           
09404                           question4:
09404 57 48 49 43 48 06 4D 4F..           .db 'W','H','I','C','H',$06,'M','O','N','T','H',$06,'C','O','M','E','S',$06,$06
09417 41 46 54 45 52 06 4D 41..           .db 'A','F','T','E','R',$06,'M','A','Y',$06,$5B,$06,$06,$06,$06,$06,$06,$06,$06
0942A 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0943D 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09450 41 55 47 55 53 54 06 06..           .db 'A','U','G','U','S','T',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09463 46 45 42 52 55 41 52 59..           .db 'F','E','B','R','U','A','R','Y',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09476 4A 55 4E 45 06 06 06 06..           .db 'J','U','N','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09489 4E 4F 56 45 4D 42 45 52..           .db 'N','O','V','E','M','B','E','R',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0949C                           
0949C                           question5:
0949C 41 46 54 45 52 06 48 4F..           .db 'A','F','T','E','R',$06,'H','O','W',$06,'M','A','N','Y',$06,'Y','E','A','R'
094AF 41 06 4C 45 41 50 06 59..           .db 'A',$06,'L','E','A','P',$06,'Y','E','A','R',$06,'C','O','M','E',$06,$5B,$06
094C2 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
094D5 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
094E8 4F 4E 45 06 06 06 06 06..           .db 'O','N','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
094FB 54 57 4F 06 06 06 06 06..           .db 'T','W','O',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0950E 54 48 52 45 45 06 06 06..           .db 'T','H','R','E','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09521 46 4F 55 52 06 06 06 06..           .db 'F','O','U','R',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09534                           question6:
09534 57 48 49 43 48 06 41 4E..           .db 'W','H','I','C','H',$06,'A','N','I','M','A','L',$06,'I','S',$06,$06,$06,$06
09547 43 41 4C 4C 45 44 06 54..           .db 'C','A','L','L','E','D',$06,'T','H','E',$06,'S','H','I','P',$06,'O','F',$06
0955A 44 45 53 45 52 54 06 5B..           .db 'D','E','S','E','R','T',$06,$5B,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0956D 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09580 43 41 4D 45 4C 06 06 06..           .db 'C','A','M','E','L',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09593 4C 49 4F 4E 06 06 06 06..           .db 'L','I','O','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
095A6 54 49 47 45 52 06 06 06..           .db 'T','I','G','E','R',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
095B9 44 4F 47 06 06 06 06 06..           .db 'D','O','G',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
095CC                           
095CC                           question7:
095CC 53 55 4E 06 52 49 53 45..           .db 'S','U','N',$06,'R','I','S','E','S',$06,'F','R','O','M',$06,$06,$06,$06,$06
095DF 57 48 49 43 48 06 44 49..           .db 'W','H','I','C','H',$06,'D','I','R','E','C','T','I','O','N',$06,$5B,$06,$06
095F2 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09605 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09618 45 41 53 54 06 06 06 06..           .db 'E','A','S','T',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0962B 57 45 53 54 06 06 06 06..           .db 'W','E','S','T',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0963E 4E 4F 52 54 48 06 06 06..           .db 'N','O','R','T','H',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09651 53 4F 55 54 48 06 06 06..           .db 'S','O','U','T','H',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09664                           
09664                           question8:
09664 57 48 49 43 48 06 49 53..           .db 'W','H','I','C','H',$06,'I','S',$06,'T','H','E',$06,$06,$06,$06,$06,$06,$06
09677 43 41 50 49 54 41 4C 06..           .db 'C','A','P','I','T','A','L',$06,'C','I','T','Y',$06,'O','F',$06,$06,$06,$06
0968A 49 4E 44 49 41 06 5B 06..           .db 'I','N','D','I','A',$06,$5B,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0969D 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
096B0 4D 55 4D 42 41 59 06 06..           .db 'M','U','M','B','A','Y',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
096C3 4B 4F 4C 4B 41 54 41 06..           .db 'K','O','L','K','A','T','A',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
096D6 4E 45 57 06 44 45 4C 48..           .db 'N','E','W',$06,'D','E','L','H','I',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
096E9 42 41 4E 47 4C 4F 52 45..           .db 'B','A','N','G','L','O','R','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
096FC                           
096FC                           question9:
096FC 57 48 49 43 48 06 49 53..           .db 'W','H','I','C','H',$06,'I','S',$06,'T','H','E',$06,$06,$06,$06,$06,$06,$06
0970F 4C 41 52 47 45 53 54 06..           .db 'L','A','R','G','E','S','T',$06,'M','A','M','M','A','L',$06,$5B,$06,$06,$06
09722 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09735 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09748 45 4C 45 50 48 41 4E 54..           .db 'E','L','E','P','H','A','N','T',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0975B 42 4C 55 45 06 57 48 41..           .db 'B','L','U','E',$06,'W','H','A','L','E',$06,$06,$06,$06,$06,$06,$06,$06,$06
0976E 4C 49 4F 4E 06 06 06 06..           .db 'L','I','O','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09781 4F 53 54 52 49 43 48 06..           .db 'O','S','T','R','I','C','H',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09794                           question10:
09794 50 4F 50 45 59 06 45 41..           .db 'P','O','P','E','Y',$06,'E','A','T',$06,'W','H','I','C','H',$06,$06,$06,$06
097A7 56 45 47 45 54 41 42 4C..           .db 'V','E','G','E','T','A','B','L','E',$06,'T','O',$06,'G','E','T',$06,$06,$06
097BA 53 54 52 45 4E 47 54 48..           .db 'S','T','R','E','N','G','T','H',$06,$5B,$06,$06,$06,$06,$06,$06,$06,$06,$06
097CD 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
097E0 53 50 49 4E 41 43 48 06..           .db 'S','P','I','N','A','C','H',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
097F3 54 4F 4D 41 54 4F 06 06..           .db 'T','O','M','A','T','O',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09806 43 41 52 52 4F 54 06 06..           .db 'C','A','R','R','O','T',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09819 4F 4E 49 4F 4E 06 06 06..           .db 'O','N','I','O','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0982C                           
0982C                           question11:
0982C 50 49 43 4B 06 54 48 45..           .db 'P','I','C','K',$06,'T','H','E',$06,'O','D','D',$06,'O','N','E',$06,$06,$06
0983F 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06 ;32
09852 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09865 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09878 43 41 52 06 06 06 06 06..           .db 'C','A','R',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0988B 53 43 4F 4F 54 45 52 06..           .db 'S','C','O','O','T','E','R',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0989E 4D 4F 54 45 52 06 43 59..           .db 'M','O','T','E','R',$06,'C','Y','C','L','E',$06,$06,$06,$06,$06,$06,$06,$06
098B1 42 49 43 59 43 4C 45 06..           .db 'B','I','C','Y','C','L','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
098C4                           question12:
098C4 57 48 49 43 48 06 47 41..           .db 'W','H','I','C','H',$06,'G','A','S',$06,'I','S',$06,'G','I','V','E','N',$06
098D7 4F 55 54 06 44 55 52 49..           .db 'O','U','T',$06,'D','U','R','I','N','G',$06,$06,$06,$06,$06,$06,$06,$06,$06
098EA 50 48 4F 54 4F 53 59 4E..           .db 'P','H','O','T','O','S','Y','N','T','H','S','I','S',$06,$5B,$06,$06,$06,$06
098FD 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09910 43 41 52 42 4F 4E 06 44..           .db 'C','A','R','B','O','N',$06,'D','I',$06,'O','X','I','D','E',$06,$06,$06,$06
09923 4F 58 59 47 45 4E 06 06..           .db 'O','X','Y','G','E','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09936 4E 49 54 52 4F 47 45 4E..           .db 'N','I','T','R','O','G','E','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09949 48 59 44 52 4F 47 45 4E..           .db 'H','Y','D','R','O','G','E','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0995C                           
0995C                           question13:
0995C 48 4F 57 06 4D 41 4E 59..           .db 'H','O','W',$06,'M','A','N','Y',$06,'P','L','A','Y','E','R','S',$06,$06,$06
0996F 41 52 45 06 54 48 45 52..           .db 'A','R','E',$06,'T','H','E','R','E',$06,'I','N',$06,'A',$06,$06,$06,$06,$06 ;32
09982 43 52 49 43 4B 45 54 06..           .db 'C','R','I','C','K','E','T',$06,'T','E','A','M',$06,$5b,$06,$06,$06,$06,$06
09995 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
099A8 45 4C 45 56 45 4E 06 06..           .db 'E','L','E','V','E','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
099BB 54 45 4E 06 06 06 06 06..           .db 'T','E','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
099CE 4E 49 4E 45 06 06 06 06..           .db 'N','I','N','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
099E1 4E 4F 4E 45 06 06 06 06..           .db 'N','O','N','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
099F4                           question14:
099F4 4F 55 52 06 4E 41 54 49..           .db 'O','U','R',$06,'N','A','T','I','O','N','A','L',$06,'F','L','A','G',$06,$06
09A07 48 41 53 06 48 4F 57 06..           .db 'H','A','S',$06,'H','O','W',$06,'M','A','N','Y',$06,$06,$06,$06,$06,$06,$06
09A1A 43 4F 4C 4F 55 52 53 06..           .db 'C','O','L','O','U','R','S',$06,$5B,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09A2D 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09A40 4F 4E 45 06 06 06 06 06..           .db 'O','N','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09A53 54 48 52 45 45 06 06 06..           .db 'T','H','R','E','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09A66 46 4F 55 52 06 06 06 06..           .db 'F','O','U','R',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09A79 54 57 4F 06 06 06 06 06..           .db 'T','W','O',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09A8C                           
09A8C                           question15:
09A8C 57 48 49 43 48 06 4C 49..           .db 'W','H','I','C','H',$06,'L','I','G','H','T',$06,'S','I','G','N','A','L',$06
09A9F 50 52 4F 48 49 42 49 54..           .db 'P','R','O','H','I','B','I','T','S',$06,'M','O','V','E','M','E','N','T',$06
09AB2 4F 46 06 54 52 41 46 46..           .db 'O','F',$06,'T','R','A','F','F','I','C',$06,$5B,$06,$06,$06,$06,$06,$06,$06
09AC5 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09AD8 47 52 45 45 4E 06 06 06..           .db 'G','R','E','E','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09AEB 52 45 44 06 06 06 06 06..           .db 'R','E','D',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09AFE 59 45 4C 4C 4F 57 06 06..           .db 'Y','E','L','L','O','W',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09B11 42 4C 41 43 4B 06 06 06..           .db 'B','L','A','C','K',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09B24                           
09B24                           
09B24                           ;         ---------------------------------------------------------------------------------------------
09B24                           answers:
09B24 8E 9E 9E AE BE 8E 8E AE.. .db  #142 , #158  , #158 , #174, #190 , #142  , #142 , #174, #158 , #142, #142 , #158, #142 , #158  , #158 , #174, #190 , #142  , #142 , #174, #158 , #142, #142
09B3B                           ;    ---------------------------------------------------------------------------------------------------
09B3B                           
09B3B                           screen1:
09B3B                                   ;.incbin "screen1.nam"
09B3B                           
09B3B                           screen2:
09B3B 10 13 7E 7F 53 53 2C 2C..         .incbin "screen2.nam"
09F3B                           
09F3B                           
09F3B                           screen3:
09F3B                                ;   .incbin "screen3.nam"
09F3B                           
09F3B                           screen4:
09F3B 53 53 53 2D 53 53 2C 2C..         .incbin "screen4.nam"
0A33B                           
0A33B                           ;screen5:
0A33B                                   ;.incbin "screen5.nam"
0A33B                           
0A33B                           screen6:
0A33B 35 35 35 35 35 35 35 35..         .incbin "screen6.nam"
0A73B                           
0A73B                           screen7:
0A73B 35 35 35 35 35 35 35 35..         .incbin "screen7.nam"
0AB3B                           
0AB3B                           screen8:
0AB3B                                   ;.incbin "screen8.nam"
0AB3B                           
0AB3B                           screen9:
0AB3B                                   ;.incbin "screen9.nam"
0AB3B                           
0AB3B                           screen10:
0AB3B                                  ; .incbin "screen10.nam"0AB3B                           
0AB3B                           LoadAddy = $AB50
0AB3B                           InitAddy = $AB50
0AB3B                           PlayAddy = $AB53
0AB3B                           
0AB3B 00 00 00 00 00 00 00 00.. .org LoadAddy
0AB50 4C 83 AB 4C 8B AD BD 7E.. .incbin "quiz.nsf"
0BE75                           
0BE75 00 00 00 00 00 00 00 00.. .org $c000
0C000                           
0C000                           .base $8000
08000                           .include quiz_level2.asm
08000                           
08000                           load_sprites_1:
08000                           
08000 A5 EC                                       lda trig_disp_level1
08002 C9 01                                       cmp #1
08004 D0 1B                                       bne @rtt
08006                           
08006 E6 ED                                     INC smc1
08008 A5 ED                                     lda smc1
0800A C9 0F                                     CMP #15
0800C D0 13                                     BNE @rtt
0800E A9 00                                     lda #0
08010 85 ED                                     sta smc1
08012                           
08012                           
08012 A5 EE                      @jk :lda duf
08014 C9 00                          cmp #0
08016 D0 0A                          bne @jk1
08018 A9 A2                          lda #$A2     ;;;L
0801A 8D A1 05                       sta $5A1
0801D                           
0801D A9 01                          lda #1
0801F 85 EE                          sta duf
08021 60                        @rtt:     rts
08022                           
08022 A5 EE                      @jk1: lda duf
08024 C9 01                          cmp #1
08026 D0 0A                          bne @jk2
08028 A9 B2                           lda #$B2     ;;;E
0802A 8D A5 05                        sta $5A5
0802D                           
0802D A9 02                          lda #2
0802F 85 EE                          sta duf
08031 60                             rts
08032                           
08032 A5 EE                      @jk2:lda duf
08034 C9 02                          cmp #2
08036 D0 0A                          bne @jk3
08038 A9 A3                          lda #$A3     ;;;V
0803A 8D A9 05                       sta $5A9
0803D                           
0803D A9 03                          lda #3
0803F 85 EE                          sta duf
08041 60                             rts
08042                           
08042 A5 EE                       @jk3:lda duf
08044 C9 03                          cmp #3
08046 D0 0A                          bne @jk4
08048 A9 B2                          lda #$B2    ;;;E
0804A 8D AD 05                       sta $5AD
0804D A9 04                          lda #4
0804F 85 EE                          sta duf
08051 60                             rts
08052                           
08052 A5 EE                       @jk4:lda duf
08054 C9 04                          cmp #4
08056 D0 0A                          bne @jk5
08058 A9 A2                          lda #$A2    ;;;L
0805A 8D B1 05                       sta $5B1
0805D A9 05                          lda #5
0805F 85 EE                          sta duf
08061 60                             rts
08062                           
08062 A5 EE                       @jk5:lda duf
08064 C9 05                          cmp #5
08066 D0 0A                          bne @jk6
08068 A9 32                          lda #$32    ;;;1
0806A 8D B5 05                       sta $5B5
0806D A9 06                          lda #6
0806F 85 EE                          sta duf
08071 60                             rts
08072                           
08072                           
08072 A5 EE                       @jk6:lda duf
08074 C9 06                           cmp #6
08076 D0 05                           bne @jk7
08078                           
08078 A9 07                           lda #7
0807A 85 EE                           sta duf
0807C 60                              rts
0807D                           
0807D A5 EE                       @jk7:lda duf
0807F C9 07                           cmp #7
08081 D0 05                           bne @jk8
08083                           
08083 A9 08                           lda #8
08085 85 EE                           sta duf
08087 60                              rts
08088                           
08088 A5 EE                       @jk8:lda duf
0808A C9 08                           cmp #8
0808C D0 19                           bne @jk9
0808E                           
0808E A9 00                           lda #$00
08090 8D A1 05                        sta $5A1
08093 8D A5 05                        sta $5A5
08096 8D A9 05                        sta $5A9
08099 8D AD 05                        sta $5AD
0809C 8D B1 05                        sta $5B1
0809F 8D B5 05                        sta $5B5
080A2                           
080A2 A9 09                          lda #9
080A4 85 EE                          sta duf
080A6                               ;  lda #0
080A6                               ;  sta trig_disp_level1
080A6 60                             rts
080A7                           
080A7                           
080A7                           
080A7 A5 EE                       @jk9:lda duf
080A9 C9 09                           cmp #9
080AB D0 05                           bne @jk10
080AD                           
080AD A9 0A                           lda #10
080AF 85 EE                           sta duf
080B1 60                              rts
080B2                           
080B2                            @jk10:
080B2 A9 2F                           lda #47
080B4 85 B5                           sta $b5
080B6                           
080B6 60                          @rtt1:    rts
080B7                           
080B7                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
080B7                           ;;this subroutine is called when a question mark is touched  by hanuman  ..... it loads the question screen .....it disables the mainscreen controller and
080B7                           ;; initialises the questionscreen variables
080B7                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
080B7                           
080B7                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
080B7                           Questionscreen_1:
080B7                           
080B7 A9 00                     lda #0
080B9 85 B5                               sta go0
080BB 85 6B                               sta go
080BD 85 6C                               sta bo
080BF 85 A8                               sta $A8
080C1 85 A7                               sta $A7
080C3 85 18                               sta scro
080C5 85 A6                               sta $A6
080C7                           
080C7 A9 13                     LDA #$13
080C9 20 18 C2                  JSR setCHRPage1000
080CC                            ;       ldx  #0
080CC                           ;back    lda $500 , x
080CC                           ;        sta $600 , x
080CC                           ;        inx
080CC                           ;        txa
080CC                           ;        bne back
080CC A9 00                              lda #0
080CE 85 CF                              sta trig_controller1
080D0 A2 00                             ldx #0
080D2 A5 A3                             lda $A3
080D4 85 AB                             sta $AB
080D6 A5 A4                             lda $A4
080D8 85 AC                             sta $AC
080DA A9 00                             lda #0
080DC 85 A3                             sta $A3
080DE 85 A4                             sta $A4
080E0 A9 88                             lda #%10001000
080E2 8D 00 20                          sta $2000
080E5 20 C5 E3                   jsr ClearSprites11
080E8                           
080E8 A2 00                             ldx #0
080EA                           
080EA BD 1E E8                  @back1   lda sprite ,x
080ED 9D 00 06                          sta $600, x
080F0 E8                                inx
080F1 8A                                txa
080F2 C9 04                             cmp #4
080F4 D0 F4                             bne @back1
080F6                           
080F6                           
080F6                           
080F6 A9 0A                             lda #10
080F8 85 AD                             sta $ad
080FA                                   ;jsr pallatechange
080FA A9 00                             lda #%00000000
080FC 8D 01 20                          sta $2001
080FF 20 75 84                          jsr Q44_1
08102                           
08102                           
08102 20 C6 C1                          jsr update_sprites1
08105 A9 1E                             lda #%00011110
08107                           
08107 8D 01 20                          sta $2001
0810A A9 00                             lda #0
0810C 8D 05 20                          sta $2005
0810F 8D 05 20                          sta $2005
08112                           
08112 A9 01                             lda #1
08114 85 7C                             sta bg
08116                           
08116 A9 05                             lda #5
08118 85 7A                             sta control
0811A                           
0811A A9 01                             lda #1
0811C 85 7C                             sta bg
0811E                           
0811E A9 05                             lda #5
08120 85 7E                             sta qq
08122 85 76                             sta random_enable
08124                           
08124 A9 8E                             lda #142
08126 8D 00 06                          sta $600
08129                           
08129                           
08129                           
08129 60                         rts
0812A                           
0812A                             ;.................................................................................................................................................
0812A                           ;.........................................................................................................................................................
0812A                           ;.........................................................................................................................................................
0812A                            ;.................................................................................................................................................
0812A                           ;.........................................................................................................................................................
0812A                           ;.........................................................................................................................................................
0812A                           ;;; Controller for Question screen......
0812A                           ;;; selecting the options is done over here
0812A                           ;;;and after selceting if the answer is right then execution moves to @corr otherwise @inncorrect1
0812A                           newcontroller_1:
0812A A5 7A                             lda control
0812C C9 05                             cmp #5
0812E D0 5B                             bne @newCheckOver1
08130                           
08130 A5 78                             lda checkup_status
08132 F0 02                             beq @nxt1
08134 C6 78                             dec checkup_status
08136                           @nxt1
08136 A5 79                             lda checkdown_status
08138 F0 02                             beq @nxt
0813A C6 79                             dec checkdown_status
0813C                           @nxt:
0813C A5 20                             LDA $20
0813E 85 22                     	sta $22
08140                           
08140                           
08140 A2 00                             ldx #$00
08142                           
08142 A9 01                             LDA #$01		; strobe joypad
08144 8D 16 40                  	STA $4016
08147 A9 00                     	LDA #$00
08149 8D 16 40                  	STA $4016
0814C                           @con_loop1:
0814C AD 16 40                  	LDA $4016		; check the state of each button
0814F 4A                        	LSR
08150 66 20                     	ROR $20
08152 E8                                INX
08153 E0 08                             CPX #$08
08155 D0 F5                             bne @con_loop1
08157                           
08157 A5 22                     	LDA $22
08159 49 FF                     	EOR #$FF
0815B 25 20                     	AND $20
0815D                           
0815D                           @newCheckUp:
0815D A5 78                             lda checkup_status
0815F D0 42                             bne @newCheckDown
08161                           
08161 A9 10                     	LDA #%00010000
08163                           	;AND justpressed
08163 25 20                     	AND $20
08165 F0 3C                             BEQ @newCheckDown
08167 A9 1E                               lda #%00011110
08169 8D 01 20                                      sta $2001
0816C                           
0816C A9 0D                             lda #13
0816E 85 78                             sta checkup_status
08170 AD 00 06                         	lda $600
08173 C9 8E                     	cmp #142
08175 F0 0C                             beq @onedown
08177 C9 9E                             cmp #158
08179 F0 13                             beq @twodown
0817B C9 AE                             cmp #174
0817D F0 17                             beq @threedown
0817F C9 BE                             cmp #190
08181                           
08181 F0 1B                             beq @fourdown
08183                           @onedown:
08183 A9 BE                     lda #190
08185 8D 00 06                  sta $600
08188 4C E4 81                  jmp @newCheckLeft
0818B                           @newCheckOver1 :
0818B 4C 09 82                  jmp @newCheckOver
0818E                           @twodown:
0818E A9 8E                     lda #142
08190 8D 00 06                  sta $600
08193 4C E4 81                  jmp @newCheckLeft
08196                           @threedown:
08196 A9 9E                     lda #158
08198 8D 00 06                  sta $600
0819B 4C E4 81                  jmp @newCheckLeft
0819E                           @fourdown:
0819E A9 AE                     lda #174
081A0 8D 00 06                  sta $600
081A3                           
081A3                           
081A3                           @newCheckDown:
081A3 A5 79                             lda checkdown_status
081A5 D0 3D                             bne @newCheckLeft
081A7 A9 20                     	LDA #%00100000
081A9                           	;AND justpressed
081A9 25 20                     	AND $20
081AB F0 37                     	BEQ @newCheckLeft
081AD A9 0D                     	lda #13
081AF 85 79                             sta checkdown_status
081B1 AD 00 06                          lda $600
081B4 C9 8E                             cmp #142
081B6 F0 0C                             beq @one
081B8 C9 9E                             cmp #158
081BA F0 10                             beq @two
081BC C9 AE                             cmp #174
081BE F0 14                             beq @three
081C0 C9 BE                             cmp #190
081C2 F0 18                             beq @four
081C4                           @one:
081C4 A9 9E                     lda #158
081C6 8D 00 06                  sta $600
081C9 4C A3 81                  jmp @newCheckDown
081CC                           @two:
081CC A9 AE                     lda #174
081CE 8D 00 06                  sta $600
081D1 4C A3 81                  jmp @newCheckDown
081D4                           @three:
081D4 A9 BE                     lda #190
081D6 8D 00 06                  sta $600
081D9 4C A3 81                  jmp @newCheckDown
081DC                           @four:
081DC A9 8E                     lda #142
081DE 8D 00 06                  sta $600
081E1 4C A3 81                  jmp @newCheckDown
081E4                           
081E4                           
081E4                           @newCheckLeft:
081E4 A9 40                     	LDA #%01000000
081E6 25 20                     	AND $20
081E8 F0 00                     	BEQ @newCheckRight
081EA                           
081EA                           
081EA                           @newCheckRight:
081EA A9 80                     	LDA #%10000000
081EC 25 20                     	AND $20
081EE F0 00                     	BEQ @newCheckB
081F0                           
081F0                           ;	sta random_enable
081F0                           ;bck1:	jsr backtomain
081F0                           
081F0                           ;	BEQ newCheckSe
081F0                           
081F0                           ;newCheckSel:
081F0                           ;	LDA #%00000100
081F0                           ;	AND justpressed
081F0                           ;	BEQ newCheckStart
081F0                           
081F0                           ;newCheckStart
081F0                           ;	LDA #%00001000
081F0                           ;	AND justpressed
081F0                           ;	BEQ newCheckB
081F0                           
081F0                           @newCheckB:
081F0                                   ;lda wrongans
081F0                                   ;cmp #10
081F0                                   ;beq @newCheckA
081F0 A9 02                     	LDA #%00000010
081F2 25 20                     	AND $20
081F4 F0 00                     	BEQ @newCheckA
081F6                           
081F6                           
081F6                           
081F6                           @newCheckA:
081F6 A9 01                     	LDA #%00000001
081F8 25 20                     	AND $20
081FA F0 0D                     	beq @newCheckOver
081FC                           	
081FC A4 77                     	ldy question_count
081FE                                   ; lda #80
081FE B9 70 9A                          lda answers_1,y
08201 CD 00 06                          cmp $600
08204                                ;   cmp #option1
08204 F0 04                             beq @corrr
08206 4C 0D 82                          jmp @inncorrect1
08209                           
08209                           @newCheckOver:
08209                           
08209 60                                RTS
0820A                           @corrr:
0820A 4C 01 83                        jmp @correct
0820D                             ;       ----------------------------------------------------
0820D                                       ; Loading Sad Face
0820D                                       ; triggering->jmp from new controller
0820D                               ;       ----------------------------------------------------
0820D                           @inncorrect1 :
0820D                           
0820D 20 0B E4                   jsr load_incorrect
08210 A2 00                                         ldx #0
08212                           
08212 BD 92 E8                  @back1   lda correct_sprite ,x
08215 9D 00 06                          sta $600, x
08218 E8                                inx
08219 8A                                txa
0821A C9 04                             cmp #4
0821C D0 F4                             bne @back1
0821E 20 CC C1                              jsr update_sprites11
08221 A9 0A                                 lda #10
08223 85 96                                 sta wrongans
08225 85 7A                                 sta control
08227 A9 00                                 lda #%00000000
08229 8D 01 20                              sta $2001
0822C A9 01                                 lda #1
0822E 85 A1                                 sta trigger_delay2
08230                           
08230                           
08230 A9 00                             lda #%00000000
08232 8D 01 20                          sta $2001
08235 AD 02 20                   LDA $2002             ; read PPU status to reset the high/low latch
08238 A9 23                                 LDA #$23
0823A 8D 06 20                              STA $2006             ; write the high byte of $2000 address
0823D A9 04                                 LDA #$04
0823F 8D 06 20                              STA $2006             ; write the low byte of $2000 address
08242 A2 00                                 LDX #$00
08244                           
08244 A9 F1                                 LDA #$F1               ;loading correponding tiles from chr
08246 8D 07 20                              STA $2007
08249 A9 F2                                 LDA #$F2
0824B 8D 07 20                              STA $2007
0824E                           
0824E AD 02 20                              LDA $2002             ; read PPU status to reset the high/low latch
08251 A9 22                                 LDA #$22
08253 8D 06 20                              STA $2006             ; write the high byte of $2000 address
08256 A9 84                                 LDA #$84
08258 8D 06 20                              STA $2006             ; write the low byte of $2000 address
0825B A2 00                                 LDX #$00
0825D                           
0825D A9 B1                                 LDA #$B1               ;loading correponding tiles from chr
0825F 8D 07 20                              STA $2007
08262 A9 B2                                 LDA #$b2
08264 8D 07 20                              STA $2007
08267 A9 B3                                 LDA #$B3
08269 8D D7 07                              STA #2007
0826C                           
0826C AD 02 20                              LDA $2002             ; read PPU status to reset the high/low latch
0826F A9 22                                 LDA #$22
08271 8D 06 20                              STA $2006             ; write the high byte of $2000 address
08274 A9 E4                                 LDA #$e4
08276 8D 06 20                              STA $2006             ; write the low byte of $2000 address
08279 A2 00                                 LDX #$00
0827B                           
0827B A9 E0                                 LDA #$E0              ;loading correponding tiles from chr
0827D 8D D7 07                              STA #2007
08280 A9 E1                                 LDA #$E1
08282 8D 07 20                              STA $2007
08285 A9 E2                                 LDA #$E2
08287 8D 07 20                              STA $2007
0828A A9 E3                                 LDA #$E3
0828C 8D 07 20                              STA $2007
0828F                           
0828F AD 02 20                              LDA $2002             ; read PPU status to reset the high/low latch
08292 A9 22                                 LDA #$22
08294 8D 06 20                              STA $2006             ; write the high byte of $2000 address
08297 A9 C4                                 LDA #$C4
08299 8D 06 20                              STA $2006             ; write the low byte of $2000 address
0829C A2 00                                 LDX #$00
0829E                           
0829E A9 D1                                 LDA #$D1              ;loading correponding tiles from chr
082A0 8D 07 20                              STA $2007
082A3 A9 D2                                 LDA #$D2
082A5 8D 07 20                              STA $2007
082A8 A9 D3                                 LDA #$D3
082AA 8D 07 20                              STA $2007
082AD                           
082AD AD 02 20                              LDA $2002             ; read PPU status to reset the high/low latch
082B0 A9 22                                 LDA #$22
082B2 8D 06 20                              STA $2006             ; write the high byte of $2000 address
082B5 A9 A4                                 LDA #$A4
082B7 8D 06 20                              STA $2006             ; write the low byte of $2000 address
082BA A2 00                                 LDX #$00
082BC                           
082BC A9 C1                                 LDA #$C1              ;loading correponding tiles from chr
082BE 8D 07 20                              STA $2007
082C1 A9 C2                                 LDA #$C2
082C3 8D 07 20                              STA $2007
082C6 A9 C3                                 LDA #$C3
082C8 8D 07 20                              STA $2007
082CB                           
082CB AD 02 20                              LDA $2002             ; read PPU status to reset the high/low latch
082CE A9 23                                 LDA #$23
082D0 8D 06 20                              STA $2006             ; write the high byte of $2000 address
082D3 A9 41                                 LDA #$41
082D5 8D 06 20                              STA $2006             ; write the low byte of $2000 address
082D8 A2 00                                 LDX #$00
082DA                           
082DA A9 57                                 lda #$57
082DC 8D 07 20                              sta $2007
082DF A9 52                                 lda #$52
082E1 8D 07 20                              sta $2007
082E4 A9 4F                                 lda #$4F
082E6 8D 07 20                              sta $2007
082E9 A9 4E                                 lda #$4E
082EB 8D 07 20                              sta $2007
082EE A9 47                                 lda #$47
082F0 8D 07 20                              sta $2007
082F3                           
082F3 A9 1E                                 lda #%00011110        ; on the screen
082F5 8D 01 20                              sta $2001
082F8 A9 00                                 lda #0                ; clearin $2005 to avoid scroling
082FA 8D 05 20                              sta $2005
082FD 8D 05 20                              sta $2005
08300 60                                rts
08301                           ;       -----------------------------------------------------
08301                                   ; Loading happy face
08301                                   ; triggering->jmp from new controller
08301                           @correct :
08301 20 D0 E3                            jsr load_correct
08304 20 CC C1                           jsr update_sprites11
08307 A9 01                             lda #1
08309 85 9F                             sta trigger_delay
0830B 85 7A                             sta control
0830D                           
0830D A9 00                             lda #%00000000
0830F 8D 01 20                          sta $2001
08312                           
08312 AD 02 20                          LDA $2002             ; read PPU status to reset the high/low latch
08315 A9 22                             LDA #$22
08317 8D 06 20                          STA $2006             ; write the high byte of $2000 address
0831A A9 64                             LDA #$64
0831C 8D 06 20                          STA $2006             ; write the low byte of $2000 address
0831F A2 00                             LDX #$00
08321                           
08321                           
08321 A9 A5                             lda #$A5
08323 8D 07 20                          sta $2007
08326 A9 B4                             lda #$B4
08328 8D 07 20                          sta $2007
0832B A9 A5                             lda #$A5
0832D 8D 07 20                          sta $2007
08330                           
08330 A9 22                             LDA #$22
08332 8D 06 20                          STA $2006             ; write the high byte of $2000 address
08335 A9 84                             LDA #$84
08337 8D 06 20                          STA $2006             ; write the low byte of $2000 address
0833A A2 00                             LDX #$00
0833C                           
0833C A9 B5                             lda #$b5
0833E 8D 07 20                          sta $2007
08341 A9 B6                             lda #$B6
08343 8D 07 20                          sta $2007
08346 A9 B7                             lda #$B7
08348 8D 07 20                          sta $2007
0834B                           
0834B A9 22                             LDA #$22
0834D 8D 06 20                          STA $2006             ; write the high byte of $2000 address
08350 A9 A4                             LDA #$A4
08352 8D 06 20                          STA $2006             ; write the low byte of $2000 address
08355 A2 00                             LDX #$00
08357                           
08357 A9 C5                             lda #$C5
08359 8D 07 20                          sta $2007
0835C A9 C4                             lda #$C4
0835E 8D 07 20                          sta $2007
08361                           
08361 AD 02 20                          LDA $2002             ; read PPU status to reset the high/low latch
08364 A9 22                             LDA #$22
08366 8D 06 20                          STA $2006             ; write the high byte of $2000 address
08369 A9 C3                             LDA #$C3
0836B 8D 06 20                          STA $2006             ; write the low byte of $2000 address
0836E A2 00                             LDX #$00
08370                           
08370 A9 D4                             lda #$D4
08372 8D 07 20                          sta $2007
08375 A9 D5                             lda #$D5
08377 8D 07 20                          sta $2007
0837A A9 D6                             lda #$D6
0837C 8D 07 20                          sta $2007
0837F A9 D7                             lda #$D7
08381 8D 07 20                          sta $2007
08384                           
08384 AD 02 20                          LDA $2002             ; read PPU status to reset the high/low latch
08387 A9 22                             LDA #$22
08389 8D 06 20                          STA $2006             ; write the high byte of $2000 address
0838C A9 E3                             LDA #$e3
0838E 8D 06 20                          STA $2006             ; write the low byte of $2000 address
08391 A2 00                             LDX #$00
08393                           
08393 A9 E4                             lda #$E4
08395 8D 07 20                          sta $2007
08398 A9 E5                             lda #$E5
0839A 8D 07 20                          sta $2007
0839D A9 E6                             lda #$E6
0839F 8D 07 20                          sta $2007
083A2 A9 E7                             lda #$E7
083A4 8D 07 20                          sta $2007
083A7                           
083A7 AD 02 20                          LDA $2002             ; read PPU status to reset the high/low latch
083AA A9 23                             LDA #$23
083AC 8D 06 20                          STA $2006             ; write the high byte of $2000 address
083AF A9 04                             LDA #$04
083B1 8D 06 20                          STA $2006             ; write the low byte of $2000 address
083B4 A2 00                             LDX #$00
083B6                           
083B6 A9 F5                             lda #$F5
083B8 8D 07 20                          sta $2007
083BB A9 F6                             lda #$F6
083BD 8D 07 20                          sta $2007
083C0                           
083C0 AD 02 20                          LDA $2002             ; read PPU status to reset the high/low latch
083C3 A9 23                             LDA #$23
083C5 8D 06 20                          STA $2006             ; write the high byte of $2000 address
083C8 A9 41                             LDA #$41
083CA 8D 06 20                          STA $2006             ; write the low byte of $2000 address
083CD A2 00                             LDX #$00
083CF                           
083CF A9 52                             LDA #$52
083D1 8D 07 20                          sta $2007
083D4 A9 49                             lda #$49
083D6 8D 07 20                          sta $2007
083D9 A9 47                             lda #$47
083DB 8D 07 20                          sta $2007
083DE A9 48                             lda #$48
083E0 8D 07 20                          sta $2007
083E3 A9 54                             lda #$54
083E5 8D 07 20                          sta $2007
083E8                           
083E8 A9 1E                             lda #%00011110
083EA 8D 01 20                          sta $2001
083ED A9 00                             lda #0
083EF 8D 05 20                          sta $2005
083F2 8D 05 20                          sta $2005
083F5 60                                rts
083F6                           
083F6                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
083F6                           screenchange5_1:
083F6 A9 20                        	LDA #$20                ; set to beginning of first nametable
083F8 8D 06 20                      	STA $2006
083FB A9 00                         	LDA #$00
083FD 8D 06 20                      	STA $2006
08400 A9 87                             LDA #<screen5_1              ; load low byte of first picture
08402 85 10                             STA $10
08404 A9 9E                             LDA #>screen5_1              ; load high byte of first picture
08406 85 11                             STA $11
08408 A0 00                             LDY #$00
0840A A2 04                             LDX #$04
0840C B1 10                     @NameLoop22:    LDA ($10),y
0840E 8D 07 20                                STA $2007
08411 C8                                      INY
08412 D0 F8                                   BNE @NameLoop22
08414 E6 11                                   INC $11
08416 CA                                      DEX
08417 D0 F3                                   BNE @NameLoop22
08419 A5 A5                                   lda $A5
0841B 8D 00 20                                sta $2000
0841E 60                        rts
0841F                           
0841F                           screenchange7_1:
0841F A9 20                        	LDA #$20                ; set to beginning of first nametable
08421 8D 06 20                      	STA $2006
08424 A9 00                         	LDA #$00
08426 8D 06 20                      	STA $2006
08429 A9 87                             LDA #<screen7_1              ; load low byte of first picture
0842B 85 10                             STA $10
0842D A9 A2                             LDA #>screen7_1              ; load high byte of first picture
0842F 85 11                             STA $11
08431 A0 00                             LDY #$00
08433 A2 04                             LDX #$04
08435 B1 10                     @NameLoop22:    LDA ($10),y
08437 8D 07 20                                STA $2007
0843A C8                                      INY
0843B D0 F8                                   BNE @NameLoop22
0843D E6 11                                   INC $11
0843F CA                                      DEX
08440 D0 F3                                   BNE @NameLoop22
08442 A5 A5                                   lda $A5
08444 8D 00 20                                sta $2000
08447 60                        rts
08448                           
08448                           
08448                             mainscreen1_1:
08448 A9 20                        	LDA #$20                ; set to beginning of first nametable
0844A 8D 06 20                      	STA $2006
0844D A9 00                         	LDA #$00
0844F 8D 06 20                      	STA $2006
08452 A9 87                             LDA #<screen1_1              ; load low byte of first picture
08454 85 10                             STA $10
08456 A9 9A                             LDA #>screen1_1              ; load high byte of first picture
08458 85 11                             STA $11
0845A A0 00                             LDY #$00
0845C A2 04                             LDX #$04
0845E B1 10                     @NameLoop22:    LDA ($10),y
08460 8D 07 20                                STA $2007
08463 C8                                      INY
08464 D0 F8                                   BNE @NameLoop22
08466 E6 11                                   INC $11
08468 CA                                      DEX
08469 D0 F3                                   BNE @NameLoop22
0846B A5 A5                                   lda $A5
0846D 8D 00 20                                sta $2000
08470 A9 EF                                   lda #239
08472 85 A4                                   sta $A4
08474 60                        rts
08475                           
08475                           Q44_1:
08475 A9 20                        	LDA #$20                ; set to beginning of first nametable
08477 8D 06 20                      	STA $2006
0847A A9 00                         	LDA #$00
0847C 8D 06 20                      	STA $2006
0847F A9 BA                             LDA #<pic1              ; load low byte of first picture
08481 85 10                             STA $10
08483 A9 EA                             LDA #>pic1              ; load high byte of first picture
08485 85 11                             STA $11
08487 A0 00                             LDY #$00
08489 A2 04                             LDX #$04
0848B B1 10                     @NameLoop6:    LDA ($10),y
0848D 8D 07 20                                STA $2007
08490 C8                                      INY
08491 D0 F8                                   BNE @NameLoop6
08493 E6 11                                   INC $11
08495 CA                                      DEX
08496 D0 F3                                   BNE @NameLoop6
08498 60                        RTS
08499                           ;  ---------------------------------------------------------
08499                           ;  -------------------------------------------------------------------
08499                              ;loading the QUESTION on the QUESTION SCREEN
08499                              ;triggered in question screen
08499                           ;  --------------------------------------------------------------------
08499                           
08499                           ; Loading questions
08499                           
08499                           background_1:
08499 A5 D4                                lda new_qst
0849B C9 01                                cmp #1
0849D D0 04                                bne @srt_qs
0849F 20 23 89                             jsr background__1
084A2 60                                   rts
084A3                           @srt_qs:
084A3 A5 7C                                      lda bg
084A5 C9 01                                      cmp #1
084A7 F0 01                                      beq @new1
084A9 60                                         rts
084AA                           @new1:
084AA AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
084AD A9 20                                          LDA #$20
084AF 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
084B2 A9 86                                          LDA #$86
084B4 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
084B7 A2 00                                          LDX #$00
084B9 A4 7D                                          LDY count
084BB                                                             ; start out at 0
084BB                           @LoadBackgroundLoop11:
084BB A9 00                                         lda #%00000000
084BD 8D 01 20                                      sta $2001
084C0                           
084C0 B9 88 91                                      LDA question1_1, y              ; load data from address (background + the value in x)
084C3 A6 85                                         ldx question_no
084C5 E0 00                                         cpx #0
084C7 F0 5E                                         beq @start
084C9                           
084C9 B9 20 92                                      LDA question2_1, y
084CC A6 85                                         ldx question_no
084CE E0 01                                         cpx #1
084D0 F0 55                                         beq @start
084D2                           
084D2 B9 B8 92                                      LDA question3_1, y              ; load data from address (background + the value in x)
084D5 A6 85                                         ldx question_no
084D7 E0 02                                         cpx #2
084D9 F0 4C                                         beq @start
084DB                           
084DB B9 50 93                                      LDA question4_1, y              ; load data from address (background + the value in x)
084DE A6 85                                         ldx question_no
084E0 E0 03                                         cpx #3
084E2 F0 43                                         beq @start
084E4                           
084E4 B9 E8 93                                      LDA question5_1, y              ; load data from address (background + the value in x)
084E7 A6 85                                         ldx question_no
084E9 E0 04                                         cpx #4
084EB F0 3A                                         beq @start
084ED                           
084ED B9 80 94                                      LDA question6_1, y
084F0 A6 85                                         ldx question_no
084F2 E0 05                                         cpx #5
084F4 F0 31                                         beq @start
084F6                           
084F6 B9 18 95                                      LDA question7_1, y              ; load data from address (background + the value in x)
084F9 A6 85                                         ldx question_no
084FB E0 06                                         cpx #6
084FD F0 28                                         beq @start
084FF                           
084FF B9 B0 95                                      LDA question8_1, y              ; load data from address (background + the value in x)
08502 A6 85                                         ldx question_no
08504 E0 07                                         cpx #7
08506 F0 1F                                         beq @start
08508                           
08508 B9 48 96                                      LDA question9_1, y              ; load data from address (background + the value in x)
0850B A6 85                                         ldx question_no
0850D E0 08                                         cpx #8
0850F F0 16                                         beq @start
08511                           
08511 B9 E0 96                                      LDA question10_1, y
08514 A6 85                                         ldx question_no
08516 E0 09                                         cpx #9
08518 F0 0D                                         beq @start
0851A                                               
0851A A9 01                                         lda #1
0851C 85 D4                                         sta new_qst
0851E B9 78 97                                      LDA question11_1, y              ; load data from address (background + the value in x)
08521 A6 85                                         ldx question_no
08523 E0 0A                                         cpx #10
08525 F0 00                                         beq @start
08527                           
08527                           
08527                           
08527                           
08527                           @start:
08527 8D 07 20                                      STA $2007
0852A C6 86                                         DEC count2
0852C C8                                            INY                   ; X = X + 1
0852D A9 00                                         lda #0
0852F C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08531 D0 88                                         BNE @LoadBackgroundLoop11
08533 A9 13                                         lda #19
08535 85 86                                         sta count2
08537                           
08537                           
08537 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
0853A A9 20                                          LDA #$20
0853C 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
0853F A9 C6                                          LDA #$C6
08541 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08544 A2 00                                          LDX #$00
08546                                                             ; start out at 0
08546                           @LoadBackgroundLoop12:
08546                           
08546 B9 88 91                                      LDA question1_1, y              ; load data from address (background + the value in x)
08549 A6 85                                         ldx question_no
0854B E0 00                                         cpx #0
0854D F0 5A                                         beq @start1
0854F                           
0854F B9 20 92                                      LDA question2_1, y
08552 A6 85                                         ldx question_no
08554 E0 01                                         cpx #1
08556 F0 51                                         beq @start1
08558                           
08558 B9 B8 92                                      LDA question3_1, y              ; load data from address (background + the value in x)
0855B A6 85                                         ldx question_no
0855D E0 02                                         cpx #2
0855F F0 48                                         beq @start1
08561                           
08561 B9 50 93                                      LDA question4_1, y              ; load data from address (background + the value in x)
08564 A6 85                                         ldx question_no
08566 E0 03                                         cpx #3
08568 F0 3F                                         beq @start1
0856A                           
0856A B9 E8 93                                      LDA question5_1, y              ; load data from address (background + the value in x)
0856D A6 85                                         ldx question_no
0856F E0 04                                         cpx #4
08571 F0 36                                         beq @start1
08573                           
08573 B9 80 94                                      LDA question6_1, y
08576 A6 85                                         ldx question_no
08578 E0 05                                         cpx #5
0857A F0 2D                                         beq @start1
0857C                           
0857C B9 18 95                                      LDA question7_1, y              ; load data from address (background + the value in x)
0857F A6 85                                         ldx question_no
08581 E0 06                                         cpx #6
08583 F0 24                                         beq @start1
08585                           
08585 B9 B0 95                                      LDA question8_1, y              ; load data from address (background + the value in x)
08588 A6 85                                         ldx question_no
0858A E0 07                                         cpx #7
0858C F0 1B                                         beq @start1
0858E                           
0858E B9 48 96                                      LDA question9_1, y              ; load data from address (background + the value in x)
08591 A6 85                                         ldx question_no
08593 E0 08                                         cpx #8
08595 F0 12                                         beq @start1
08597                           
08597 B9 E0 96                                      LDA question10_1, y
0859A A6 85                                         ldx question_no
0859C E0 09                                         cpx #9
0859E F0 09                                         beq @start1
085A0                           
085A0 B9 78 97                                      LDA question11_1, y              ; load data from address (background + the value in x)
085A3 A6 85                                         ldx question_no
085A5 E0 0A                                         cpx #10
085A7 F0 00                                         beq @start1
085A9                           
085A9                           @start1:
085A9 8D 07 20                                      STA $2007
085AC C6 86                                         DEC count2
085AE C8                                            INY                   ; X = X + 1
085AF A9 00                                         lda #0
085B1 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
085B3 D0 91                                         BNE @LoadBackgroundLoop12
085B5 A9 13                                         lda #19
085B7 85 86                                         sta count2
085B9                           
085B9                           
085B9 AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
085BC A9 21                                          LDA #$21
085BE 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
085C1 A9 06                                          LDA #$06
085C3 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
085C6 A2 00                                          LDX #$00
085C8                                                             ; start out at 0
085C8                           @LoadBackgroundLoop13:
085C8                           
085C8 B9 88 91                                      LDA question1_1, y              ; load data from address (background + the value in x)
085CB A6 85                                         ldx question_no
085CD E0 00                                         cpx #0
085CF F0 5A                                         beq @start2
085D1                           
085D1 B9 20 92                                      LDA question2_1, y
085D4 A6 85                                         ldx question_no
085D6 E0 01                                         cpx #1
085D8 F0 51                                         beq @start2
085DA                           
085DA B9 B8 92                                      LDA question3_1, y              ; load data from address (background + the value in x)
085DD A6 85                                         ldx question_no
085DF E0 02                                         cpx #2
085E1 F0 48                                         beq @start2
085E3                           
085E3 B9 50 93                                      LDA question4_1, y              ; load data from address (background + the value in x)
085E6 A6 85                                         ldx question_no
085E8 E0 03                                         cpx #3
085EA F0 3F                                         beq @start2
085EC                           
085EC B9 E8 93                                      LDA question5_1, y              ; load data from address (background + the value in x)
085EF A6 85                                         ldx question_no
085F1 E0 04                                         cpx #4
085F3 F0 36                                         beq @start2
085F5                           
085F5 B9 80 94                                      LDA question6_1, y
085F8 A6 85                                         ldx question_no
085FA E0 05                                         cpx #5
085FC F0 2D                                         beq @start2
085FE                           
085FE B9 18 95                                      LDA question7_1, y              ; load data from address (background + the value in x)
08601 A6 85                                         ldx question_no
08603 E0 06                                         cpx #6
08605 F0 24                                         beq @start2
08607                           
08607 B9 B0 95                                      LDA question8_1, y              ; load data from address (background + the value in x)
0860A A6 85                                         ldx question_no
0860C E0 07                                         cpx #7
0860E F0 1B                                         beq @start2
08610                           
08610 B9 48 96                                      LDA question9_1, y              ; load data from address (background + the value in x)
08613 A6 85                                         ldx question_no
08615 E0 08                                         cpx #8
08617 F0 12                                         beq @start2
08619                           
08619 B9 E0 96                                      LDA question10_1, y
0861C A6 85                                         ldx question_no
0861E E0 09                                         cpx #9
08620 F0 09                                         beq @start2
08622                           
08622 B9 78 97                                      LDA question11_1, y              ; load data from address (background + the value in x)
08625 A6 85                                         ldx question_no
08627 E0 0A                                         cpx #10
08629 F0 00                                         beq @start2
0862B                           
0862B                           @start2:
0862B 8D 07 20                                      STA $2007
0862E C6 86                                         DEC count2
08630 C8                                            INY                   ; X = X + 1
08631 A9 00                                         lda #0
08633 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08635 D0 91                                         BNE @LoadBackgroundLoop13
08637                           
08637 A9 1E                                         lda #%00011110
08639 8D 01 20                                      sta $2001
0863C A9 00                                         LDA #$00
0863E 8D 05 20                                      STA $2005
08641 8D 05 20                                      STA $2005
08644 A9 00                                         lda #0
08646 85 7C                                         sta bg
08648 A9 13                                         lda #19
0864A 85 86                                         sta count2
0864C A9 01                                         lda #1
0864E 85 7F                                         sta bg1
08650 84 7D                                         sty count
08652 60                                            rts
08653                           ;      -------------------------------------------------------------------
08653                           ; loading options on the question screen
08653                           background1_1:
08653 A5 D5                                 lda new_qst1
08655 C9 01                                 cmp #1
08657 D0 04                                 bne @srt_qs1
08659 20 12 8A                              jsr background1__1
0865C 60                                    rts
0865D                           @srt_qs1:
0865D A5 7F                                      lda bg1
0865F C9 01                                      cmp #1
08661 F0 01                                      beq @new9
08663 60                                         rts
08664                           @new9:
08664 AD 02 20                                   LDA $2002             ; read PPU status to reset the high/low latch
08667 A9 21                                          LDA #$21
08669 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
0866C A9 EB                                          LDA #$EB
0866E 8D 06 20                                       STA $2006
08671 84 7D                                          sty count             ; write the low byte of $2000 address
08673                                                             ; start out at 0
08673                           @LoadBackgroundLoop29:
08673 A9 00                                         lda #%00000000
08675 8D 01 20                                      sta $2001
08678                           
08678 B9 88 91                                      LDA question1_1, y              ; load data from address (background + the value in x)
0867B A6 85                                         ldx question_no
0867D E0 00                                         cpx #0
0867F F0 5E                                         beq @start91
08681                           
08681 B9 20 92                                      LDA question2_1, y
08684 A6 85                                         ldx question_no
08686 E0 01                                         cpx #1
08688 F0 55                                         beq @start91
0868A                           
0868A B9 B8 92                                      LDA question3_1, y              ; load data from address (background + the value in x)
0868D A6 85                                         ldx question_no
0868F E0 02                                         cpx #2
08691 F0 4C                                         beq @start91
08693                           
08693 B9 50 93                                      LDA question4_1, y              ; load data from address (background + the value in x)
08696 A6 85                                         ldx question_no
08698 E0 03                                         cpx #3
0869A F0 43                                         beq @start91
0869C                           
0869C B9 E8 93                                      LDA question5_1, y              ; load data from address (background + the value in x)
0869F A6 85                                         ldx question_no
086A1 E0 04                                         cpx #4
086A3 F0 3A                                         beq @start91
086A5                           
086A5 B9 80 94                                      LDA question6_1, y
086A8 A6 85                                         ldx question_no
086AA E0 05                                         cpx #5
086AC F0 31                                         beq @start91
086AE                           
086AE B9 18 95                                      LDA question7_1, y              ; load data from address (background + the value in x)
086B1 A6 85                                         ldx question_no
086B3 E0 06                                         cpx #6
086B5 F0 28                                         beq @start91
086B7                           
086B7 B9 B0 95                                      LDA question8_1, y              ; load data from address (background + the value in x)
086BA A6 85                                         ldx question_no
086BC E0 07                                         cpx #7
086BE F0 1F                                         beq @start91
086C0                           
086C0 B9 48 96                                      LDA question9_1, y              ; load data from address (background + the value in x)
086C3 A6 85                                         ldx question_no
086C5 E0 08                                         cpx #8
086C7 F0 16                                         beq @start91
086C9                           
086C9 B9 E0 96                                      LDA question10_1, y
086CC A6 85                                         ldx question_no
086CE E0 09                                         cpx #9
086D0 F0 0D                                         beq @start91
086D2                           
086D2 A9 01                                         LDA #1
086D4 85 D5                                         STA new_qst1
086D6 B9 78 97                                      LDA question11_1, y              ; load data from address (background + the value in x)
086D9 A6 85                                         ldx question_no
086DB E0 0A                                         cpx #10
086DD F0 00                                         beq @start91
086DF                           
086DF                           @start91:
086DF 8D 07 20                                      STA $2007
086E2 C6 86                                         DEC count2
086E4 C8                                            INY                   ; X = X + 1
086E5 A9 00                                         lda #0
086E7 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
086E9 D0 88                                         BNE @LoadBackgroundLoop29
086EB A9 13                                         lda #19
086ED 85 86                                         sta count2
086EF                           
086EF                           
086EF AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
086F2 A9 22                                          LDA #$22
086F4 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
086F7 A9 8B                                          LDA #$8B
086F9 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
086FC A2 00                                          LDX #$00
086FE                                                             ; start out at 0
086FE AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08701 A9 22                                          LDA #$22
08703 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08706 A9 4B                                          LDA #$4B
08708 8D 06 20                                       STA $2006
0870B 84 7D                                          sty count             ; write the low byte of $2000 address
0870D                                                             ; start out at 0
0870D                           @LoadBackgroundLoop19:
0870D A9 00                                         lda #%00000000
0870F 8D 01 20                                      sta $2001
08712                           
08712 B9 88 91                                      LDA question1_1, y              ; load data from address (background + the value in x)
08715 A6 85                                         ldx question_no
08717 E0 00                                         cpx #0
08719 F0 5A                                         beq @start9
0871B                           
0871B B9 20 92                                      LDA question2_1, y
0871E A6 85                                         ldx question_no
08720 E0 01                                         cpx #1
08722 F0 51                                         beq @start9
08724                           
08724 B9 B8 92                                      LDA question3_1, y              ; load data from address (background + the value in x)
08727 A6 85                                         ldx question_no
08729 E0 02                                         cpx #2
0872B F0 48                                         beq @start9
0872D                           
0872D B9 50 93                                      LDA question4_1, y              ; load data from address (background + the value in x)
08730 A6 85                                         ldx question_no
08732 E0 03                                         cpx #3
08734 F0 3F                                         beq @start9
08736                           
08736 B9 E8 93                                      LDA question5_1, y              ; load data from address (background + the value in x)
08739 A6 85                                         ldx question_no
0873B E0 04                                         cpx #4
0873D F0 36                                         beq @start9
0873F                           
0873F B9 80 94                                      LDA question6_1, y
08742 A6 85                                         ldx question_no
08744 E0 05                                         cpx #5
08746 F0 2D                                         beq @start9
08748                           
08748 B9 18 95                                      LDA question7_1, y              ; load data from address (background + the value in x)
0874B A6 85                                         ldx question_no
0874D E0 06                                         cpx #6
0874F F0 24                                         beq @start9
08751                           
08751 B9 B0 95                                      LDA question8_1, y              ; load data from address (background + the value in x)
08754 A6 85                                         ldx question_no
08756 E0 07                                         cpx #7
08758 F0 1B                                         beq @start9
0875A                           
0875A B9 48 96                                      LDA question9_1, y              ; load data from address (background + the value in x)
0875D A6 85                                         ldx question_no
0875F E0 08                                         cpx #8
08761 F0 12                                         beq @start9
08763                           
08763 B9 E0 96                                      LDA question10_1, y
08766 A6 85                                         ldx question_no
08768 E0 09                                         cpx #9
0876A F0 09                                         beq @start9
0876C                           
0876C B9 78 97                                      LDA question11_1, y              ; load data from address (background + the value in x)
0876F A6 85                                         ldx question_no
08771 E0 0A                                         cpx #10
08773 F0 00                                         beq @start9
08775                           
08775                           @start9:
08775 8D 07 20                                      STA $2007
08778 C6 86                                         DEC count2
0877A C8                                            INY                   ; X = X + 1
0877B A9 00                                         lda #0
0877D C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
0877F D0 8C                                         BNE @LoadBackgroundLoop19
08781 A9 13                                         lda #19
08783 85 86                                         sta count2
08785                           
08785                           
08785 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08788 A9 22                                          LDA #$22
0878A 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
0878D A9 8B                                          LDA #$8B
0878F 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08792 A2 00                                          LDX #$00
08794                                                             ; start out at 0
08794                           @LoadBackgroundLoop18:
08794                           
08794 B9 88 91                                      LDA question1_1, y              ; load data from address (background + the value in x)
08797 A6 85                                         ldx question_no
08799 E0 00                                         cpx #0
0879B F0 5A                                         beq @start8
0879D                           
0879D B9 20 92                                      LDA question2_1, y
087A0 A6 85                                         ldx question_no
087A2 E0 01                                         cpx #1
087A4 F0 51                                         beq @start8
087A6                           
087A6 B9 B8 92                                      LDA question3_1, y              ; load data from address (background + the value in x)
087A9 A6 85                                         ldx question_no
087AB E0 02                                         cpx #2
087AD F0 48                                         beq @start8
087AF                           
087AF B9 50 93                                      LDA question4_1, y              ; load data from address (background + the value in x)
087B2 A6 85                                         ldx question_no
087B4 E0 03                                         cpx #3
087B6 F0 3F                                         beq @start8
087B8                           
087B8 B9 E8 93                                      LDA question5_1, y              ; load data from address (background + the value in x)
087BB A6 85                                         ldx question_no
087BD E0 04                                         cpx #4
087BF F0 36                                         beq @start8
087C1                           
087C1 B9 80 94                                      LDA question6_1, y
087C4 A6 85                                         ldx question_no
087C6 E0 05                                         cpx #5
087C8 F0 2D                                         beq @start8
087CA                           
087CA B9 18 95                                      LDA question7_1, y              ; load data from address (background + the value in x)
087CD A6 85                                         ldx question_no
087CF E0 06                                         cpx #6
087D1 F0 24                                         beq @start8
087D3                           
087D3 B9 B0 95                                      LDA question8_1, y              ; load data from address (background + the value in x)
087D6 A6 85                                         ldx question_no
087D8 E0 07                                         cpx #7
087DA F0 1B                                         beq @start8
087DC                           
087DC B9 48 96                                      LDA question9_1, y              ; load data from address (background + the value in x)
087DF A6 85                                         ldx question_no
087E1 E0 08                                         cpx #8
087E3 F0 12                                         beq @start8
087E5                           
087E5 B9 E0 96                                      LDA question10_1, y
087E8 A6 85                                         ldx question_no
087EA E0 09                                         cpx #9
087EC F0 09                                         beq @start8
087EE                           
087EE B9 78 97                                      LDA question11_1, y              ; load data from address (background + the value in x)
087F1 A6 85                                         ldx question_no
087F3 E0 0A                                         cpx #10
087F5 F0 00                                         beq @start8
087F7                           
087F7                           @start8:
087F7 8D 07 20                                      STA $2007
087FA C6 86                                         DEC count2
087FC C8                                            INY                   ; X = X + 1
087FD A9 00                                         lda #0
087FF C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08801 D0 91                                         BNE @LoadBackgroundLoop18
08803 A9 13                                         lda #19
08805 85 86                                         sta count2
08807                           
08807                           
08807 AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
0880A A9 22                                          LDA #$22
0880C 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
0880F A9 CB                                          LDA #$CB
08811 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08814 A2 00                                          LDX #$00
08816                                                             ; start out at 0
08816                           @LoadBackgroundLoop17:
08816                           
08816 B9 88 91                                      LDA question1_1, y              ; load data from address (background + the value in x)
08819 A6 85                                         ldx question_no
0881B E0 00                                         cpx #0
0881D F0 5A                                         beq @start7
0881F                           
0881F B9 20 92                                      LDA question2_1, y
08822 A6 85                                         ldx question_no
08824 E0 01                                         cpx #1
08826 F0 51                                         beq @start7
08828                           
08828 B9 B8 92                                      LDA question3_1, y              ; load data from address (background + the value in x)
0882B A6 85                                         ldx question_no
0882D E0 02                                         cpx #2
0882F F0 48                                         beq @start7
08831                           
08831 B9 50 93                                      LDA question4_1, y              ; load data from address (background + the value in x)
08834 A6 85                                         ldx question_no
08836 E0 03                                         cpx #3
08838 F0 3F                                         beq @start7
0883A                           
0883A B9 E8 93                                      LDA question5_1, y              ; load data from address (background + the value in x)
0883D A6 85                                         ldx question_no
0883F E0 04                                         cpx #4
08841 F0 36                                         beq @start7
08843                           
08843 B9 80 94                                      LDA question6_1, y
08846 A6 85                                         ldx question_no
08848 E0 05                                         cpx #5
0884A F0 2D                                         beq @start7
0884C                           
0884C B9 18 95                                      LDA question7_1, y              ; load data from address (background + the value in x)
0884F A6 85                                         ldx question_no
08851 E0 06                                         cpx #6
08853 F0 24                                         beq @start7
08855                           
08855 B9 B0 95                                      LDA question8_1, y              ; load data from address (background + the value in x)
08858 A6 85                                         ldx question_no
0885A E0 07                                         cpx #7
0885C F0 1B                                         beq @start7
0885E                           
0885E B9 48 96                                      LDA question9_1, y              ; load data from address (background + the value in x)
08861 A6 85                                         ldx question_no
08863 E0 08                                         cpx #8
08865 F0 12                                         beq @start7
08867                           
08867 B9 E0 96                                      LDA question10_1, y
0886A A6 85                                         ldx question_no
0886C E0 09                                         cpx #9
0886E F0 09                                         beq @start7
08870                           
08870 B9 78 97                                      LDA question11_1, y              ; load data from address (background + the value in x)
08873 A6 85                                         ldx question_no
08875 E0 0A                                         cpx #10
08877 F0 00                                         beq @start7
08879                           
08879                           @start7:
08879 8D 07 20                                      STA $2007
0887C C6 86                                         DEC count2
0887E C8                                            INY                   ; X = X + 1
0887F A9 00                                         lda #0
08881 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08883 D0 91                                         BNE @LoadBackgroundLoop17
08885                           
08885 A9 13                                         lda #19
08887 85 86                                         sta count2
08889                           
08889 AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
0888C A9 23                                          LDA #$23
0888E 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08891 A9 0B                                          LDA #$0B
08893 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08896 A2 00                                          LDX #$00
08898                                                             ; start out at 0
08898                           @LoadBackgroundLoop16:
08898                           
08898 B9 88 91                                      LDA question1_1, y              ; load data from address (background + the value in x)
0889B A6 85                                         ldx question_no
0889D E0 00                                         cpx #0
0889F F0 5A                                         beq @start6
088A1                           
088A1 B9 20 92                                      LDA question2_1, y
088A4 A6 85                                         ldx question_no
088A6 E0 01                                         cpx #1
088A8 F0 51                                         beq @start6
088AA                           
088AA B9 B8 92                                      LDA question3_1, y              ; load data from address (background + the value in x)
088AD A6 85                                         ldx question_no
088AF E0 02                                         cpx #2
088B1 F0 48                                         beq @start6
088B3                           
088B3 B9 50 93                                      LDA question4_1, y              ; load data from address (background + the value in x)
088B6 A6 85                                         ldx question_no
088B8 E0 03                                         cpx #3
088BA F0 3F                                         beq @start6
088BC                           
088BC B9 E8 93                                      LDA question5_1, y              ; load data from address (background + the value in x)
088BF A6 85                                         ldx question_no
088C1 E0 04                                         cpx #4
088C3 F0 36                                         beq @start6
088C5                           
088C5 B9 80 94                                      LDA question6_1, y
088C8 A6 85                                         ldx question_no
088CA E0 05                                         cpx #5
088CC F0 2D                                         beq @start6
088CE                           
088CE B9 18 95                                      LDA question7_1, y              ; load data from address (background + the value in x)
088D1 A6 85                                         ldx question_no
088D3 E0 06                                         cpx #6
088D5 F0 24                                         beq @start6
088D7                           
088D7 B9 B0 95                                      LDA question8_1, y              ; load data from address (background + the value in x)
088DA A6 85                                         ldx question_no
088DC E0 07                                         cpx #7
088DE F0 1B                                         beq @start6
088E0                           
088E0 B9 48 96                                      LDA question9_1, y              ; load data from address (background + the value in x)
088E3 A6 85                                         ldx question_no
088E5 E0 08                                         cpx #8
088E7 F0 12                                         beq @start6
088E9                           
088E9 B9 E0 96                                      LDA question10_1, y
088EC A6 85                                         ldx question_no
088EE E0 09                                         cpx #9
088F0 F0 09                                         beq @start6
088F2                           
088F2 B9 78 97                                      LDA question11_1, y              ; load data from address (background + the value in x)
088F5 A6 85                                         ldx question_no
088F7 E0 0A                                         cpx #10
088F9 F0 00                                         beq @start6
088FB                           
088FB                           @start6:
088FB 8D 07 20                                      STA $2007
088FE C6 86                                         DEC count2
08900 C8                                            INY                   ; X = X + 1
08901 A9 00                                         lda #0
08903 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08905 D0 91                                         BNE @LoadBackgroundLoop16
08907                           
08907                           
08907 A9 1E                                         lda #%00011110
08909 8D 01 20                                      sta $2001
0890C A9 00                                         LDA #$00
0890E 8D 05 20                                      STA $2005
08911 8D 05 20                                      STA $2005
08914 A9 00                                         lda #0
08916 85 7F                                         sta bg1
08918 A9 00                                         lda #00
0891A 85 7D                                         sta count
0891C A9 13                                         lda #19
0891E 85 86                                         sta count2
08920 E6 85                                         inc question_no
08922 60                                            rts
08923                           ;;;;;               ----------------------------------------------------------------------------------------------
08923                           background__1:
08923 A5 7C                                      lda bg
08925 C9 01                                      cmp #1
08927 F0 01                                      beq @new1
08929 60                                         rts
0892A                           @new1:
0892A AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
0892D A9 20                                          LDA #$20
0892F 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08932 A9 86                                          LDA #$86
08934 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08937 A2 00                                          LDX #$00
08939 A4 7D                                          LDY count
0893B                                                             ; start out at 0
0893B                           @LoadBackgroundLoop11:
0893B A9 00                                         lda #%00000000
0893D 8D 01 20                                      sta $2001
08940                           
08940 B9 10 98                                      LDA question12_1, y              ; load data from address (background + the value in x)
08943 A6 85                                         ldx question_no
08945 E0 0B                                         cpx #11
08947 F0 1B                                         beq @start
08949                           
08949 B9 A8 98                                      LDA question13_1, y
0894C A6 85                                         ldx question_no
0894E E0 0C                                         cpx #12
08950 F0 12                                         beq @start
08952                           
08952 B9 40 99                                      LDA question14_1, y              ; load data from address (background + the value in x)
08955 A6 85                                         ldx question_no
08957 E0 0D                                         cpx #13
08959 F0 09                                         beq @start
0895B                           
0895B B9 D8 99                                      LDA question15_1, y              ; load data from address (background + the value in x)
0895E A6 85                                         ldx question_no
08960 E0 0E                                         cpx #14
08962 F0 00                                         beq @start
08964                           
08964                           @start:
08964 8D 07 20                                      STA $2007
08967 C6 86                                         DEC count2
08969 C8                                            INY                   ; X = X + 1
0896A A9 00                                         lda #0
0896C C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
0896E D0 CB                                         BNE @LoadBackgroundLoop11
08970 A9 13                                         lda #19
08972 85 86                                         sta count2
08974                           
08974                           
08974 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08977 A9 20                                          LDA #$20
08979 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
0897C A9 C6                                          LDA #$C6
0897E 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08981 A2 00                                          LDX #$00
08983                                                             ; start out at 0
08983                           @LoadBackgroundLoop12:
08983                           
08983 B9 10 98                                      LDA question12_1, y              ; load data from address (background + the value in x)
08986 A6 85                                         ldx question_no
08988 E0 0B                                         cpx #11
0898A F0 1B                                         beq @start1
0898C                           
0898C B9 A8 98                                      LDA question13_1, y
0898F A6 85                                         ldx question_no
08991 E0 0C                                         cpx #12
08993 F0 12                                         beq @start1
08995                           
08995 B9 40 99                                      LDA question14_1, y              ; load data from address (background + the value in x)
08998 A6 85                                         ldx question_no
0899A E0 0D                                         cpx #13
0899C F0 09                                         beq @start1
0899E                           
0899E B9 D8 99                                      LDA question15_1, y              ; load data from address (background + the value in x)
089A1 A6 85                                         ldx question_no
089A3 E0 0E                                         cpx #14
089A5 F0 00                                         beq @start1
089A7                           
089A7                           @start1:
089A7 8D 07 20                                      STA $2007
089AA C6 86                                         DEC count2
089AC C8                                            INY                   ; X = X + 1
089AD A9 00                                         lda #0
089AF C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
089B1 D0 D0                                         BNE @LoadBackgroundLoop12
089B3 A9 13                                         lda #19
089B5 85 86                                         sta count2
089B7                           
089B7                           
089B7 AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
089BA A9 21                                          LDA #$21
089BC 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
089BF A9 06                                          LDA #$06
089C1 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
089C4 A2 00                                          LDX #$00
089C6                                                             ; start out at 0
089C6                           @LoadBackgroundLoop13:
089C6                           
089C6 B9 10 98                                      LDA question12_1, y              ; load data from address (background + the value in x)
089C9 A6 85                                         ldx question_no
089CB E0 0B                                         cpx #11
089CD F0 1B                                         beq @start2
089CF                           
089CF B9 A8 98                                      LDA question13_1, y
089D2 A6 85                                         ldx question_no
089D4 E0 0C                                         cpx #12
089D6 F0 12                                         beq @start2
089D8                           
089D8 B9 40 99                                      LDA question14_1, y              ; load data from address (background + the value in x)
089DB A6 85                                         ldx question_no
089DD E0 0D                                         cpx #13
089DF F0 09                                         beq @start2
089E1                           
089E1 B9 D8 99                                      LDA question15_1, y              ; load data from address (background + the value in x)
089E4 A6 85                                         ldx question_no
089E6 E0 0E                                         cpx #14
089E8 F0 00                                         beq @start2
089EA                           
089EA                           @start2:
089EA 8D 07 20                                      STA $2007
089ED C6 86                                         DEC count2
089EF C8                                            INY                   ; X = X + 1
089F0 A9 00                                         lda #0
089F2 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
089F4 D0 D0                                         BNE @LoadBackgroundLoop13
089F6                           
089F6 A9 1E                                         lda #%00011110
089F8 8D 01 20                                      sta $2001
089FB A9 00                                         LDA #$00
089FD 8D 05 20                                      STA $2005
08A00 8D 05 20                                      STA $2005
08A03 A9 00                                         lda #0
08A05 85 7C                                         sta bg
08A07 A9 13                                         lda #19
08A09 85 86                                         sta count2
08A0B A9 01                                         lda #1
08A0D 85 7F                                         sta bg1
08A0F 84 7D                                         sty count
08A11 60                                            rts
08A12                           ;      -------------------------------------------------------------------
08A12                           ; loading options on the question screen
08A12                           background1__1:
08A12 A5 7F                                      lda bg1
08A14 C9 01                                      cmp #1
08A16 F0 01                                      beq @new9
08A18 60                                         rts
08A19                           @new9:
08A19 AD 02 20                                   LDA $2002             ; read PPU status to reset the high/low latch
08A1C A9 21                                          LDA #$21
08A1E 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08A21 A9 EB                                          LDA #$EB
08A23 8D 06 20                                       STA $2006
08A26 84 7D                                          sty count             ; write the low byte of $2000 address
08A28                                                             ; start out at 0
08A28                           @LoadBackgroundLoop29:
08A28 A9 00                                         lda #%00000000
08A2A 8D 01 20                                      sta $2001
08A2D                           
08A2D B9 10 98                                      LDA question12_1, y              ; load data from address (background + the value in x)
08A30 A6 85                                         ldx question_no
08A32 E0 0B                                         cpx #11
08A34 F0 1B                                         beq @start91
08A36                           
08A36 B9 A8 98                                      LDA question13_1, y
08A39 A6 85                                         ldx question_no
08A3B E0 0C                                         cpx #12
08A3D F0 12                                         beq @start91
08A3F                           
08A3F B9 40 99                                      LDA question14_1, y              ; load data from address (background + the value in x)
08A42 A6 85                                         ldx question_no
08A44 E0 0D                                         cpx #13
08A46 F0 09                                         beq @start91
08A48                           
08A48 B9 D8 99                                      LDA question15_1, y              ; load data from address (background + the value in x)
08A4B A6 85                                         ldx question_no
08A4D E0 0E                                         cpx #14
08A4F F0 00                                         beq @start91
08A51                           
08A51                           @start91:
08A51 8D 07 20                                      STA $2007
08A54 C6 86                                         DEC count2
08A56 C8                                            INY                   ; X = X + 1
08A57 A9 00                                         lda #0
08A59 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08A5B D0 CB                                         BNE @LoadBackgroundLoop29
08A5D A9 13                                         lda #19
08A5F 85 86                                         sta count2
08A61                           
08A61                           
08A61 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08A64 A9 22                                          LDA #$22
08A66 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08A69 A9 8B                                          LDA #$8B
08A6B 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08A6E A2 00                                          LDX #$00
08A70                                                             ; start out at 0
08A70 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08A73 A9 22                                          LDA #$22
08A75 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08A78 A9 4B                                          LDA #$4B
08A7A 8D 06 20                                       STA $2006
08A7D 84 7D                                          sty count             ; write the low byte of $2000 address
08A7F                                                             ; start out at 0
08A7F                           @LoadBackgroundLoop19:
08A7F A9 00                                         lda #%00000000
08A81 8D 01 20                                      sta $2001
08A84                           
08A84 B9 10 98                                      LDA question12_1, y              ; load data from address (background + the value in x)
08A87 A6 85                                         ldx question_no
08A89 E0 0B                                         cpx #11
08A8B F0 1B                                         beq @start9
08A8D                           
08A8D B9 A8 98                                      LDA question13_1, y
08A90 A6 85                                         ldx question_no
08A92 E0 0C                                         cpx #12
08A94 F0 12                                         beq @start9
08A96                           
08A96 B9 40 99                                      LDA question14_1, y              ; load data from address (background + the value in x)
08A99 A6 85                                         ldx question_no
08A9B E0 0D                                         cpx #13
08A9D F0 09                                         beq @start9
08A9F                           
08A9F B9 D8 99                                      LDA question15_1, y              ; load data from address (background + the value in x)
08AA2 A6 85                                         ldx question_no
08AA4 E0 0E                                         cpx #14
08AA6 F0 00                                         beq @start9
08AA8                           
08AA8                           @start9:
08AA8 8D 07 20                                      STA $2007
08AAB C6 86                                         DEC count2
08AAD C8                                            INY                   ; X = X + 1
08AAE A9 00                                         lda #0
08AB0 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08AB2 D0 CB                                         BNE @LoadBackgroundLoop19
08AB4 A9 13                                         lda #19
08AB6 85 86                                         sta count2
08AB8                           
08AB8                           
08AB8 AD 02 20                                       LDA $2002             ; read PPU status to reset the high/low latch
08ABB A9 22                                          LDA #$22
08ABD 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08AC0 A9 8B                                          LDA #$8B
08AC2 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08AC5 A2 00                                          LDX #$00
08AC7                                                             ; start out at 0
08AC7                           @LoadBackgroundLoop18:
08AC7                           
08AC7 B9 10 98                                      LDA question12_1, y              ; load data from address (background + the value in x)
08ACA A6 85                                         ldx question_no
08ACC E0 0B                                         cpx #11
08ACE F0 1B                                         beq @start8
08AD0                           
08AD0 B9 A8 98                                      LDA question13_1, y
08AD3 A6 85                                         ldx question_no
08AD5 E0 0C                                         cpx #12
08AD7 F0 12                                         beq @start8
08AD9                           
08AD9 B9 40 99                                      LDA question14_1, y              ; load data from address (background + the value in x)
08ADC A6 85                                         ldx question_no
08ADE E0 0D                                         cpx #13
08AE0 F0 09                                         beq @start8
08AE2                           
08AE2 B9 D8 99                                      LDA question15_1, y              ; load data from address (background + the value in x)
08AE5 A6 85                                         ldx question_no
08AE7 E0 0E                                         cpx #14
08AE9 F0 00                                         beq @start8
08AEB                           
08AEB                           @start8:
08AEB 8D 07 20                                      STA $2007
08AEE C6 86                                         DEC count2
08AF0 C8                                            INY                   ; X = X + 1
08AF1 A9 00                                         lda #0
08AF3 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08AF5 D0 D0                                         BNE @LoadBackgroundLoop18
08AF7 A9 13                                         lda #19
08AF9 85 86                                         sta count2
08AFB                           
08AFB                           
08AFB AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
08AFE A9 22                                          LDA #$22
08B00 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08B03 A9 CB                                          LDA #$CB
08B05 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08B08 A2 00                                          LDX #$00
08B0A                                                             ; start out at 0
08B0A                           @LoadBackgroundLoop17:
08B0A                           
08B0A B9 10 98                                      LDA question12_1, y              ; load data from address (background + the value in x)
08B0D A6 85                                         ldx question_no
08B0F E0 0B                                         cpx #11
08B11 F0 1B                                         beq @start7
08B13                           
08B13 B9 A8 98                                      LDA question13_1, y
08B16 A6 85                                         ldx question_no
08B18 E0 0C                                         cpx #12
08B1A F0 12                                         beq @start7
08B1C                           
08B1C B9 40 99                                      LDA question14_1, y              ; load data from address (background + the value in x)
08B1F A6 85                                         ldx question_no
08B21 E0 0D                                         cpx #13
08B23 F0 09                                         beq @start7
08B25                           
08B25 B9 D8 99                                      LDA question15_1, y              ; load data from address (background + the value in x)
08B28 A6 85                                         ldx question_no
08B2A E0 0E                                         cpx #14
08B2C F0 00                                         beq @start7
08B2E                           
08B2E                           @start7:
08B2E 8D 07 20                                      STA $2007
08B31 C6 86                                         DEC count2
08B33 C8                                            INY                   ; X = X + 1
08B34 A9 00                                         lda #0
08B36 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08B38 D0 D0                                         BNE @LoadBackgroundLoop17
08B3A                           
08B3A A9 13                                         lda #19
08B3C 85 86                                         sta count2
08B3E                           
08B3E AD 02 20                                      LDA $2002             ; read PPU status to reset the high/low latch
08B41 A9 23                                          LDA #$23
08B43 8D 06 20                                       STA $2006             ; write the high byte of $2000 address
08B46 A9 0B                                          LDA #$0B
08B48 8D 06 20                                       STA $2006             ; write the low byte of $2000 address
08B4B A2 00                                          LDX #$00
08B4D                                                             ; start out at 0
08B4D                           @LoadBackgroundLoop16:
08B4D                           
08B4D B9 10 98                                      LDA question12_1, y              ; load data from address (background + the value in x)
08B50 A6 85                                         ldx question_no
08B52 E0 0B                                         cpx #11
08B54 F0 1B                                         beq @start6
08B56                           
08B56 B9 A8 98                                      LDA question13_1, y
08B59 A6 85                                         ldx question_no
08B5B E0 0C                                         cpx #12
08B5D F0 12                                         beq @start6
08B5F                           
08B5F B9 40 99                                      LDA question14_1, y              ; load data from address (background + the value in x)
08B62 A6 85                                         ldx question_no
08B64 E0 0D                                         cpx #13
08B66 F0 09                                         beq @start6
08B68                           
08B68 B9 D8 99                                      LDA question15_1, y              ; load data from address (background + the value in x)
08B6B A6 85                                         ldx question_no
08B6D E0 0E                                         cpx #14
08B6F F0 00                                         beq @start6
08B71                           
08B71                           @start6:
08B71 8D 07 20                                      STA $2007
08B74 C6 86                                         DEC count2
08B76 C8                                            INY                   ; X = X + 1
08B77 A9 00                                         lda #0
08B79 C5 86                                         CMP count2               ; Compare X to hex $80, decimal 128 - copying 128 bytes
08B7B D0 D0                                         BNE @LoadBackgroundLoop16
08B7D                           
08B7D                           
08B7D A9 1E                                         lda #%00011110
08B7F 8D 01 20                                      sta $2001
08B82 A9 00                                         LDA #$00
08B84 8D 05 20                                      STA $2005
08B87 8D 05 20                                      STA $2005
08B8A A9 00                                         lda #0
08B8C 85 7F                                         sta bg1
08B8E A9 00                                         lda #00
08B90 85 7D                                         sta count
08B92 A9 13                                         lda #19
08B94 85 86                                         sta count2
08B96 E6 85                                         inc question_no
08B98 60                                            rts
08B99                           ;;;;         ------------------------------------------------------------------------
08B99                           delay_cal2_1:
08B99 A5 A1                               lda trigger_delay2
08B9B C9 01                               cmp #1
08B9D D0 21                               bne @end124
08B9F E6 A0                               inc delayy
08BA1 A5 A0                               lda delayy
08BA3 C9 64                               cmp #100
08BA5 D0 19                               bne @end124
08BA7 A9 00                               lda #0
08BA9 85 A1                               sta trigger_delay2
08BAB 85 A0                               sta delayy
08BAD A9 00                               lda #0
08BAF 85 B5                               sta go0
08BB1 85 6B                               sta go
08BB3 85 6C                               sta bo
08BB5 85 A8                               sta $A8
08BB7 85 A7                               sta $A7
08BB9 85 18                               sta scro
08BBB 85 A6                               sta $A6
08BBD 4C C1 8B                            jmp @incorrect1
08BC0                           @end124
08BC0 60                                rts
08BC1                           ;       -----------------------------------------------------------
08BC1                           ;        loading back the screen after correct ans is given
08BC1                           
08BC1                           
08BC1                           ;       -----------------------------------------
08BC1                           ;        loading the screen after giving incorrect answer----------------
08BC1                           ;        loading the screen
08BC1                           @incorrect1:
08BC1                                      ;lda #0
08BC1                                      ;sta wrongans
08BC1 A9 50                                lda #80
08BC3 85 97                                sta delay
08BC5 E6 77                                inc question_count
08BC7 20 09 E3                                       jsr palchange_galaxy
08BCA A9 05                                LDA #$05
08BCC 20 04 C2                             JSR setCHRPage0000
08BCF A9 03                                LDA #$03
08BD1 20 18 C2                             JSR setCHRPage1000
08BD4 A9 00                                lda #0
08BD6 8D 01 20                             sta $2001
08BD9 85 AD                                sta $ad
08BDB A5 A9                                lda $A9
08BDD C9 00                                  cmp #0
08BDF D0 06                     @abv1         bne @nex15
08BE1 20 48 84                               jsr mainscreen1_1
08BE4 4C 2B 8C                               jmp @nex13
08BE7 C9 01                     @nex15        cmp #1
08BE9 D0 06                                  bne @nex14
08BEB 20 F3 90                  @nex16        jsr screenchange11_1
08BEE 4C F8 8B                               jmp @nex17
08BF1 C9 02                     @nex14        cmp #2
08BF3 D0 03                                  bne @nex17
08BF5 4C EB 8B                               jmp @nex16
08BF8 C9 03                     @nex17       cmp #3
08BFA D0 06                                  bne @nex18
08BFC 20 F6 83                  @nex19       jsr screenchange5_1
08BFF 4C 09 8C                               jmp @nex20
08C02 C9 04                     @nex18       cmp #4
08C04 D0 03                                  bne @nex20
08C06 4C FC 8B                               jmp @nex19
08C09 C9 05                     @nex20       cmp #5
08C0B D0 06                                  bne @nex21
08C0D 20 1F 84                  @nex22       jsr screenchange7_1
08C10 4C 2B 8C                               jmp @nex13
08C13 C9 06                     @nex21       cmp #6
08C15 D0 03                                  bne @nex23
08C17 4C 0D 8C                               jmp @nex22
08C1A C9 07                     @nex23       cmp #7
08C1C D0 06                                  bne @nex24
08C1E 20 5C 84                  @nex25       jsr screenchange9
08C21 4C 2B 8C                               jmp @nex13
08C24 C9 08                     @nex24       cmp #8
08C26 D0 03                                  bne @nex13
08C28 4C 1E 8C                               jmp @nex25
08C2B                           @nex13:
08C2B A5 AB                                lda $AB
08C2D 85 A3                                sta $A3
08C2F A5 AC                                lda $AC
08C31 85 A4                                sta $A4
08C33 A5 A5                                lda $A5
08C35 8D 00 20                             sta $2000
08C38 A9 1E                                lda #%00011110
08C3A 8D 01 20                             sta $2001
08C3D 20 B5 C1                             jsr update_sprites
08C40 A9 00                                lda #0
08C42 85 7E                                sta qq
08C44 A9 00                                lda #0
08C46 85 7A                                sta control
08C48                             ;;;;;;;;;;;;;
08C48 A9 FE                                lda #$fe
08C4A 8D 00 05                             sta $500
08C4D 8D 04 05                             sta $504
08C50 8D 08 05                             sta $508
08C53 8D 0C 05                             sta $50C
08C56 8D 10 05                             sta $510
08C59 8D 14 05                             sta $514
08C5C 8D 18 05                             sta $518
08C5F A9 00                                lda #0
08C61 85 76                                sta random_enable
08C63 A9 01                                lda #1
08C65 85 B8                                sta icq0
08C67 85 74                                sta cbb
08C69 85 CF                                sta trig_controller1
08C6B 60                                   rts
08C6C                           
08C6C                           ;       -----------------------------------------------------------------------
08C6C                           delay_cal_1:
08C6C A5 9F                               lda trigger_delay
08C6E C9 01                               cmp #1
08C70 D0 14                               bne @end123
08C72 E6 A0                               inc delayy
08C74 A5 A0                               lda delayy
08C76 C9 64                               cmp #100
08C78 D0 0C                               bne @end123
08C7A A9 00                               lda #0
08C7C 85 9F                               sta trigger_delay
08C7E 85 A0                               sta delayy
08C80 20 C5 E3                            jsr ClearSprites11
08C83 4C 87 8C                            jmp @back_to_game
08C86 60                        @end123: rts;-------------------------------------------------------------------
08C87                           @back_to_game:
08C87 E6 77                                  inc question_count
08C89 20 09 E3                             jsr palchange_galaxy
08C8C A9 05                                LDA #$05
08C8E 20 04 C2                             JSR setCHRPage0000
08C91 A9 03                                LDA #$03
08C93 20 18 C2                             JSR setCHRPage1000
08C96 A9 00                                lda #0
08C98 8D 01 20                             sta $2001
08C9B 85 AD                                sta $ad
08C9D A5 A9                                lda $A9
08C9F C9 00                                  cmp #0
08CA1 D0 06                     @abv1         bne @nex15
08CA3 20 48 84                               jsr mainscreen1_1
08CA6 4C ED 8C                               jmp @nex13
08CA9 C9 01                     @nex15        cmp #1
08CAB D0 06                                  bne @nex14
08CAD 20 F3 90                  @nex16        jsr screenchange11_1
08CB0 4C BA 8C                               jmp @nex17
08CB3 C9 02                     @nex14        cmp #2
08CB5 D0 03                                  bne @nex17
08CB7 4C AD 8C                               jmp @nex16
08CBA C9 03                     @nex17       cmp #3
08CBC D0 06                                  bne @nex18
08CBE 20 F6 83                  @nex19       jsr screenchange5_1
08CC1 4C CB 8C                               jmp @nex20
08CC4 C9 04                     @nex18       cmp #4
08CC6 D0 03                                  bne @nex20
08CC8 4C BE 8C                               jmp @nex19
08CCB C9 05                     @nex20       cmp #5
08CCD D0 06                                  bne @nex21
08CCF 20 1F 84                  @nex22       jsr screenchange7_1
08CD2 4C ED 8C                               jmp @nex13
08CD5 C9 06                     @nex21       cmp #6
08CD7 D0 03                                  bne @nex23
08CD9 4C CF 8C                               jmp @nex22
08CDC C9 07                     @nex23       cmp #7
08CDE D0 06                                  bne @nex24
08CE0 20 5C 84                  @nex25       jsr screenchange9
08CE3 4C ED 8C                               jmp @nex13
08CE6 C9 08                     @nex24       cmp #8
08CE8 D0 03                                  bne @nex13
08CEA 4C E0 8C                               jmp @nex25
08CED A5 AB                     @nex13       lda $AB
08CEF 85 A3                                  sta $A3
08CF1 A5 AC                                  lda $AC
08CF3 85 A4                                  sta $A4
08CF5 A9 1E                                  lda #%00011110
08CF7 8D 01 20                               sta $2001
08CFA A9 00                                  lda #0
08CFC 85 7E                                  sta qq
08CFE A9 00                                  lda #0
08D00 85 7A                                  sta control
08D02 A9 FE                                  lda #$fe
08D04 8D 00 05                               sta $500
08D07 8D 04 05                               sta $504
08D0A 8D 08 05                               sta $508
08D0D 8D 0C 05                               sta $50C
08D10 8D 10 05                               sta $510
08D13 8D 14 05                               sta $514
08D16 8D 18 05                               sta $518
08D19 A9 00                                  lda #0
08D1B 85 76                                   sta random_enable
08D1D A9 01                                   lda #1
08D1F 85 B7                                   sta cq0
08D21 85 75                                   sta uss
08D23 85 CF                                   sta trig_controller1
08D25 A5 A5                                   lda $A5
08D27 8D 00 20                                sta $2000
08D2A                           @jj:
08D2A 4C 2A 8D                     jmp @jj
08D2D                           
08D2D                           
08D2D                           screen3to1_1:
08D2D A9 00                             lda #0
08D2F 8D 01 20                          sta $2001
08D32 A9 20                             LDA #$20                ; draw screen
08D34 8D 06 20                      	STA $2006
08D37 A9 00                         	LDA #$00
08D39 8D 06 20                      	STA $2006
08D3C                           
08D3C A0 00                             ldy #$00
08D3E A2 04                             ldx #$04
08D40                           
08D40 A9 87                             lda #<screen1_1
08D42 85 10                             sta $10
08D44 A9 9A                             lda #>screen1_1
08D46 85 11                             sta $11
08D48                           
08D48                           @NameLoop3:
08D48 B1 10                             lda ($10),y
08D4A 8D 07 20                          sta $2007
08D4D C8                                iny
08D4E D0 F8                             bne @NameLoop3
08D50 E6 11                             inc $11
08D52 CA                                dex
08D53 D0 F3                             bne @NameLoop3
08D55 A9 1E                             lda #30
08D57 8D 01 20                          sta $2001
08D5A A9 00                             lda #0
08D5C 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08D5E 60                        rts
08D5F                           screen4to2_1:
08D5F A9 00                             lda #0
08D61 8D 01 20                          sta $2001
08D64 A9 28                             LDA #$28                ; draw screen
08D66 8D 06 20                      	STA $2006
08D69 A9 00                         	LDA #$00
08D6B 8D 06 20                      	STA $2006
08D6E                           
08D6E A0 00                             ldy #$00
08D70 A2 04                             ldx #$04
08D72                           
08D72 A9 87                             lda #<screen2_1
08D74 85 10                             sta $10
08D76 A9 9E                             lda #>screen2_1
08D78 85 11                             sta $11
08D7A                           
08D7A                           @NameLoop3:
08D7A B1 10                             lda ($10),y
08D7C 8D 07 20                          sta $2007
08D7F C8                                iny
08D80 D0 F8                             bne @NameLoop3
08D82 E6 11                             inc $11
08D84 CA                                dex
08D85 D0 F3                             bne @NameLoop3
08D87 A9 1E                             lda #30
08D89 8D 01 20                          sta $2001
08D8C A9 01                             lda #1
08D8E 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08D90 60                        rts
08D91                           
08D91                           screen5to3_1:
08D91 A9 00                              lda #0
08D93 8D 01 20                          sta $2001
08D96 A9 20                             LDA #$20                ; draw screen
08D98 8D 06 20                      	STA $2006
08D9B A9 00                         	LDA #$00
08D9D 8D 06 20                      	STA $2006
08DA0                           
08DA0 A0 00                             ldy #$00
08DA2 A2 04                             ldx #$04
08DA4                           
08DA4 A9 87                             lda #<screen3_1
08DA6 85 10                             sta $10
08DA8 A9 A6                             lda #>screen3_1
08DAA 85 11                             sta $11
08DAC                           
08DAC                           @NameLoop3:
08DAC B1 10                             lda ($10),y
08DAE 8D 07 20                          sta $2007
08DB1 C8                                iny
08DB2 D0 F8                             bne @NameLoop3
08DB4 E6 11                             inc $11
08DB6 CA                                dex
08DB7 D0 F3                             bne @NameLoop3
08DB9 A9 1E                             lda #30
08DBB 8D 01 20                          sta $2001
08DBE A9 02                             lda #2
08DC0 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08DC2 60                        rts
08DC3                           
08DC3                           screen6to4_1:
08DC3 A9 00                             lda #0
08DC5 8D 01 20                          sta $2001
08DC8 A9 28                             LDA #$28                ; draw screen
08DCA 8D 06 20                      	STA $2006
08DCD A9 00                         	LDA #$00
08DCF 8D 06 20                      	STA $2006
08DD2                           
08DD2 A0 00                             ldy #$00
08DD4 A2 04                             ldx #$04
08DD6                           
08DD6 A9 87                             lda #<screen4_1
08DD8 85 10                             sta $10
08DDA A9 A2                             lda #>screen4_1
08DDC 85 11                             sta $11
08DDE                           
08DDE                           @NameLoop3:
08DDE B1 10                             lda ($10),y
08DE0 8D 07 20                          sta $2007
08DE3 C8                                iny
08DE4 D0 F8                             bne @NameLoop3
08DE6 E6 11                             inc $11
08DE8 CA                                dex
08DE9 D0 F3                             bne @NameLoop3
08DEB A9 1E                             lda #30
08DED 8D 01 20                          sta $2001
08DF0 A9 03                             lda #3
08DF2 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08DF4 60                        rts
08DF5                           
08DF5                           screen7to5_1:
08DF5 A9 00                              lda #0
08DF7 8D 01 20                          sta $2001
08DFA A9 20                             LDA #$20                ; draw screen
08DFC 8D 06 20                      	STA $2006
08DFF A9 00                         	LDA #$00
08E01 8D 06 20                      	STA $2006
08E04                           
08E04 A0 00                             ldy #$00
08E06 A2 04                             ldx #$04
08E08                           
08E08 A9 87                             lda #<screen5_1
08E0A 85 10                             sta $10
08E0C A9 9E                             lda #>screen5_1
08E0E 85 11                             sta $11
08E10                           
08E10                           @NameLoop3:
08E10 B1 10                             lda ($10),y
08E12 8D 07 20                          sta $2007
08E15 C8                                iny
08E16 D0 F8                             bne @NameLoop3
08E18 E6 11                             inc $11
08E1A CA                                dex
08E1B D0 F3                             bne @NameLoop3
08E1D A9 1E                             lda #30
08E1F 8D 01 20                          sta $2001
08E22 A9 04                             lda #4
08E24 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08E26 60                        rts
08E27                           
08E27                           screen8to6_1:
08E27 A9 00                             lda #0
08E29 8D 01 20                          sta $2001
08E2C A9 28                             LDA #$28                ; draw screen
08E2E 8D 06 20                      	STA $2006
08E31 A9 00                         	LDA #$00
08E33 8D 06 20                      	STA $2006
08E36                           
08E36 A0 00                             ldy #$00
08E38 A2 04                             ldx #$04
08E3A                           
08E3A A9 87                             lda #<screen6_1
08E3C 85 10                             sta $10
08E3E A9 A6                             lda #>screen6_1
08E40 85 11                             sta $11
08E42                           
08E42                           @NameLoop3:
08E42 B1 10                             lda ($10),y
08E44 8D 07 20                          sta $2007
08E47 C8                                iny
08E48 D0 F8                             bne @NameLoop3
08E4A E6 11                             inc $11
08E4C CA                                dex
08E4D D0 F3                             bne @NameLoop3
08E4F A9 1E                             lda #30
08E51 8D 01 20                          sta $2001
08E54 A9 05                             lda #5
08E56 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08E58 60                        rts
08E59                           
08E59                           
08E59                           
08E59                           more240_1:
08E59 A5 A9                              lda $A9
08E5B C9 01                              cmp #1
08E5D D0 13                              bne @not12
08E5F 20 2D 8D                           jsr screen3to1_1
08E62 A9 00                     @not11    lda #0
08E64 85 A4                              sta $A4
08E66 A9 02                              lda #2
08E68 45 A5                              eor $A5
08E6A 85 A5                              sta $A5
08E6C 8D 00 20                           sta $2000
08E6F 4C B2 8E                           jmp @not1
08E72 C9 02                     @not12    cmp #2
08E74 D0 06                              bne @not1r
08E76 20 5F 8D                           jsr screen4to2_1
08E79 4C 62 8E                           jmp @not11
08E7C C9 03                     @not1r    cmp #3
08E7E D0 06                              bne @not1e
08E80 20 91 8D                           jsr screen5to3_1
08E83 4C 62 8E                           jmp @not11
08E86 C9 04                     @not1e    cmp #4
08E88 D0 06                              bne @not1p
08E8A 20 C3 8D                           jsr screen6to4_1
08E8D 4C 62 8E                           jmp @not11          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08E90 C9 05                     @not1p    cmp #5
08E92 D0 06                              bne @not1d
08E94 20 F5 8D                           jsr screen7to5_1
08E97 4C 62 8E                           jmp @not11
08E9A C9 06                     @not1d    cmp #6
08E9C D0 06                              bne @not1f
08E9E 20 27 8E                           jsr screen8to6_1
08EA1 4C 62 8E                           jmp @not11
08EA4 C9 07                     @not1f    cmp #7
08EA6 D0 03                              bne @not1g
08EA8                           ;         jsr screen9to7_1
08EA8 4C 62 8E                           jmp @not11
08EAB C9 08                     @not1g    cmp #8
08EAD D0 03                              bne @not1
08EAF                            ;        jsr screen10to8_1
08EAF 4C 62 8E                           jmp @not11
08EB2 60                        @not1     rts
08EB3                           
08EB3                           
08EB3                           ;;;;when scroll_step is set with x-pixels and then triggering it with the variable scrollup_act cause the background to move up by x-bixels ...this is basically called
08EB3                           ;;when a negative or a bad object gets detected
08EB3                           
08EB3                           scrollup_1:
08EB3 A5 A7                              lda $A7
08EB5 C9 0A                              cmp #10
08EB7 D0 18                              bne @end_s1
08EB9 A9 00                              lda #0
08EBB 85 12                              sta touch_trig
08EBD A5 A4                              lda $A4
08EBF C9 EF                              cmp #239
08EC1 D0 13                              bne @dwn1
08EC3 A5 A9                              lda $A9
08EC5 C9 00                              cmp #0
08EC7 D0 05                              bne @dwn2
08EC9 A9 00                              lda #0
08ECB 85 A7                              sta $A7
08ECD 60                                 rts
08ECE 20 59 8E                  @dwn2     jsr more240_1
08ED1                           @end_s1:
08ED1 A9 01                             lda #1
08ED3 85 12                              sta touch_trig
08ED5 60                                 rts
08ED6                           
08ED6 C6 A6                     @dwn1     dec $A6
08ED8 A5 A6                              lda $A6
08EDA C9 00                              cmp #0
08EDC D0 08                              bne @next2
08EDE A9 00                              lda #0
08EE0 85 A7                              sta $A7
08EE2 A9 16                              lda #22
08EE4 85 A6                              sta $A6
08EE6 E6 A4                     @next2    inc $A4
08EE8 60                                 rts
08EE9                                    ;       ----------------------------------------------------
08EE9                           screen1to3_1:
08EE9 A9 00                             lda #0
08EEB 8D 01 20                          sta $2001
08EEE A9 20                             LDA #$20                ; draw screen
08EF0 8D 06 20                      	STA $2006
08EF3 A9 00                         	LDA #$00
08EF5 8D 06 20                      	STA $2006
08EF8                           
08EF8 A0 00                             ldy #$00
08EFA A2 04                             ldx #$04
08EFC                           
08EFC A9 87                             lda #<screen3_1
08EFE 85 10                             sta $10
08F00 A9 A6                             lda #>screen3_1
08F02 85 11                             sta $11
08F04                           
08F04                           @NameLoop3:
08F04 B1 10                             lda ($10),y
08F06 8D 07 20                          sta $2007
08F09 C8                                iny
08F0A D0 F8                             bne @NameLoop3
08F0C E6 11                             inc $11
08F0E CA                                dex
08F0F D0 F3                             bne @NameLoop3
08F11 A9 1E                             lda #30
08F13 8D 01 20                          sta $2001
08F16 A9 01                             lda #1
08F18 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08F1A 60                        rts
08F1B                           screen2to4_1:
08F1B A9 00                                     lda #0
08F1D 8D 01 20                          sta $2001
08F20 A9 28                             LDA #$28                ; draw screen
08F22 8D 06 20                      	STA $2006
08F25 A9 00                         	LDA #$00
08F27 8D 06 20                      	STA $2006
08F2A                           
08F2A A0 00                             ldy #$00
08F2C A2 04                             ldx #$04
08F2E                           
08F2E A9 87                             lda #<screen4_1
08F30 85 10                             sta $10
08F32 A9 A2                             lda #>screen4_1
08F34 85 11                             sta $11
08F36                           
08F36                           @NameLoop3:
08F36 B1 10                             lda ($10),y
08F38 8D 07 20                          sta $2007
08F3B C8                                iny
08F3C D0 F8                             bne @NameLoop3
08F3E E6 11                             inc $11
08F40 CA                                dex
08F41 D0 F3                             bne @NameLoop3
08F43 A9 1E                             lda #30
08F45 8D 01 20                          sta $2001
08F48 A9 02                             lda #2
08F4A 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08F4C 60                        rts
08F4D                           screen3to5_1:
08F4D A9 00                             lda #0
08F4F 8D 01 20                          sta $2001
08F52 A9 20                             LDA #$20                ; draw screen
08F54 8D 06 20                      	STA $2006
08F57 A9 00                         	LDA #$00
08F59 8D 06 20                      	STA $2006
08F5C                           
08F5C A0 00                             ldy #$00
08F5E A2 04                             ldx #$04
08F60                           
08F60 A9 87                             lda #<screen5_1
08F62 85 10                             sta $10
08F64 A9 9E                             lda #>screen5_1
08F66 85 11                             sta $11
08F68                           
08F68                           @NameLoop3:
08F68 B1 10                             lda ($10),y
08F6A 8D 07 20                          sta $2007
08F6D C8                                iny
08F6E D0 F8                             bne @NameLoop3
08F70 E6 11                             inc $11
08F72 CA                                dex
08F73 D0 F3                             bne @NameLoop3
08F75 A9 1E                             lda #30
08F77 8D 01 20                          sta $2001
08F7A A9 03                             lda #3
08F7C 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08F7E 60                        rts
08F7F                           
08F7F                           screen4to6_1:
08F7F A9 00                             lda #0
08F81 8D 01 20                          sta $2001
08F84 A9 28                             LDA #$28                ; draw screen
08F86 8D 06 20                      	STA $2006
08F89 A9 00                         	LDA #$00
08F8B 8D 06 20                      	STA $2006
08F8E                           
08F8E A0 00                             ldy #$00
08F90 A2 04                             ldx #$04
08F92                           
08F92 A9 87                             lda #<screen6_1
08F94 85 10                             sta $10
08F96 A9 A6                             lda #>screen6_1
08F98 85 11                             sta $11
08F9A                           
08F9A                           @NameLoop3:
08F9A B1 10                             lda ($10),y
08F9C 8D 07 20                          sta $2007
08F9F C8                                iny
08FA0 D0 F8                             bne @NameLoop3
08FA2 E6 11                             inc $11
08FA4 CA                                dex
08FA5 D0 F3                             bne @NameLoop3
08FA7 A9 1E                             lda #30
08FA9 8D 01 20                          sta $2001
08FAC A9 04                             lda #4
08FAE 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08FB0 60                        rts
08FB1                           
08FB1                           screen5to7_1:
08FB1 A9 00                             lda #0
08FB3 8D 01 20                          sta $2001
08FB6 A9 20                             LDA #$20                ; draw screen
08FB8 8D 06 20                      	STA $2006
08FBB A9 00                         	LDA #$00
08FBD 8D 06 20                      	STA $2006
08FC0                           
08FC0 A0 00                             ldy #$00
08FC2 A2 04                             ldx #$04
08FC4                           
08FC4 A9 87                             lda #<screen7_1
08FC6 85 10                             sta $10
08FC8 A9 A2                             lda #>screen7_1
08FCA 85 11                             sta $11
08FCC                           
08FCC                           @NameLoop3:
08FCC B1 10                             lda ($10),y
08FCE 8D 07 20                          sta $2007
08FD1 C8                                iny
08FD2 D0 F8                             bne @NameLoop3
08FD4 E6 11                             inc $11
08FD6 CA                                dex
08FD7 D0 F3                             bne @NameLoop3
08FD9 A9 1E                             lda #30
08FDB 8D 01 20                          sta $2001
08FDE A9 05                             lda #5
08FE0 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
08FE2 60                        rts
08FE3                           
08FE3                           screen6to8_1:
08FE3 A9 00                             lda #0
08FE5 8D 01 20                          sta $2001
08FE8 A9 28                             LDA #$28                ; draw screen
08FEA 8D 06 20                      	STA $2006
08FED A9 00                         	LDA #$00
08FEF 8D 06 20                      	STA $2006
08FF2                           
08FF2 A0 00                             ldy #$00
08FF4 A2 04                             ldx #$04
08FF6                           
08FF6 A9 87                             lda #<screen7_1
08FF8 85 10                             sta $10
08FFA A9 A2                             lda #>screen7_1
08FFC 85 11                             sta $11
08FFE                           
08FFE                           @NameLoop3:
08FFE B1 10                             lda ($10),y
09000 8D 07 20                          sta $2007
09003 C8                                iny
09004 D0 F8                             bne @NameLoop3
09006 E6 11                             inc $11
09008 CA                                dex
09009 D0 F3                             bne @NameLoop3
0900B A9 1E                             lda #30
0900D 8D 01 20                          sta $2001
09010 A9 06                             lda #6
09012 85 A9                             sta $A9                         ;;;;;;;;;;;;;-------_________-------------
09014 60                        rts
09015                           
09015                           
09015                           
09015                           
09015                           less0_1:
09015 A5 A9                             lda $A9
09017 C9 00                             cmp #0
09019 D0 13                             bne @dwn6
0901B 20 E9 8E                          jsr screen1to3_1
0901E A9 EF                     @dwn18   lda #239
09020 85 A4                             sta $A4
09022 A9 02                             lda #2
09024 45 A5                             eor $A5
09026 85 A5                             sta $A5
09028 8D 00 20                          sta $2000
0902B 4C 6E 90                          jmp @dwn17
0902E C9 01                     @dwn6    cmp #1
09030 D0 06                             bne @dwn19
09032 20 1B 8F                          jsr screen2to4_1
09035 4C 1E 90                          jmp @dwn18
09038 C9 02                     @dwn19   cmp #2
0903A D0 06                             bne @dwn171
0903C 20 4D 8F                          jsr screen3to5_1
0903F 4C 1E 90                          jmp @dwn18
09042 C9 03                     @dwn171  cmp #3
09044 D0 06                             bne @dwn172
09046 20 7F 8F                          jsr screen4to6_1
09049 4C 1E 90                          jmp @dwn18
0904C C9 04                     @dwn172  cmp #4
0904E D0 06                             bne @dwn17r
09050 20 B1 8F                          jsr screen5to7_1
09053 4C 1E 90                          jmp @dwn18
09056 C9 05                     @dwn17r  cmp #5
09058 D0 06                             bne @dwn17b
0905A 20 E3 8F                          jsr screen6to8_1
0905D 4C 1E 90                          jmp @dwn18
09060 C9 10                     @dwn17b  cmp #16
09062 D0 03                             bne @dwn17c
09064                           ;        jsr screen7to9_1
09064 4C 1E 90                          jmp @dwn18
09067 C9 07                     @dwn17c  cmp #7
09069 D0 03                             bne @dwn17
0906B                            ;       jsr screen8to10_1
0906B 4C 1E 90                          jmp @dwn18
0906E                           @dwn17
0906E 60                                 rts
0906F                           
0906F                            ;;;;when scroll_step is set with x-pixels and then triggering it with the variable scrolldown_act cause the background to move down by x-bixels ...this is basically called
0906F                           ;;when a postive or a good object gets detected
0906F                           scrolldown_1:
0906F A5 A8                                lda $A8
09071 C9 0A                                cmp #10
09073 D0 23                                bne @end_s2
09075                              ;      dec scroll_v
09075 A9 00                               lda #0
09077 85 12                              sta touch_trig
09079 A5 A4                              lda $A4
0907B C9 00                              cmp #0
0907D D0 22                              bne @dwn4
0907F A5 A9                              lda $A9
09081 C9 06                              cmp #6
09083 D0 14                              bne @dwn5
09085 A9 00                              lda #0
09087 85 A8                              sta $A8
09089 20 77 D9                           jsr clear_hanuman
0908C                           
0908C 20 B4 90                           jsr @endscreenload
0908F A9 0E                              LDA #%00001110
09091 8D 01 20                  	 STA $2001
09094 A9 00                     	 lda #0
09096 85 CF                              sta trig_controller1
09098                           
09098                           
09098                           @end_s2:
09098 60                                 rts
09099 20 15 90                  @dwn5     jsr less0_1
0909C A9 01                               lda #1
0909E 85 12                               sta touch_trig
090A0 60                                 rts
090A1 C6 A6                     @dwn4     dec $A6
090A3 A5 A6                              lda $A6
090A5 C9 00                              cmp #0
090A7 D0 08                              bne @nex1
090A9 A9 00                              lda #0
090AB 85 A8                              sta $A8
090AD A9 16                              lda #22
090AF 85 A6                              sta $A6
090B1 C6 A4                     @nex1     dec $A4
090B3 60                                 rts
090B4                           
090B4                           
090B4                           @endscreenload:
090B4 A9 0A                              lda #10
090B6 85 FE                              sta credit_enable
090B8 85 76                              sta random_enable
090BA 20 77 D9                           jsr clear_hanuman
090BD 20 23 DB                         jsr pal_changeforquestion
090C0 A9 02                              LDA #$02
090C2 20 04 C2                          JSR setCHRPage0000
090C5 A9 00                            lda #0
090C7 8D 01 20                         sta $2001
090CA A9 20                             LDA #$20                ; draw screen
090CC 8D 06 20                      	STA $2006
090CF A9 00                         	LDA #$00
090D1 8D 06 20                      	STA $2006
090D4                           
090D4 A0 00                             ldy #$00
090D6 A2 04                             ldx #$04
090D8                           
090D8 A9 BA                             lda #<pic1
090DA 85 10                             sta $10
090DC A9 EA                             lda #>pic1
090DE 85 11                             sta $11
090E0                           
090E0                           @NameLoop211:
090E0 B1 10                             lda ($10),y
090E2 8D 07 20                          sta $2007
090E5 C8                                iny
090E6 D0 F8                             bne @NameLoop211
090E8 E6 11                             inc $11
090EA CA                                dex
090EB D0 F3                             bne @NameLoop211
090ED A9 1E                             lda #30
090EF 8D 01 20                          sta $2001
090F2 60                        rts
090F3                           ;        --------------------------------------------------------------
090F3                           
090F3                           ;;;;;;; Load screen3 out of three
090F3                           screenchange11_1:
090F3 A9 20                             LDA #$20                ; draw screen
090F5 8D 06 20                      	STA $2006
090F8 A9 00                         	LDA #$00
090FA 8D 06 20                      	STA $2006
090FD                           
090FD A0 00                             ldy #$00
090FF A2 04                             ldx #$04
09101                           
09101 A9 87                             lda #<screen2_1
09103 85 10                             sta $10
09105 A9 9E                             lda #>screen2_1
09107 85 11                             sta $11
09109                           
09109                           @NameLoop211:
09109 B1 10                             lda ($10),y
0910B 8D 07 20                          sta $2007
0910E C8                                iny
0910F D0 F8                             bne @NameLoop211
09111 E6 11                             inc $11
09113 CA                                dex
09114 D0 F3                             bne @NameLoop211
09116 60                        rts
09117                           ;  ------------------------------------------------------------
09117                           triggering_scroll_1:
09117 A5 B5                                       lda go0                        ; checking good object detection
09119 C9 01                                       cmp #1
0911B D0 0C                                       bne @tri_scr1
0911D A9 0A                                       lda #10
0911F 85 A8                                       sta $A8
09121 A9 1E                                       lda #30
09123 85 A6                                       sta $A6
09125 A9 00                                       lda #0
09127 85 B5                                       sta go0
09129                           @tri_scr1:
09129 A5 B6                                       lda bo0                        ; checking bad object detection
0912B C9 01                                       cmp #1
0912D D0 0C                                       bne @tri_scr2
0912F A9 0A                                       lda #10
09131 85 A7                                       sta $A7
09133 A9 18                                       lda #scro
09135 85 A6                                       sta $A6
09137 A9 00                                       lda #0
09139 85 B6                                       sta bo0
0913B                           @tri_scr2:
0913B A5 B7                                       lda cq0                       ;  correct answer detection
0913D C9 01                                       cmp #1
0913F D0 20                                       bne @tri_scr3
09141 A9 0A                                       lda #10
09143 85 A8                                       sta $A8
09145 A9 8C                                       lda #140
09147 85 A6                                       sta $A6
09149 A9 00                                       lda #0
0914B 85 B7                                       sta cq0
0914D                           
0914D A9 00                                      lda #0
0914F 85 23                                      sta sk1
09151                           @incpoint:
09151 A5 25                                      lda points
09153 C9 05                                      cmp #5
09155 F0 09                                      beq @newlll
09157 E6 25                                      inc points
09159 E6 23                                      inc sk1       ; sk1 is counter for skull
0915B C9 03                                      cmp #3
0915D D0 F2                                      bne @incpoint
0915F 60                                         rts
09160                           
09160                           @newlll:
09160                                           ; jmp @newl
09160 60                                         rts
09161                           
09161                           
09161                           
09161                           
09161                           @tri_scr3:
09161 A5 B8                                       lda icq0                       ;  incorrect answer detection
09163 C9 01                                       cmp #1
09165 D0 20                                       bne @tri_scr4
09167 A9 00                                       lda #0
09169 85 A7                                       sta $A7
0916B A9 00                                       lda #0
0916D 85 A6                                       sta $A6
0916F A9 00                                       lda #0
09171 85 B8                                       sta icq0
09173                           
09173 A9 00                                        lda #0
09175 85 23                                        sta sk1
09177                           
09177                           @decpoint:
09177 A5 25                                        lda points
09179 C9 00                                        cmp #0
0917B F0 09                                        beq @newllle
0917D C6 25                                        dec points
0917F E6 23                                        inc sk1       ; sk1 is counter for skull
09181 C9 03                                        cmp #3
09183 D0 F2                                        bne @decpoint
09185 60                                           rts
09186                           
09186                           @newllle:
09186                                           ;   jmp @newle
09186 60                                           rts
09187                           
09187                           @tri_scr4:
09187 60                                 rts
09188                           ;        ------------------------------------------------------------------------------------------
09188                           question1_1:
09188 57 48 41 54 06 49 53 06..           .db 'W','H','A','T',$06,'I','S',$06,'T','H','E',$06,'C','A','P','I','T','A','L'
0919B 43 49 54 59 06 4F 46 06..           .db 'C','I','T','Y',$06,'O','F',$06,'A','U','S','T','R','A','L','I','A',$06,$5B
091AE 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
091C1 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
091D4 43 41 4E 42 45 52 52 41..           .db 'C','A','N','B','E','R','R','A',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
091E7 50 45 52 54 48 06 06 06..           .db 'P','E','R','T','H',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
091FA 53 59 44 4E 45 59 06 06..           .db 'S','Y','D','N','E','Y',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0920D 41 55 43 4B 4C 41 4E 44..           .db 'A','U','C','K','L','A','N','D',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09220                           question2_1:
09220 57 48 41 54 06 44 4F 06..           .db 'W','H','A','T',$06,'D','O',$06,'W','E',$06,'C','A','L','L',$06,'T','H','E'
09233 52 41 49 4E 06 54 48 41..           .db 'R','A','I','N',$06,'T','H','A','T',$06,'C','O','N','T','A','I','N',$06,$06
09246 43 48 45 4D 49 43 41 4C..           .db 'C','H','E','M','I','C','A','L',$06,'W','A','S','T','E',$06,$5B,$06,$06,$06
09259 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0926C 53 4D 4F 47 06 06 06 06..           .db 'S','M','O','G',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0927F 41 43 49 44 06 52 41 49..           .db 'A','C','I','D',$06,'R','A','I','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09292 4D 4F 4E 53 4F 4F 4E 06..           .db 'M','O','N','S','O','O','N',$06,'R','A','I','N',$06,$06,$06,$06,$06,$06,$06
092A5 53 45 41 53 4F 4E 41 4C..           .db 'S','E','A','S','O','N','A','L',$06,'R','A','I','N',$06,$06,$06,$06,$06,$06
092B8                           
092B8                           question3_1:
092B8 57 48 49 43 48 06 49 53..           .db 'W','H','I','C','H',$06,'I','S',$06,'T','H','E',$06,$06,$06,$06,$06,$06,$06
092CB 43 4F 4C 44 45 53 54 06..           .db 'C','O','L','D','E','S','T',$06,'P','L','A','C','E',$06,'O','N',$06,$06,$06
092DE 45 41 52 54 48 06 5B 06..           .db 'E','A','R','T','H',$06,$5B,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
092F1 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09304 41 4E 54 41 52 54 49 43..           .db 'A','N','T','A','R','T','I','C','A',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09317 41 52 43 54 49 43 06 43..           .db 'A','R','C','T','I','C',$06,'C','I','R','C','L','E',$06,$06,$06,$06,$06,$06
0932A 47 52 45 45 4E 4C 41 4E..           .db 'G','R','E','E','N','L','A','N','D',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0933D 4D 54 6E 45 56 45 52 45..           .db 'M','T',$6E,'E','V','E','R','E','S','T',$06,$06,$06,$06,$06,$06,$06,$06,$06
09350                           
09350                           question4_1:
09350 57 48 49 43 48 06 46 45..           .db 'W','H','I','C','H',$06,'F','E','S','T','I','V','A','L',$06,'I','S',$06,$06
09363 41 4C 53 4F 06 43 41 4C..           .db 'A','L','S','O',$06,'C','A','L','L','E','D',$06,'T','H','E',$06,$06,$06,$06
09376 46 45 53 54 56 41 4C 06..           .db 'F','E','S','T','V','A','L',$06,'O','F',$06,'L','I','G','H','T','S',$06,$5B
09389 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0939C 4F 4E 41 4D 06 06 06 06..           .db 'O','N','A','M',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
093AF 44 55 53 53 45 48 52 41..           .db 'D','U','S','S','E','H','R','A',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
093C2 44 45 45 50 41 57 41 4C..           .db 'D','E','E','P','A','W','A','L','I',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
093D5 48 4F 4C 49 06 06 06 06..           .db 'H','O','L','I',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
093E8                           
093E8                           question5_1:
093E8 4B 4F 4C 4B 55 54 54 41..           .db 'K','O','L','K','U','T','T','A',$06,'S','T','A','N','D','S',$06,'O','N',$06
093FB 57 48 49 43 48 06 43 48..           .db 'W','H','I','C','H',$06,'C','H','A','N','N','E','L',$06,'O','F',$06,$06,$06
0940E 52 49 56 45 52 06 47 41..           .db 'R','I','V','E','R',$06,'G','A','N','G','A',$06,$5B,$06,$06,$06,$06,$06,$06
09421 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09434 54 45 45 53 54 41 06 06..           .db 'T','E','E','S','T','A',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09447 42 52 41 48 4D 41 50 55..           .db 'B','R','A','H','M','A','P','U','T','R','A',$06,$06,$06,$06,$06,$06,$06,$06
0945A 59 41 4D 55 4E 41 06 06..           .db 'Y','A','M','U','N','A',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0946D 48 4F 4F 47 48 4C 59 06..           .db 'H','O','O','G','H','L','Y',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09480                           question6_1:
09480 54 48 45 06 4C 41 59 45..           .db 'T','H','E',$06,'L','A','Y','E','R',$06,'T','H','A','T',$06,$06,$06,$06,$06
09493 50 52 4F 54 45 43 54 53..           .db 'P','R','O','T','E','C','T','S',$06,'T','H','E',$06,'E','A','R','T','H',$06
094A6 46 52 4F 4D 06 55 56 06..           .db 'F','R','O','M',$06,'U','V',$06,'R','A','D','I','A','T','O','N',$06,'I','S'
094B9 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
094CC 4F 5A 4F 4E 45 06 4C 41..           .db 'O','Z','O','N','E',$06,'L','A','Y','E','R',$06,$06,$06,$06,$06,$06,$06,$06
094DF 4E 49 54 52 4F 47 45 4E..           .db 'N','I','T','R','O','G','E','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
094F2 4D 45 54 48 41 4E 45 06..           .db 'M','E','T','H','A','N','E',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09505 4D 41 47 4E 45 53 49 55..           .db 'M','A','G','N','E','S','I','U','M',$06,'O','X','I','D','E',$06,$06,$06,$06
09518                           
09518                           question7_1:
09518 57 48 49 43 48 06 49 53..           .db 'W','H','I','C','H',$06,'I','S',$06,'T','H','E',$06,$06,$06,$06,$06,$06,$06
0952B 4D 49 53 53 49 4E 47 06..           .db 'M','I','S','S','I','N','G',$06,'N','U','M','B','E','R',$06,$06,$06,$06,$06
0953E 31 33 35 06 39 6E 6E 6E..           .db '1','3','5',$06,'9',$6E,$6E,$6E,$6E,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09551 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09564 37 06 06 06 06 06 06 06..           .db '7',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09577 36 06 06 06 06 06 06 06..           .db '6',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0958A 38 06 06 06 06 06 06 06..           .db '8',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0959D 31 31 06 06 06 06 06 06..           .db '1','1',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
095B0                           
095B0                           question8_1:
095B0 57 48 45 4E 06 44 49 44..           .db 'W','H','E','N',$06,'D','I','D',$06,'I','N','D','I','A',$06,$06,$06,$06,$06
095C3 41 44 4F 50 54 45 44 06..           .db 'A','D','O','P','T','E','D',$06,'I','T','S',$06,$06,$06,$06,$06,$06,$06,$06
095D6 43 4F 4E 53 54 49 54 55..           .db 'C','O','N','S','T','I','T','U','T','I','O','N',$06,$5B,$06,$06,$06,$06,$06
095E9 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
095FC 41 55 47 55 53 54 06 31..           .db 'A','U','G','U','S','T',$06,'1','5',$6F,'1','9','4','7',$06,$06,$06,$06,$06
0960F 46 45 42 55 52 41 52 59..           .db 'F','E','B','U','R','A','R','Y',$06,'2','0',$6F,'1','9','4','7',$06,$06,$06
09622 4A 41 4E 55 41 52 59 06..           .db 'J','A','N','U','A','R','Y',$06,'2','6',$6F,'1','9','5','0',$06,$06,$06,$06
09635 44 45 43 45 4D 42 45 52..           .db 'D','E','C','E','M','B','E','R',$06,'9',$6F,'1','9','4','6',$06,$06,$06,$06
09648                           
09648                           question9_1:
09648 4C 55 4E 45 52 06 45 43..           .db 'L','U','N','E','R',$06,'E','C','L','I','P','S','E',$06,'I','S',$06,$06,$06
0965B 43 41 55 53 45 44 06 42..           .db 'C','A','U','S','E','D',$06,'B','Y',$06,'T','H','E',$06,$5B,$06,$06,$06,$06
0966E 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09681 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09694 53 55 4E 06 06 06 06 06..           .db 'S','U','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
096A7 4D 4F 4F 4E 06 06 06 06..           .db 'M','O','O','N',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
096BA 4D 41 52 53 06 06 06 06..           .db 'M','A','R','S',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
096CD 56 45 4E 55 53 06 06 06..           .db 'V','E','N','U','S',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
096E0                           question10_1:
096E0 57 48 4F 06 49 4E 56 45..           .db 'W','H','O',$06,'I','N','V','E','N','T','E','D',$06,$06,$06,$06,$06,$06,$06
096F3 47 52 41 4D 41 50 48 4F..           .db 'G','R','A','M','A','P','H','O','N','E',$06,$5B,$06,$06,$06,$06,$06,$06,$06
09706 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09719 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0972C 54 48 4F 4D 41 53 06 41..           .db 'T','H','O','M','A','S',$06,'A','L','V','A',$06,'E','D','I','S','I','O','N'
0973F 4D 49 43 48 45 41 4C 06..           .db 'M','I','C','H','E','A','L',$06,'F','A','R','A','D','A','Y',$06,$06,$06,$06
09752 46 41 48 52 45 4E 48 45..           .db 'F','A','H','R','E','N','H','E','I','T',$06,$06,$06,$06,$06,$06,$06,$06,$06
09765 41 4C 45 58 41 4E 44 45..           .db 'A','L','E','X','A','N','D','E','R',$06,'G','R','A','H','A','M','B','E','L'
09778                           
09778                           question11_1:
09778 57 48 4F 06 53 43 4F 52..           .db 'W','H','O',$06,'S','C','O','R','E','D',$06,'2','0','0',$06,'R','U','N','S'
0978B 49 4E 06 4F 4E 45 06 44..           .db 'I','N',$06,'O','N','E',$06,'D','A','Y',$06,'C','R','I','C','K','E','T',$5B ;32
0979E 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
097B1 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
097C4 53 41 43 48 49 4E 06 54..           .db 'S','A','C','H','I','N',$06,'T','E','N','D','U','L','K','A','R',$06,$06,$06
097D7 52 49 43 4B 59 06 50 4F..           .db 'R','I','C','K','Y',$06,'P','O','N','T','I','N','G',$06,$06,$06,$06,$06,$06
097EA 56 49 52 45 4E 44 52 41..           .db 'V','I','R','E','N','D','R','A',$06,'S','E','H','W','A','G',$06,$06,$06,$06
097FD 59 55 56 52 41 4A 06 53..           .db 'Y','U','V','R','A','J',$06,'S','I','N','G','H',$06,$06,$06,$06,$06,$06,$06
09810                           question12_1:
09810 54 48 45 06 45 4C 45 50..           .db 'T','H','E',$06,'E','L','E','P','H','A','N','T',$06,'S','O','U','N','D',$06
09823 49 53 06 43 41 4C 4C 45..           .db 'I','S',$06,'C','A','L','L','E','D',$06,$5B,$06,$06,$06,$06,$06,$06,$06,$06
09836 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09849 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0985C 59 45 4C 50 06 06 06 06..           .db 'Y','E','L','P',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0986F 54 52 55 4D 50 45 54 06..           .db 'T','R','U','M','P','E','T',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09882 47 52 55 4E 54 06 06 06..           .db 'G','R','U','N','T',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09895 43 4C 49 43 4B 06 06 06..           .db 'C','L','I','C','K',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
098A8                           
098A8                           question13_1:
098A8 49 46 06 46 41 43 49 4E..           .db 'I','F',$06,'F','A','C','I','N','G',$06,'N','O','R','T','H',$06,'I',$06,$06
098BB 54 55 52 4E 06 31 38 30..           .db 'T','U','R','N',$06,'1','8','0',$06,'T','H','E','N',$06,'W','H','I','C','H'
098CE 44 49 52 45 43 54 49 4F..           .db 'D','I','R','E','C','T','I','O',$06,'I',$06,'A','M',$06,'O','N',$06,$5B,$06
098E1 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
098F4 53 4F 55 54 48 06 06 06..           .db 'S','O','U','T','H',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09907 4E 4F 52 54 48 06 06 06..           .db 'N','O','R','T','H',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0991A 45 41 53 54 06 06 06 06..           .db 'E','A','S','T',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0992D 57 45 53 54 06 06 06 06..           .db 'W','E','S','T',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09940                           question14_1:
09940 57 48 4F 06 44 45 53 49..           .db 'W','H','O',$06,'D','E','S','I','G','N','E','D',$06,'T','H','E',$06,$06,$06
09953 46 49 52 53 54 06 45 46..           .db 'F','I','R','S','T',$06,'E','F','F','I','C','I','E','N','T',$06,$06,$06,$06
09966 53 54 45 41 4D 06 45 4E..           .db 'S','T','E','A','M',$06,'E','N','G','I','N','E',$06,$5B,$06,$06,$06,$06,$06
09979 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
0998C 54 48 4F 4D 41 53 06 4E..           .db 'T','H','O','M','A','S',$06,'N','E','W','W','M','E','N',$06,$06,$06,$06,$06
0999F 4A 41 4D 45 53 06 57 41..           .db 'J','A','M','E','S',$06,'W','A','T','T',$06,$06,$06,$06,$06,$06,$06,$06,$06
099B2 4A 4F 53 45 50 48 06 43..           .db 'J','O','S','E','P','H',$06,'C','U','G','N','O','T',$06,$06,$06,$06,$06,$06
099C5 53 41 4D 55 45 4C 06 43..           .db 'S','A','M','U','E','L',$06,'C','R','O','M','P','T','O','N',$06,$06,$06,$06
099D8                           
099D8                           question15_1:
099D8 41 4E 06 49 4E 53 54 52..           .db 'A','N',$06,'I','N','S','T','R','U','M','E','N','T',$06,'T','O',$06,$06,$06
099EB 4D 45 41 53 55 52 45 06..           .db 'M','E','A','S','U','R','E',$06,'T','E','M','P','E','R','A','T','U','R','E'
099FE 49 53 06 43 41 4C 4C 45..           .db 'I','S',$06,'C','A','L','L','E','D',$06,$5B,$06,$06,$06,$06,$06,$06,$06,$06
09A11 06 06 06 06 06 06 06 06..           .db $06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09A24 48 59 44 52 4F 4D 45 54..           .db 'H','Y','D','R','O','M','E','T','E','R',$06,$06,$06,$06,$06,$06,$06,$06,$06
09A37 54 48 45 52 4D 4F 4D 45..           .db 'T','H','E','R','M','O','M','E','T','E','R',$06,$06,$06,$06,$06,$06,$06,$06
09A4A 47 59 52 4F 4D 45 54 45..           .db 'G','Y','R','O','M','E','T','E','R',$06,$06,$06,$06,$06,$06,$06,$06,$06,$06
09A5D 54 45 4D 50 4F 4D 45 54..           .db 'T','E','M','P','O','M','E','T','E','R',$06,$06,$06,$06,$06,$06,$06,$06,$06
09A70                           
09A70                           ;         ---------------------------------------------------------------------------------------------
09A70                           answers_1:
09A70 8E 9E 8E AE BE 8E 8E AE.. .db  #142 , #158  , #142 , #174, #190 , #142  , #142 , #174, #158 , #142, #142 , #158, #142 , #158  , #158 , #174, #190 , #142  , #142 , #174, #158 , #142, #142
09A87                           ;    ---------------------------------------------------------------------------------------------------
09A87                           
09A87                           
09A87                           
09A87                           
09A87                           screen1_1:
09A87 00 00 00 00 00 00 00 00..         .incbin "pic33.nam"
09E87                           screen8_1:
09E87                           screen5_1:
09E87                           screen2_1:
09E87 00 00 00 00 00 00 00 00..         .incbin "pic11.nam"
0A287                               screen7_1 :
0A287                           screen4_1:
0A287 00 00 00 00 00 01 00 00..         .incbin "pic00.nam"
0A687                           
0A687                           screen6_1
0A687                           screen3_1:
0A687 00 00 00 00 00 00 00 00..        .incbin "pic22.nam"
0AA87                           ;screen7_1
0AA87                           ;screen4_1:
0AA87                            ;       .incbin "pic00.nam"
0AA87                           
0AA87                           ;screen5_1:
0AA87                           ;      ;  .incbin "screen5.nam"
0AA87                           
0AA87                           ;screen6_1:
0AA87                                  ; .incbin "screen6.nam"
0AA87                           
0AA87                           ;screen7_1:
0AA87                                   ;.incbin "screen7.nam"
0AA87                           
0AA87                           ;screen8_1:
0AA87                                   ;.incbin "screen8.nam"
0AA87                           
0AA87                           screen9_1:
0AA87                                   ;.incbin "screen9.nam"
0AA87                           
0AA87                           screen10_1:
0AA87                                  ; .incbin "screen10.nam"0AA87                           
0AA87                           LoadAddy = $AB50
0AA87                           InitAddy = $AB50
0AA87                           PlayAddy = $AB53
0AA87                           
0AA87 00 00 00 00 00 00 00 00.. .org LoadAddy
0AB50 4C 83 AB 4C 8B AD BD 7E.. .incbin "quiz.nsf"
0BE75 00 00 00 00 00 00 00 00.. .org $c000
0C000                           
0C000                           .base $8000
08000                           .include typing.asm
08000                           
08000                                 ; LDA SongNumber		; song number
08000                                ; ldx #$0		; 00 for NTSC or $01 for PAL
08000                           ;	jsr InitAddy		; init address
08000                           
08000                           snow_monster_fall:
08000                           
08000 A5 C9                                 lda trig_fall
08002 C9 01                                 cmp #1
08004 D0 2E                                 bne @bhk2
08006                           
08006 EE 08 02                             INC varB2
08009 AD 08 02                             lda varB2
0800C C9 08                                CMP #8
0800E D0 24                                BNE @bhk2
08010 A9 00                                LDA #$00
08012 8D 08 02                             STA varB2
08015                           
08015                           
08015                           
08015 A5 78                                 lda bh2
08017 C9 00                                 cmp #0
08019 D0 0A                                 bne @hb3
0801B E6 79                                 inc be2
0801D 20 FC 9C                              jsr load_snow1
08020 A9 01                                 lda #1
08022 85 78                                 sta bh2
08024 60                                    rts
08025                           
08025 E6 79                         @hb3:   inc be2
08027 20 40 9E                             jsr load_snow5
0802A A9 00                                 lda #0
0802C 85 78                                 sta bh2
0802E A5 79                                 lda be2
08030 C9 04                                 cmp #4
08032 F0 01                                 beq @omg2
08034 60                           @bhk2:     rts
08035                           
08035                              @omg2:
08035 20 FC 9C                            jsr load_snow1
08038 A9 00                               lda #0
0803A 85 C9                               sta trig_fall
0803C 85 79                               sta be2
0803E 8D 0D 01                            sta Current
08041 A9 01                               lda #1
08043 8D 37 01                            sta var01
08046                           
08046 AD 52 01                            lda mx
08049 C9 01                               cmp #1
0804B D0 E7                               bne @bhk2
0804D A9 01                               LDA #1
0804F 85 40                               sta trig_smoke
08051                                     
08051 AD 28 01                         lda wn          ;;;;;;no of letters for continuing snow level
08054 C9 01                            cmp #1
08056 D0 4C                            bne @gg1
08058                           
08058 A9 01                            lda #1
0805A 85 96                            sta end_seq
0805C 8D 2A 01                         sta trigger2               ;;;;;; triggring clear letters
0805F 8D 3F 01                         sta under2                 ;;;;;; triggering clear underlines
08062 20 8A 92                         jsr clearing_letters
08065 20 6D 94                         jsr clearing_underlines
08068 8D 27 01                         sta trigger                   ;;;; loading the letters
0806B 8D 40 01                         sta var_new                   ;;;; starting word detection
0806E A9 04                            lda #4
08070 8D 5B 01                         sta level_change            ;;;; increse the level for NMI
08073 A9 00                            lda #0
08075 85 C9                            sta trig_fall
08077 85 40                            sta trig_smoke
08079 8D 3D 01                         sta lower_byte               ;;;; starting the address of underline from starting
0807C 8D 5D 01                         sta varYp
0807F 8D 0D 01                         sta Current                  ;;;; clearing keyboard variable
08082 8D 28 01                         sta wn
08085 8D 2B 01                         sta ttempx
08088 8D 52 01                         sta mx
0808B 8D 15 01                         sta wordnum
0808E 8D 22 01                         sta $122
08091 8D 12 01                         sta pointer
08094 8D 38 01                         sta pointer0
08097 8D 29 01                         sta total_letters
0809A 8D 36 01                         sta total_letters0
0809D 8D 25 01                         sta $125
080A0                                  ;LDA #$0b
080A0                                  ;JSR setCHRPage1000           ;;;; changing sprite page
080A0                                  ;jsr loading_snow             ;;; loading snow monster
080A0                                  ;lda #1
080A0                                  ;sta random7
080A0                                  ;sta trig_static
080A0                                  ;LDA #$10
080A0                                  ;JSR setCHRPage0000
080A0                                  ;lda #$0
080A0                                  ;sta $2001
080A0                                  ;jsr pal_firstchange
080A0                                  ;jsr firstchange
080A0                                  ;lda #%00011110
080A0                                  ;sta $2001
080A0 20 3A 8B                         jsr clear_monster
080A3                                  ;jsr walk_mov1
080A3 60                               rts
080A4                           
080A4                                     ;STA scroll_status         ;;;; triggering scroll
080A4                                     ;jsr clear_snow            ;;;;; clearing snow
080A4                           @gg1:
080A4 60                                  rts
080A5                           
080A5                           
080A5                           scrollanimation:
080A5                           
080A5 AD 22 01                           lda $122    ;;;; triggering for scroll
080A8 C9 0A                              cmp #10             ; check if scrolling is enabled
080AA D0 49                              bne @continue
080AC                           
080AC AD 5B 01                  lda level_change                ;;;;; to change the chr page for walking of hanuman with rock
080AF C9 00                     cmp #0
080B1 D0 08                     bne @p1
080B3 A9 08                     LDA #$08                       ;;;;;; chr page with hanuman walking frames and rock
080B5 20 18 C2                  JSR setCHRPage1000
080B8 4C DC 80                  jmp @p4
080BB                           
080BB                           @p1:                           ;;;;; to change the chr page for walking of hanuman with only soldier basic states
080BB C9 01                         cmp #1
080BD D0 08                         bne @p2
080BF A9 08                         LDA #$08                   ;;;;;; chr page with hanuman walking frames and soldier
080C1 20 18 C2                      JSR setCHRPage1000
080C4 4C DC 80                      jmp @p4
080C7                           @p2:                          ;;;;; to change the chr page for walking of hanuman with only snake basic states
080C7 C9 02                        cmp #2
080C9 D0 08                        bne @p3
080CB A9 07                        LDA #$07                   ;;;;;; chr page with hanuman walking frames and snake
080CD 20 18 C2                     JSR setCHRPage1000
080D0 4C DC 80                     jmp @p4
080D3                           @p3:                          ;;;;; to change the chr page for walking of hanuman with only snow monster basic states
080D3 C9 03                         cmp #3
080D5 D0 05                         bne @p4
080D7 A9 0B                         LDA #$0b                  ;;;;;; chr page with hanuman walking frames and snow monster
080D9 20 18 C2                      JSR setCHRPage1000
080DC                           @p4:
080DC                           
080DC A9 00                              lda #0
080DE 8D 40 01                           sta var_new
080E1                           
080E1 A9 01                              lda #1
080E3 8D 2A 01                           sta trigger2          ;;;; triggering for clearing word
080E6 8D 3F 01                           sta under2            ;;;; triggering for clearing underline
080E9 8D 53 01                           sta sw                ;;;; hanuman moving while scrolling
080EC                           
080EC AD 23 01                           lda $123
080EF F0 05                              beq @moveforward     ; check whether 90 pixel movement is enabled ,if enabled then jumps to the routine
080F1 C9 05                              cmp #5              ; check if 90 pixel movement of hanuman forward is done
080F3 F0 19                              beq @moveboth
080F5                           @continue:
080F5 60                                 rts
080F6                           
080F6                           ; move hanuman 90 pixelsforward
080F6                           @moveforward:
080F6 AD 21 01                  	lda $121
080F9 C9 5A                             cmp #90
080FB F0 06                             beq @moveboth_init
080FD EE 21 01                          inc $121
08100 E6 A3                             inc $A3         ; increase horizotal scroll value
08102 60                                rts
08103                           
08103                           @moveboth_init:
08103 A9 05                             lda #5
08105 8D 23 01                          sta $123
08108 A9 00                             lda #0
0810A 8D 21 01                          sta $121
0810D 60                                rts
0810E                           @moveboth:
0810E 20 FC 89                           jsr decrease        ;move hanuman back by 1 pixel
08111 AD 03 05                           lda $503
08114 C9 00                              cmp #0              ; check if hanuman is at the right end of the screen
08116 D0 03                              bne @abc
08118 20 2D 8A                           jsr increase
0811B E6 A3                     @abc      inc $A3        ; move screen back
0811D A5 A3                              lda $A3
0811F C9 00                              cmp #0              ;check if the background has completely changed to new
08121 F0 01                              beq change22
08123 60                                 rts
08124                           ; move hanuman 90 pixelsforward
08124                           change22:                            ;;;;;; triggering all variables after scrolling is over
08124 A9 00                             lda #0
08126 8D 22 01                          sta $122            ;;;;; disabling scrolling
08129 8D 52 01                          sta mx
0812C 8D 53 01                          sta sw                       ;;;; dissabling walking during scrolling
0812F 8D 3D 01                          sta lower_byte               ;;;; starting the address of underline from starting
08132 8D 5D 01                          sta varYp
08135 8D 0D 01                          sta Current                  ;;;; clearing keyboard variable
08138 EE 15 01                          inc wordnum                  ;;;; increasing the word number
0813B EE 28 01                          inc wn                       ;;;; increasing the word number
0813E                           
0813E A9 01                            lda #1
08140 8D 27 01                         sta trigger                   ;;;; loading the letters
08143                                                        ;;;; starting the movement
08143 8D 40 01                         sta var_new                   ;;;; starting word detection
08146                           
08146 A9 00                             lda #$0                      ;;;; changing the name table
08148 8D 0F 01                          sta $10f
0814B 8D 23 01                          sta $123
0814E AD 04 01                          lda PPUCRTL
08151 49 01                             EOR #%00000001
08153 8D 04 01                          sta PPUCRTL
08156 8D 00 20                          sta $2000
08159                           
08159 AD 5B 01                  lda level_change                    ;;;;initialising variables after scroling for rock level
0815C C9 00                     cmp #0
0815E D0 27                     bne @p1
08160 AD 28 01                          lda wn                      ;;;;;; for how many different letters rock will loaded again
08163 C9 01                             cmp #1
08165 D0 19                             bne @conti
08167 A9 01                             lda #1                             ;;;;; code for going from rock level to soldier level
08169 85 6D                             sta trig_sol
0816B EE 5B 01                          inc level_change
0816E A9 00                             lda #0
08170 8D 28 01                          sta wn
08173 8D 15 01                          sta wordnum
08176 8D 12 01                          sta pointer
08179 8D 29 01                          sta total_letters
0817C 20 93 9C                          jsr loading_soldier
0817F 60                                rts
08180                           @conti:
08180 20 76 9C                          jsr loading_rock               ;;; loading rock
08183 60                                rts
08184                           
08184 4C B3 81                  jmp @p4
08187                           
08187                           @p1:                                ;;;;for soldier level
08187 C9 01                         cmp #1
08189 D0 0B                         bne @p2
0818B 20 93 9C                      jsr loading_soldier
0818E A9 01                         lda #1
08190 85 6D                         sta trig_sol
08192 60                            rts
08193 4C B3 81                      jmp @p4
08196                           
08196                           @p2:
08196 C9 02                        cmp #2                            ;;;;checkinh for snake level
08198 D0 0C                        bne @p3
0819A 20 49 9C                          jsr loading_snake            ;;; loading snake
0819D A9 01                             lda #1
0819F 8D 31 01                          sta $131
081A2 60                                rts
081A3 4C B3 81                     jmp @p4
081A6                           
081A6                           @p3:
081A6 C9 03                         cmp #3
081A8 D0 09                         bne @p4
081AA 20 B0 9C                      jsr loading_snow                ;;;;; loading snow monster again
081AD A9 01                         lda #1
081AF 8D 01 02                      sta trig_static
081B2 60                            rts
081B3                           @p4:
081B3                           
081B3 60                        rts
081B4                           
081B4                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
081B4                           ;To update the sprites of hunuman during walking
081B4                           
081B4                           update:
081B4                           
081B4                           
081B4 AD 41 01                   @jk :lda $141
081B7 C9 00                          cmp #0
081B9 D0 09                          bne @jk1
081BB 20 34 82                       jsr walk_mov1
081BE A9 01                          lda #1
081C0 8D 41 01                       sta $141
081C3 60                             rts
081C4                           
081C4 AD 41 01                   @jk1: lda $141
081C7 C9 01                          cmp #1
081C9 D0 09                          bne @jk2
081CB 20 86 82                       jsr walk_mov2
081CE A9 02                          lda #2
081D0 8D 41 01                       sta $141
081D3 60                             rts
081D4                           
081D4 AD 41 01                   @jk2:lda $141
081D7 C9 02                          cmp #2
081D9 D0 09                          bne @jk3
081DB 20 D7 82                       jsr walk_mov3
081DE A9 03                          lda #3
081E0 8D 41 01                       sta $141
081E3 60                             rts
081E4                           
081E4 AD 41 01                    @jk3:lda $141
081E7 C9 03                          cmp #3
081E9 D0 09                          bne @jk4
081EB 20 28 83                       jsr walk_mov4
081EE A9 04                          lda #4
081F0 8D 41 01                       sta $141
081F3 60                             rts
081F4                           
081F4 AD 41 01                    @jk4:lda $141
081F7 C9 04                          cmp #4
081F9 D0 09                          bne @jk5
081FB 20 79 83                       jsr walk_mov5
081FE A9 05                          lda #5
08200 8D 41 01                       sta $141
08203 60                             rts
08204                           
08204 AD 41 01                    @jk5:lda $141
08207 C9 05                          cmp #5
08209 D0 09                          bne @jk6
0820B 20 CA 83                       jsr walk_mov6
0820E A9 06                          lda #6
08210 8D 41 01                       sta $141
08213 60                             rts
08214                           
08214 AD 41 01                     @jk6:lda $141
08217 C9 06                          cmp #6
08219 D0 09                          bne @jk7
0821B 20 1B 84                       jsr walk_mov7
0821E A9 07                          lda #7
08220 8D 41 01                       sta $141
08223 60                             rts
08224                           
08224 AD 41 01                    @jk7:lda $141
08227 C9 07                          cmp #7
08229 D0 08                          bne @jk8
0822B 20 6C 84                       jsr walk_mov8
0822E A9 00                          lda #0
08230 8D 41 01                       sta $141
08233 60                        @jk8:rts
08234                           
08234                           walk_mov1:
08234                           
08234 A9 00                                     lda #$00
08236 8D 01 05                                  sta $501
08239                           
08239 A9 01                                     lda #$01
0823B 8D 05 05                                  sta $505
0823E                           
0823E A9 02                                     lda #$02
08240 8D 09 05                                  sta $509
08243                           
08243 A9 03                                     lda #$03
08245 8D 0D 05                                  sta $50D
08248                           
08248 A9 10                                     lda #$10
0824A 8D 11 05                                  sta $511
0824D                           
0824D A9 11                                     lda #$11
0824F 8D 15 05                                  sta $515
08252                           
08252 A9 12                                     lda #$12
08254 8D 19 05                                  sta $519
08257                           
08257 A9 1F                                     lda #$1f
08259 8D 1D 05                                  sta $51D
0825C                           
0825C A9 20                                     lda #$20
0825E 8D 21 05                                  sta $521
08261                           
08261 A9 21                                     lda #$21
08263 8D 25 05                                  sta $525
08266                           
08266 A9 22                                     lda #$22
08268 8D 29 05                                  sta $529
0826B                           
0826B A9 23                                     lda #$23
0826D 8D 2D 05                                  sta $52D
08270                           
08270 A9 30                                     lda #$30
08272 8D 31 05                                  sta $531
08275                           
08275 A9 31                                     lda #$31
08277 8D 35 05                                  sta $535
0827A                           
0827A A9 32                                     lda #$32
0827C 8D 39 05                                  sta $539
0827F                           
0827F A9 33                                     lda #$33
08281 8D 3D 05                                  sta $53D
08284                           
08284 60                                        rts
08285                            ;-----------------------------------------
08285                           
08285 60                                        RTS
08286                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08286 A9 04                     walk_mov2:       lda #$04
08288 8D 01 05                                  sta $501
0828B                           
0828B A9 05                                     lda #$05
0828D 8D 05 05                                  sta $505
08290                           
08290 A9 06                                     lda #$06
08292 8D 09 05                                  sta $509
08295                           
08295 A9 07                                     lda #$07
08297 8D 0D 05                                  sta $50D
0829A                           
0829A A9 14                                     lda #$14
0829C 8D 11 05                                  sta $511
0829F                           
0829F A9 15                                     lda #$15
082A1 8D 15 05                                  sta $515
082A4                           
082A4 A9 16                                     lda #$16
082A6 8D 19 05                                  sta $519
082A9                           
082A9 A9 17                                     lda #$17
082AB 8D 1D 05                                  sta $51D
082AE                           
082AE A9 24                                     lda #$24
082B0 8D 21 05                                  sta $521
082B3                           
082B3 A9 25                                     lda #$25
082B5 8D 25 05                                  sta $525
082B8                           
082B8 A9 26                                     lda #$26
082BA 8D 29 05                                  sta $529
082BD                           
082BD A9 27                                     lda #$27
082BF 8D 2D 05                                  sta $52D
082C2                           
082C2 A9 34                                     lda #$34
082C4 8D 31 05                                  sta $531
082C7                           
082C7 A9 35                                     lda #$35
082C9 8D 35 05                                  sta $535
082CC                           
082CC A9 36                                     lda #$36
082CE 8D 39 05                                  sta $539
082D1                           
082D1 A9 37                                     lda #$37
082D3 8D 3D 05                                  sta $53D
082D6                           
082D6                           
082D6 60                                        RTS
082D7                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
082D7 A9 08                       walk_mov3:    lda #$08
082D9 8D 01 05                                  sta $501
082DC                           
082DC A9 09                                     lda #$09
082DE 8D 05 05                                  sta $505
082E1                           
082E1 A9 0A                                     lda #$0A
082E3 8D 09 05                                  sta $509
082E6                           
082E6 A9 0B                                     lda #$0B
082E8 8D 0D 05                                  sta $50D
082EB                           
082EB A9 18                                     lda #$18
082ED 8D 11 05                                  sta $511
082F0                           
082F0 A9 19                                     lda #$19
082F2 8D 15 05                                  sta $515
082F5                           
082F5 A9 1A                                     lda #$1A
082F7 8D 19 05                                  sta $519
082FA                           
082FA A9 1B                                     lda #$1B
082FC 8D 1D 05                                  sta $51D
082FF                           
082FF A9 28                                     lda #$28
08301 8D 21 05                                  sta $521
08304                           
08304 A9 29                                     lda #$29
08306 8D 25 05                                  sta $525
08309                           
08309 A9 2A                                     lda #$2A
0830B 8D 29 05                                  sta $529
0830E                           
0830E A9 2B                                     lda #$2B
08310 8D 2D 05                                  sta $52D
08313                           
08313 A9 38                                     lda #$38
08315 8D 31 05                                  sta $531
08318                           
08318 A9 39                                     lda #$39
0831A 8D 35 05                                  sta $535
0831D                           
0831D A9 3A                                     lda #$3A
0831F 8D 39 05                                  sta $539
08322                           
08322 A9 3B                                     lda #$3B
08324 8D 3D 05                                  sta $53D
08327                           
08327                           
08327 60                                        RTS
08328                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08328 A9 0C                       walk_mov4:     lda #$0C
0832A 8D 01 05                                  sta $501
0832D                           
0832D A9 0D                                     lda #$0D
0832F 8D 05 05                                  sta $505
08332                           
08332 A9 0E                                     lda #$0E
08334 8D 09 05                                  sta $509
08337                           
08337 A9 0F                                     lda #$0F
08339 8D 0D 05                                  sta $50D
0833C                           
0833C A9 1C                                     lda #$1C
0833E 8D 11 05                                  sta $511
08341                           
08341 A9 1D                                     lda #$1D
08343 8D 15 05                                  sta $515
08346                           
08346 A9 1E                                     lda #$1E
08348 8D 19 05                                  sta $519
0834B                           
0834B A9 1F                                     lda #$1F
0834D 8D 1D 05                                  sta $51D
08350                           
08350 A9 2C                                     lda #$2C
08352 8D 21 05                                  sta $521
08355                           
08355 A9 2D                                     lda #$2D
08357 8D 25 05                                  sta $525
0835A                           
0835A A9 2E                                     lda #$2E
0835C 8D 29 05                                  sta $529
0835F                           
0835F A9 2F                                     lda #$2F
08361 8D 2D 05                                  sta $52D
08364                           
08364 A9 3C                                     lda #$3C
08366 8D 31 05                                  sta $531
08369                           
08369 A9 3D                                     lda #$3D
0836B 8D 35 05                                  sta $535
0836E                           
0836E A9 3E                                     lda #$3E
08370 8D 39 05                                  sta $539
08373                           
08373 A9 3F                                     lda #$3F
08375 8D 3D 05                                  sta $53D
08378                           
08378                           
08378 60                                        RTS
08379                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08379 A9 40                       walk_mov5:       lda #$40
0837B 8D 01 05                                  sta $501
0837E                           
0837E A9 41                                     lda #$41
08380 8D 05 05                                  sta $505
08383                           
08383 A9 42                                     lda #$42
08385 8D 09 05                                  sta $509
08388                           
08388 A9 43                                     lda #$43
0838A 8D 0D 05                                  sta $50D
0838D                           
0838D A9 50                                     lda #$50
0838F 8D 11 05                                  sta $511
08392                           
08392 A9 51                                     lda #$51
08394 8D 15 05                                  sta $515
08397                           
08397 A9 52                                     lda #$52
08399 8D 19 05                                  sta $519
0839C                           
0839C A9 53                                     lda #$53
0839E 8D 1D 05                                  sta $51D
083A1                           
083A1 A9 60                                     lda #$60
083A3 8D 21 05                                  sta $521
083A6                           
083A6 A9 61                                     lda #$61
083A8 8D 25 05                                  sta $525
083AB                           
083AB A9 62                                     lda #$62
083AD 8D 29 05                                  sta $529
083B0                           
083B0 A9 1F                                     lda #$1f
083B2 8D 2D 05                                  sta $52D
083B5                           
083B5 A9 70                                     lda #$70
083B7 8D 31 05                                  sta $531
083BA                           
083BA A9 71                                     lda #$71
083BC 8D 35 05                                  sta $535
083BF                           
083BF A9 72                                     lda #$72
083C1 8D 39 05                                  sta $539
083C4                           
083C4 A9 1F                                     lda #$1f
083C6 8D 3D 05                                  sta $53D
083C9                           
083C9                           
083C9 60                                        RTS
083CA                              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
083CA A9 44                        walk_mov6:   lda #$44
083CC 8D 01 05                                  sta $501
083CF                           
083CF A9 45                                     lda #$45
083D1 8D 05 05                                  sta $505
083D4                           
083D4 A9 46                                     lda #$46
083D6 8D 09 05                                  sta $509
083D9                           
083D9 A9 47                                     lda #$47
083DB 8D 0D 05                                  sta $50D
083DE                           
083DE A9 54                                     lda #$54
083E0 8D 11 05                                  sta $511
083E3                           
083E3 A9 55                                     lda #$55
083E5 8D 15 05                                  sta $515
083E8                           
083E8 A9 56                                     lda #$56
083EA 8D 19 05                                  sta $519
083ED                           
083ED A9 57                                     lda #$57
083EF 8D 1D 05                                  sta $51D
083F2                           
083F2 A9 64                                     lda #$64
083F4 8D 21 05                                  sta $521
083F7                           
083F7 A9 65                                     lda #$65
083F9 8D 25 05                                  sta $525
083FC                           
083FC A9 66                                     lda #$66
083FE 8D 29 05                                  sta $529
08401                           
08401 A9 67                                     lda #$67
08403 8D 2D 05                                  sta $52D
08406                           
08406 A9 74                                     lda #$74
08408 8D 31 05                                  sta $531
0840B                           
0840B A9 75                                     lda #$75
0840D 8D 35 05                                  sta $535
08410                           
08410 A9 76                                     lda #$76
08412 8D 39 05                                  sta $539
08415                           
08415 A9 77                                     lda #$77
08417 8D 3D 05                                  sta $53D
0841A                           
0841A                           
0841A 60                                        RTS
0841B                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0841B A9 48                       walk_mov7:    lda #$48
0841D 8D 01 05                                  sta $501
08420                           
08420 A9 49                                     lda #$49
08422 8D 05 05                                  sta $505
08425                           
08425 A9 4A                                     lda #$4A
08427 8D 09 05                                  sta $509
0842A                           
0842A A9 4B                                     lda #$4B
0842C 8D 0D 05                                  sta $50D
0842F                           
0842F A9 58                                     lda #$58
08431 8D 11 05                                  sta $511
08434                           
08434 A9 59                                     lda #$59
08436 8D 15 05                                  sta $515
08439                           
08439 A9 5A                                     lda #$5A
0843B 8D 19 05                                  sta $519
0843E                           
0843E A9 1F                                     lda #$1F
08440 8D 1D 05                                  sta $51D
08443                           
08443 A9 68                                     lda #$68
08445 8D 21 05                                  sta $521
08448                           
08448 A9 69                                     lda #$69
0844A 8D 25 05                                  sta $525
0844D                           
0844D A9 6A                                     lda #$6A
0844F 8D 29 05                                  sta $529
08452                           
08452 A9 1F                                     lda #$1F
08454 8D 2D 05                                  sta $52D
08457                           
08457 A9 78                                     lda #$78
08459 8D 31 05                                  sta $531
0845C                           
0845C A9 79                                     lda #$79
0845E 8D 35 05                                  sta $535
08461                           
08461 A9 7A                                     lda #$7A
08463 8D 39 05                                  sta $539
08466                           
08466 A9 1F                                     lda #$1F
08468 8D 3D 05                                  sta $53D
0846B                           
0846B                           
0846B 60                                        RTS
0846C                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0846C A9 4C                       walk_mov8:       lda #$4C
0846E 8D 01 05                                  sta $501
08471                           
08471 A9 4D                                     lda #$4D
08473 8D 05 05                                  sta $505
08476                           
08476 A9 4E                                     lda #$4E
08478 8D 09 05                                  sta $509
0847B                           
0847B A9 2B                                     lda #$2B
0847D 8D 0D 05                                  sta $50D
08480                           
08480 A9 1F                                     lda #$1F
08482 8D 11 05                                  sta $511
08485                           
08485 A9 5D                                     lda #$5D
08487 8D 15 05                                  sta $515
0848A                           
0848A A9 5E                                     lda #$5E
0848C 8D 19 05                                  sta $519
0848F                           
0848F A9 5F                                     lda #$5F
08491 8D 1D 05                                  sta $51D
08494                           
08494 A9 6C                                     lda #$6C
08496 8D 21 05                                  sta $521
08499                           
08499 A9 6D                                     lda #$6D
0849B 8D 25 05                                  sta $525
0849E                           
0849E A9 6E                                     lda #$6E
084A0 8D 29 05                                  sta $529
084A3                           
084A3 A9 1F                                     lda #$1F
084A5 8D 2D 05                                  sta $52D
084A8                           
084A8 A9 7C                                     lda #$7C
084AA 8D 31 05                                  sta $531
084AD                           
084AD A9 7D                                     lda #$7D
084AF 8D 35 05                                  sta $535
084B2                           
084B2 A9 7E                                     lda #$7E
084B4 8D 39 05                                  sta $539
084B7                           
084B7 A9 1F                                     lda #$1F
084B9 8D 3D 05                                  sta $53D
084BC                           
084BC                           
084BC 60                                        RTS
084BD                           
084BD                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
084BD                           update1:
084BD AD 2C 01                          LDA $12c
084C0 C9 01                             cmp #1
084C2 F0 3A                             beq @L2a
084C4 AD 2C 01                          LDA $12c
084C7                           
084C7 C9 02                             cmp #2
084C9 F0 3C                             beq @L3a
084CB AD 2C 01                          LDA $12c
084CE                           
084CE C9 03                             cmp #3
084D0 F0 3E                             beq @L4a
084D2 AD 2C 01                          LDA $12c
084D5                           
084D5 C9 04                             cmp #4
084D7 F0 40                             beq @L5a
084D9 AD 2C 01                          LDA $12c
084DC                           
084DC C9 05                             cmp #5
084DE F0 42                             beq @L6a
084E0 AD 2C 01                          LDA $12c
084E3                           
084E3 C9 06                             cmp #6
084E5 F0 44                             beq @L7a
084E7 AD 2C 01                          LDA $12c
084EA                           
084EA C9 07                             cmp #7
084EC F0 46                             beq @L8a
084EE AD 2C 01                          LDA $12c
084F1                           
084F1 C9 00                             CMP #0
084F3 F0 00                             beq @L1a
084F5                           
084F5                           @L1a:
084F5 20 3D 85                          jsr load_a1
084F8                           
084F8 A9 01                             LDA #1
084FA 8D 2C 01                          STA $12c
084FD                           
084FD 60                                RTS
084FE                           
084FE 20 8E 85                  @L2a:    jsr load_a2
08501 A9 02                             LDA #2
08503 8D 2C 01                          STA $12c
08506                           
08506 60                                RTS
08507                           
08507                           
08507 20 DF 85                  @L3a:    jsr load_a3
0850A A9 03                             LDA #3
0850C 8D 2C 01                          STA $12c
0850F 60                                RTS
08510                           
08510 20 30 86                  @L4a:    jsr load_a4
08513 A9 04                             LDA #4
08515 8D 2C 01                          STA $12c
08518 60                                RTS
08519                           
08519 20 81 86                  @L5a:    jsr load_a5
0851C A9 05                             LDA #5
0851E 8D 2C 01                          STA $12c
08521 60                                RTS
08522                           
08522 20 D2 86                  @L6a:    jsr load_a6
08525 A9 06                             LDA #6
08527 8D 2C 01                          STA $12c
0852A 60                                RTS
0852B                           
0852B 20 23 87                  @L7a:    jsr load_a7
0852E A9 07                             LDA #7
08530 8D 2C 01                          STA $12c
08533 60                                RTS
08534                           
08534 20 74 87                  @L8a:    jsr load_a8
08537 A9 00                             LDA #0
08539 8D 2C 01                          STA $12c
0853C                           
0853C                           
0853C 60                                RTS
0853D                           
0853D                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0853D A9 00                       load_a1:      lda #$00
0853F 8D 01 05                                  sta $501
08542                           
08542 A9 01                                     lda #$01
08544 8D 05 05                                  sta $505
08547                           
08547 A9 02                                     lda #$02
08549 8D 09 05                                  sta $509
0854C                           
0854C A9 03                                     lda #$03
0854E 8D 0D 05                                  sta $50D
08551                           
08551 A9 10                                     lda #$10
08553 8D 11 05                                  sta $511
08556                           
08556 A9 11                                     lda #$11
08558 8D 15 05                                  sta $515
0855B                           
0855B A9 12                                     lda #$12
0855D 8D 19 05                                  sta $519
08560                           
08560 A9 1F                                     lda #$1f
08562 8D 1D 05                                  sta $51D
08565                           
08565 A9 20                                     lda #$20
08567 8D 21 05                                  sta $521
0856A                           
0856A A9 21                                     lda #$21
0856C 8D 25 05                                  sta $525
0856F                           
0856F A9 22                                     lda #$22
08571 8D 29 05                                  sta $529
08574                           
08574 A9 23                                     lda #$23
08576 8D 2D 05                                  sta $52D
08579                           
08579 A9 30                                     lda #$30
0857B 8D 31 05                                  sta $531
0857E                           
0857E A9 31                                     lda #$31
08580 8D 35 05                                  sta $535
08583                           
08583 A9 32                                     lda #$32
08585 8D 39 05                                  sta $539
08588                           
08588 A9 33                                     lda #$33
0858A 8D 3D 05                                  sta $53D
0858D                           
0858D 60                                        rts
0858E                            ;;;;;;;;;;;;;;;;;;;;;;;
0858E A9 1F                      load_a2:       lda #$1F
08590 8D 01 05                                  sta $501
08593                           
08593 A9 05                                     lda #$05
08595 8D 05 05                                  sta $505
08598                           
08598 A9 06                                     lda #$06
0859A 8D 09 05                                  sta $509
0859D                           
0859D A9 1F                                     lda #$1f
0859F 8D 0D 05                                  sta $50D
085A2                           
085A2 A9 14                                     lda #$14
085A4 8D 11 05                                  sta $511
085A7                           
085A7 A9 15                                     lda #$15
085A9 8D 15 05                                  sta $515
085AC                           
085AC A9 16                                     lda #$16
085AE 8D 19 05                                  sta $519
085B1                           
085B1 A9 1F                                     lda #$1f
085B3 8D 1D 05                                  sta $51D
085B6                           
085B6 A9 24                                     lda #$24
085B8 8D 21 05                                  sta $521
085BB                           
085BB A9 25                                     lda #$25
085BD 8D 25 05                                  sta $525
085C0                           
085C0 A9 26                                     lda #$26
085C2 8D 29 05                                  sta $529
085C5                           
085C5 A9 27                                     lda #$27
085C7 8D 2D 05                                  sta $52D
085CA                           
085CA A9 34                                     lda #$34
085CC 8D 31 05                                  sta $531
085CF                           
085CF A9 35                                     lda #$35
085D1 8D 35 05                                  sta $535
085D4                           
085D4 A9 36                                     lda #$36
085D6 8D 39 05                                  sta $539
085D9                           
085D9 A9 37                                     lda #$37
085DB 8D 3D 05                                  sta $53D
085DE                           
085DE                           
085DE 60                                        RTS
085DF                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
085DF A9 08                       load_a3:    lda #$08
085E1 8D 01 05                                  sta $501
085E4                           
085E4 A9 09                                     lda #$09
085E6 8D 05 05                                  sta $505
085E9                           
085E9 A9 0A                                     lda #$0A
085EB 8D 09 05                                  sta $509
085EE                           
085EE A9 0B                                     lda #$0B
085F0 8D 0D 05                                  sta $50D
085F3                           
085F3 A9 18                                     lda #$18
085F5 8D 11 05                                  sta $511
085F8                           
085F8 A9 19                                     lda #$19
085FA 8D 15 05                                  sta $515
085FD                           
085FD A9 1A                                     lda #$1A
085FF 8D 19 05                                  sta $519
08602                           
08602 A9 1B                                     lda #$1B
08604 8D 1D 05                                  sta $51D
08607                           
08607 A9 28                                     lda #$28
08609 8D 21 05                                  sta $521
0860C                           
0860C A9 29                                     lda #$29
0860E 8D 25 05                                  sta $525
08611                           
08611 A9 2A                                     lda #$2A
08613 8D 29 05                                  sta $529
08616                           
08616 A9 2B                                     lda #$2B
08618 8D 2D 05                                  sta $52D
0861B                           
0861B A9 1F                                     lda #$1f
0861D 8D 31 05                                  sta $531
08620                           
08620 A9 39                                     lda #$39
08622 8D 35 05                                  sta $535
08625                           
08625 A9 3A                                     lda #$3A
08627 8D 39 05                                  sta $539
0862A                           
0862A A9 3B                                     lda #$3B
0862C 8D 3D 05                                  sta $53D
0862F                           
0862F                           
0862F 60                                        RTS
08630                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08630 A9 1F                       load_a4:     lda #$1f
08632 8D 01 05                                  sta $501
08635                           
08635 A9 0D                                     lda #$0D
08637 8D 05 05                                  sta $505
0863A                           
0863A A9 0E                                     lda #$0E
0863C 8D 09 05                                  sta $509
0863F                           
0863F A9 0F                                     lda #$0F
08641 8D 0D 05                                  sta $50D
08644                           
08644 A9 1C                                     lda #$1C
08646 8D 11 05                                  sta $511
08649                           
08649 A9 1D                                     lda #$1D
0864B 8D 15 05                                  sta $515
0864E                           
0864E A9 1E                                     lda #$1E
08650 8D 19 05                                  sta $519
08653                           
08653 A9 1F                                     lda #$1F
08655 8D 1D 05                                  sta $51D
08658                           
08658 A9 2C                                     lda #$2C
0865A 8D 21 05                                  sta $521
0865D                           
0865D A9 2D                                     lda #$2D
0865F 8D 25 05                                  sta $525
08662                           
08662 A9 2E                                     lda #$2E
08664 8D 29 05                                  sta $529
08667                           
08667 A9 2F                                     lda #$2F
08669 8D 2D 05                                  sta $52D
0866C                           
0866C A9 3C                                     lda #$3C
0866E 8D 31 05                                  sta $531
08671                           
08671 A9 3D                                     lda #$3D
08673 8D 35 05                                  sta $535
08676                           
08676 A9 3E                                     lda #$3E
08678 8D 39 05                                  sta $539
0867B                           
0867B A9 3F                                     lda #$3F
0867D 8D 3D 05                                  sta $53D
08680                           
08680                           
08680 60                                        RTS
08681                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08681 A9 40                     load_a5:       lda #$40
08683 8D 01 05                                  sta $501
08686                           
08686 A9 41                                     lda #$41
08688 8D 05 05                                  sta $505
0868B                           
0868B A9 42                                     lda #$42
0868D 8D 09 05                                  sta $509
08690                           
08690 A9 43                                     lda #$43
08692 8D 0D 05                                  sta $50D
08695                           
08695 A9 50                                     lda #$50
08697 8D 11 05                                  sta $511
0869A                           
0869A A9 51                                     lda #$51
0869C 8D 15 05                                  sta $515
0869F                           
0869F A9 52                                     lda #$52
086A1 8D 19 05                                  sta $519
086A4                           
086A4 A9 53                                     lda #$53
086A6 8D 1D 05                                  sta $51D
086A9                           
086A9 A9 60                                     lda #$60
086AB 8D 21 05                                  sta $521
086AE                           
086AE A9 61                                     lda #$61
086B0 8D 25 05                                  sta $525
086B3                           
086B3 A9 1F                                     lda #$1F
086B5 8D 29 05                                  sta $529
086B8                           
086B8 A9 1F                                     lda #$1F
086BA 8D 2D 05                                  sta $52D
086BD                           
086BD A9 70                                     lda #$70
086BF 8D 31 05                                  sta $531
086C2                           
086C2 A9 71                                     lda #$71
086C4 8D 35 05                                  sta $535
086C7                           
086C7 A9 72                                     lda #$72
086C9 8D 39 05                                  sta $539
086CC                           
086CC A9 1F                                     lda #$1F
086CE 8D 3D 05                                  sta $53D
086D1                           
086D1                           
086D1 60                                        RTS
086D2                              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
086D2 A9 44                        load_a6:   lda #$44
086D4 8D 01 05                                  sta $501
086D7                           
086D7 A9 45                                     lda #$45
086D9 8D 05 05                                  sta $505
086DC                           
086DC A9 46                                     lda #$46
086DE 8D 09 05                                  sta $509
086E1                           
086E1 A9 47                                     lda #$47
086E3 8D 0D 05                                  sta $50D
086E6                           
086E6 A9 54                                     lda #$54
086E8 8D 11 05                                  sta $511
086EB                           
086EB A9 55                                     lda #$55
086ED 8D 15 05                                  sta $515
086F0                           
086F0 A9 56                                     lda #$56
086F2 8D 19 05                                  sta $519
086F5                           
086F5 A9 57                                     lda #$57
086F7 8D 1D 05                                  sta $51D
086FA                           
086FA A9 64                                     lda #$64
086FC 8D 21 05                                  sta $521
086FF                           
086FF A9 65                                     lda #$65
08701 8D 25 05                                  sta $525
08704                           
08704 A9 66                                     lda #$66
08706 8D 29 05                                  sta $529
08709                           
08709 A9 67                                     lda #$67
0870B 8D 2D 05                                  sta $52D
0870E                           
0870E A9 74                                     lda #$74
08710 8D 31 05                                  sta $531
08713                           
08713 A9 75                                     lda #$75
08715 8D 35 05                                  sta $535
08718                           
08718 A9 76                                     lda #$76
0871A 8D 39 05                                  sta $539
0871D                           
0871D A9 77                                     lda #$77
0871F 8D 3D 05                                  sta $53D
08722                           
08722                           
08722 60                                        RTS
08723                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08723 A9 48                       load_a7:    lda #$48
08725 8D 01 05                                  sta $501
08728                           
08728 A9 49                                     lda #$49
0872A 8D 05 05                                  sta $505
0872D                           
0872D A9 4A                                     lda #$4A
0872F 8D 09 05                                  sta $509
08732                           
08732 A9 4B                                     lda #$4B
08734 8D 0D 05                                  sta $50D
08737                           
08737 A9 58                                     lda #$58
08739 8D 11 05                                  sta $511
0873C                           
0873C A9 59                                     lda #$59
0873E 8D 15 05                                  sta $515
08741                           
08741 A9 5A                                     lda #$5A
08743 8D 19 05                                  sta $519
08746                           
08746 A9 1F                                     lda #$1F
08748 8D 1D 05                                  sta $51D
0874B                           
0874B A9 68                                     lda #$68
0874D 8D 21 05                                  sta $521
08750                           
08750 A9 69                                     lda #$69
08752 8D 25 05                                  sta $525
08755                           
08755 A9 6A                                     lda #$6A
08757 8D 29 05                                  sta $529
0875A                           
0875A A9 6B                                     lda #$6B
0875C 8D 2D 05                                  sta $52D
0875F                           
0875F A9 78                                     lda #$78
08761 8D 31 05                                  sta $531
08764                           
08764 A9 79                                     lda #$79
08766 8D 35 05                                  sta $535
08769                           
08769 A9 7A                                     lda #$7A
0876B 8D 39 05                                  sta $539
0876E                           
0876E A9 7B                                     lda #$7B
08770 8D 3D 05                                  sta $53D
08773                           
08773                           
08773 60                                        RTS
08774                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08774 A9 4C                       load_a8:       lda #$4C
08776 8D 01 05                                  sta $501
08779                           
08779 A9 4D                                     lda #$4D
0877B 8D 05 05                                  sta $505
0877E                           
0877E A9 4E                                     lda #$4E
08780 8D 09 05                                  sta $509
08783                           
08783 A9 1F                                     lda #$1F
08785 8D 0D 05                                  sta $50D
08788                           
08788 A9 5C                                     lda #$5C
0878A 8D 11 05                                  sta $511
0878D                           
0878D A9 5D                                     lda #$5D
0878F 8D 15 05                                  sta $515
08792                           
08792 A9 5E                                     lda #$5E
08794 8D 19 05                                  sta $519
08797                           
08797 A9 5F                                     lda #$5F
08799 8D 1D 05                                  sta $51D
0879C                           
0879C A9 6C                                     lda #$6C
0879E 8D 21 05                                  sta $521
087A1                           
087A1 A9 6D                                     lda #$6D
087A3 8D 25 05                                  sta $525
087A6                           
087A6 A9 6E                                     lda #$6E
087A8 8D 29 05                                  sta $529
087AB                           
087AB A9 6F                                     lda #$6F
087AD 8D 2D 05                                  sta $52D
087B0                           
087B0 A9 7C                                     lda #$7C
087B2 8D 31 05                                  sta $531
087B5                           
087B5 A9 7D                                     lda #$7D
087B7 8D 35 05                                  sta $535
087BA                           
087BA A9 7E                                     lda #$7E
087BC 8D 39 05                                  sta $539
087BF                           
087BF A9 1F                                     lda #$1F
087C1 8D 3D 05                                  sta $53D
087C4                           
087C4                           
087C4 60                                        RTS
087C5                           
087C5                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ch3
087C5                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
087C5                            mon_1:
087C5                           
087C5 A9 1F                            lda #$1F
087C7 8D 41 05                         sta $541
087CA                           
087CA A9 1F                            lda #$1F
087CC 8D 45 05                         sta $545
087CF                           
087CF A9 1F                            lda #$1F
087D1 8D 49 05                         sta $549
087D4                           
087D4 A9 1F                            lda #$1F
087D6 8D 4D 05                         sta $54D
087D9                           
087D9 A9 D0                            lda #$D0
087DB 8D 51 05                         sta $551
087DE                           
087DE A9 D1                            lda #$D1
087E0 8D 55 05                         sta $555
087E3                           
087E3 A9 1F                            lda #$1F
087E5 8D 59 05                         sta $559
087E8                           
087E8 A9 1F                            lda #$1F
087EA 8D 5D 05                         sta $55D
087ED                           
087ED A9 E0                            lda #$E0
087EF 8D 61 05                         sta $561
087F2                           
087F2 A9 E1                            lda #$E1
087F4 8D 65 05                         sta $565
087F7                           
087F7 A9 E2                            lda #$E2
087F9 8D 69 05                         sta $569
087FC                           
087FC A9 E3                            lda #$E3
087FE 8D 6D 05                         sta $56D
08801                           
08801 A9 F0                            lda #$F0
08803 8D 71 05                         sta $571
08806                           
08806 A9 F1                            lda #$F1
08808 8D 75 05                         sta $575
0880B                           
0880B A9 F2                            lda #$F2
0880D 8D 79 05                         sta $579
08810                           
08810 A9 F3                            lda #$F3
08812 8D 7D 05                         sta $57D
08815                           
08815 60                               rts
08816                           
08816                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ch4
08816                              mon_2:
08816                           
08816 A9 1F                            lda #$1F
08818 8D 41 05                         sta $541
0881B                           
0881B A9 C5                            lda #$C5
0881D 8D 45 05                         sta $545
08820                           
08820 A9 C6                            lda #$C6
08822 8D 49 05                         sta $549
08825                           
08825 A9 1F                            lda #$1F
08827 8D 4D 05                         sta $54D
0882A                           
0882A A9 D4                            lda #$D4
0882C 8D 51 05                         sta $551
0882F                           
0882F A9 D5                            lda #$D5
08831 8D 55 05                         sta $555
08834                           
08834 A9 D6                            lda #$D6
08836 8D 59 05                         sta $559
08839                           
08839 A9 1F                            lda #$1F
0883B 8D 5D 05                         sta $55D
0883E                           
0883E A9 E4                            lda #$E4
08840 8D 61 05                         sta $561
08843                           
08843 A9 E5                            lda #$E5
08845 8D 65 05                         sta $565
08848                           
08848 A9 E6                            lda #$E6
0884A 8D 69 05                         sta $569
0884D                           
0884D A9 E7                            lda #$E7
0884F 8D 6D 05                         sta $56D
08852                           
08852 A9 F4                            lda #$F4
08854 8D 71 05                         sta $571
08857                           
08857 A9 F5                            lda #$F5
08859 8D 75 05                         sta $575
0885C                           
0885C A9 F6                            lda #$F6
0885E 8D 79 05                         sta $579
08861                           
08861 A9 F7                            lda #$F7
08863 8D 7D 05                         sta $57D
08866                           
08866 60                               rts
08867                           
08867                           
08867                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ch2
08867                             mon_3:
08867                           
08867 A9 1F                            lda #$1F
08869 8D 41 05                         sta $541
0886C                           
0886C A9 C9                            lda #$C9
0886E 8D 45 05                         sta $545
08871                           
08871 A9 CA                            lda #$CA
08873 8D 49 05                         sta $549
08876                           
08876 A9 CB                            lda #$CB
08878 8D 4D 05                         sta $54D
0887B                           
0887B A9 1F                            lda #$1F
0887D 8D 51 05                         sta $551
08880                           
08880 A9 D9                            lda #$D9
08882 8D 55 05                         sta $555
08885                           
08885 A9 DA                            lda #$DA
08887 8D 59 05                         sta $559
0888A                           
0888A A9 DB                            lda #$DB
0888C 8D 5D 05                         sta $55D
0888F                           
0888F A9 E8                            lda #$E8
08891 8D 61 05                         sta $561
08894                           
08894 A9 E9                            lda #$E9
08896 8D 65 05                         sta $565
08899                           
08899 A9 EA                            lda #$EA
0889B 8D 69 05                         sta $569
0889E                           
0889E A9 EB                            lda #$EB
088A0 8D 6D 05                         sta $56D
088A3                           
088A3 A9 F8                            lda #$F8
088A5 8D 71 05                         sta $571
088A8                           
088A8 A9 F9                            lda #$F9
088AA 8D 75 05                         sta $575
088AD                           
088AD A9 FA                            lda #$FA
088AF 8D 79 05                         sta $579
088B2                           
088B2 A9 FB                            lda #$FB
088B4 8D 7D 05                         sta $57D
088B7                           
088B7 60                               rts
088B8                           
088B8                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ch1
088B8                            mon_4:
088B8                           
088B8 A9 1F                            lda #$1F
088BA 8D 41 05                         sta $541
088BD                           
088BD A9 C1                            lda #$C1
088BF 8D 45 05                         sta $545
088C2                           
088C2 A9 C2                            lda #$C2
088C4 8D 49 05                         sta $549
088C7                           
088C7 A9 C3                            lda #$C3
088C9 8D 4D 05                         sta $54D
088CC                           
088CC A9 1F                            lda #$1F
088CE 8D 51 05                         sta $551
088D1                           
088D1 A9 C0                            lda #$C0
088D3 8D 55 05                         sta $555
088D6                           
088D6 A9 D2                            lda #$D2
088D8 8D 59 05                         sta $559
088DB                           
088DB A9 D3                            lda #$D3
088DD 8D 5D 05                         sta $55D
088E0                           
088E0 A9 1F                            lda #$1F
088E2 8D 61 05                         sta $561
088E5                           
088E5 A9 C8                            lda #$C8
088E7 8D 65 05                         sta $565
088EA                           
088EA A9 C7                            lda #$C7
088EC 8D 69 05                         sta $569
088EF                           
088EF A9 1F                            lda #$1F
088F1 8D 6D 05                         sta $56D
088F4                           
088F4 A9 DF                            lda #$DF
088F6 8D 71 05                         sta $571
088F9                           
088F9 A9 CF                            lda #$CF
088FB 8D 75 05                         sta $575
088FE                           
088FE A9 D7                            lda #$D7
08900 8D 79 05                         sta $579
08903                           
08903 A9 C4                            lda #$C4
08905 8D 7D 05                         sta $57D
08908                           
08908 60                               rts
08909                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08909                           mon_5:
08909                           
08909 A9 CC                            lda #$CC
0890B 8D 41 05                         sta $541
0890E                           
0890E A9 CD                            lda #$CD
08910 8D 45 05                         sta $545
08913                           
08913 A9 CE                            lda #$CE
08915 8D 49 05                         sta $549
08918                           
08918 A9 1F                            lda #$1F
0891A 8D 4D 05                         sta $54D
0891D                           
0891D A9 DC                            lda #$DC
0891F 8D 51 05                         sta $551
08922                           
08922 A9 DD                            lda #$DD
08924 8D 55 05                         sta $555
08927                           
08927 A9 DE                            lda #$DE
08929 8D 59 05                         sta $559
0892C                           
0892C A9 1F                            lda #$1F
0892E 8D 5D 05                         sta $55D
08931                           
08931 A9 EC                            lda #$EC
08933 8D 61 05                         sta $561
08936                           
08936 A9 ED                            lda #$ED
08938 8D 65 05                         sta $565
0893B                           
0893B A9 EE                            lda #$EE
0893D 8D 69 05                         sta $569
08940                           
08940 A9 1F                            lda #$1F
08942 8D 6D 05                         sta $56D
08945                           
08945 A9 FC                            lda #$FC
08947 8D 71 05                         sta $571
0894A                           
0894A A9 FD                            lda #$FD
0894C 8D 75 05                         sta $575
0894F                           
0894F A9 FE                            lda #$FE
08951 8D 79 05                         sta $579
08954                           
08954 A9 FF                            lda #$FF
08956 8D 7D 05                         sta $57D
08959                           
08959 60                               rts
0895A                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0895A                           mon_6:
0895A                           
0895A A9 1F                            lda #$1F
0895C 8D 41 05                         sta $541
0895F                           
0895F A9 1F                            lda #$1F
08961 8D 45 05                         sta $545
08964                           
08964 A9 1F                            lda #$1F
08966 8D 49 05                         sta $549
08969                           
08969 A9 1F                            lda #$1F
0896B 8D 4D 05                         sta $54D
0896E                           
0896E A9 1F                            lda #$1F
08970 8D 51 05                         sta $551
08973                           
08973 A9 1F                            lda #$1F
08975 8D 55 05                         sta $555
08978                           
08978 A9 1F                            lda #$1F
0897A 8D 59 05                         sta $559
0897D                           
0897D A9 1F                            lda #$1F
0897F 8D 5D 05                         sta $55D
08982                           
08982 A9 1F                            lda #$1F
08984 8D 61 05                         sta $561
08987                           
08987 A9 48                            lda #$48
08989 8D 65 05                         sta $565
0898C                           
0898C A9 5B                            lda #$5B
0898E 8D 69 05                         sta $569
08991                           
08991 A9 4F                            lda #$4F
08993 8D 6D 05                         sta $56D
08996                           
08996 A9 8C                            lda #$8C
08998 8D 71 05                         sta $571
0899B                           
0899B A9 8D                            lda #$8D
0899D 8D 75 05                         sta $575
089A0                           
089A0 A9 13                            lda #$13
089A2 8D 79 05                         sta $579
089A5                           
089A5 A9 04                            lda #$04
089A7 8D 7D 05                         sta $57D
089AA                           
089AA 60                               rts
089AB                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
089AB                           mon_7:
089AB                           
089AB A9 1F                            lda #$1F
089AD 8D 41 05                         sta $541
089B0                           
089B0 A9 1F                            lda #$1F
089B2 8D 45 05                         sta $545
089B5                           
089B5 A9 1F                            lda #$1F
089B7 8D 49 05                         sta $549
089BA                           
089BA A9 1F                            lda #$1F
089BC 8D 4D 05                         sta $54D
089BF                           
089BF A9 1F                            lda #$1F
089C1 8D 51 05                         sta $551
089C4                           
089C4 A9 1F                            lda #$1F
089C6 8D 55 05                         sta $555
089C9                           
089C9 A9 1F                            lda #$1F
089CB 8D 59 05                         sta $559
089CE                           
089CE A9 1F                            lda #$1F
089D0 8D 5D 05                         sta $55D
089D3                           
089D3 A9 1F                            lda #$1F
089D5 8D 61 05                         sta $561
089D8                           
089D8 A9 17                            lda #$17
089DA 8D 65 05                         sta $565
089DD                           
089DD A9 07                            lda #$07
089DF 8D 69 05                         sta $569
089E2                           
089E2 A9 38                            lda #$38
089E4 8D 6D 05                         sta $56D
089E7                           
089E7 A9 62                            lda #$62
089E9 8D 71 05                         sta $571
089EC                           
089EC A9 63                            lda #$63
089EE 8D 75 05                         sta $575
089F1                           
089F1 A9 73                            lda #$73
089F3 8D 79 05                         sta $579
089F6                           
089F6 A9 0C                            lda #$0C
089F8 8D 7D 05                         sta $57D
089FB                           
089FB 60                               rts
089FC                           
089FC                           
089FC                           
089FC                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
089FC                           startup :
089FC                           
089FC                           decrease:
089FC CE 03 05                          DEC $503
089FF CE 07 05                  	DEC $507
08A02 CE 0B 05                  	DEC $50B
08A05 CE 0F 05                  	DEC $50F
08A08 CE 13 05                  	DEC $513
08A0B CE 17 05                  	DEC $517
08A0E CE 1B 05                  	DEC $51B
08A11 CE 1F 05                  	DEC $51F
08A14 CE 23 05                  	DEC $523
08A17 CE 27 05                  	DEC $527
08A1A CE 2B 05                  	DEC $52B
08A1D CE 2F 05                  	DEC $52F
08A20 CE 33 05                  	DEC $533
08A23 CE 37 05                  	DEC $537
08A26 CE 3B 05                  	DEC $53B
08A29 CE 3F 05                  	DEC $53F
08A2C 60                        	rts
08A2D                           increase:
08A2D EE 03 05                          INC $503
08A30 EE 07 05                  	INC $507
08A33 EE 0B 05                  	INC $50B
08A36 EE 0F 05                  	INC $50F
08A39 EE 13 05                  	INC $513
08A3C EE 17 05                  	INC $517
08A3F EE 1B 05                  	INC $51B
08A42 EE 1F 05                  	INC $51F
08A45 EE 23 05                  	INC $523
08A48 EE 27 05                  	INC $527
08A4B EE 2B 05                  	INC $52B
08A4E EE 2F 05                  	INC $52F
08A51 EE 33 05                  	INC $533
08A54 EE 37 05                  	INC $537
08A57 EE 3B 05                  	INC $53B
08A5A EE 3F 05                  	INC $53F
08A5D 60                                 rts
08A5E                           
08A5E                           ;controller_test:
08A5E                           
08A5E                           ; Now we are moving 4 sprites together. so now the horizontal position of sprite 0,1,2,3 are stored in 503,507,50B and 50F respectively
08A5E                           ; The vertical position is stored in 500,504,508 and 50C respectively. So now we simltaneously increase or decrease the position of all 4 sprites.
08A5E                           ; This in done in code. For Check up - we have decresed the vertical position of all 4 sprites in order. For check down, we have increased the
08A5E                           ; the vertical position in order.now each tile has 8 pixel. So for check left and check right, we have put boundary and accordingly adjusted its
08A5E                           ; value with the position. Remember the the position difference should be 8.
08A5E                           
08A5E                                    ;;;;;;;;;;;;;;;;;;;;;;;;;;
08A5E                           Compare:                        ;;;;; comparing the letter typed by the user and the one required
08A5E                           
08A5E AD 40 01                  lda var_new                     ;;;;;; triggering for going into compare for snake level
08A61 C9 01                     cmp #1
08A63 F0 01                     beq @com_jmp
08A65 60                        rts
08A66                           @com_jmp:
08A66 A5 29                     LDA $29                       ;;;;;;; checking if keyboard input is working
08A68 C9 01                     cmp #1
08A6A F0 13                     beq @c
08A6C AC 12 01                  ldy pointer     ; it points to current letter that should be pressed by the user. pointer is a number. we will load the letter from library
08A6F AE 0D 01                  ldx Current     ; this stores the current letter pressed by the user
08A72 B9 5F A4                  lda word1,y   ; load the expected letter into accumaltor
08A75 CD 0D 01                  cmp Current  ;        compare with the currently pressed letter
08A78 F0 06                     beq @Found              ; correct letter is pressed
08A7A A9 00                     lda #0
08A7C 8D 0D 01                  sta Current
08A7F                           
08A7F 60                        @c:RTS
08A80                           
08A80                           @Found:                           ;;;;;; if word typed is correct then going in found
08A80                            ;;;;;;;;
08A80 A9 00                              lda #0
08A82 85 2C                              sta ps2
08A84 20 2D E3                           jsr arrow11
08A87 A9 00                              lda #0
08A89 8D 0D 01                           sta Current
08A8C A9 01                        lda #1
08A8E 8D 3B 01                     sta under
08A91 EE 13 01                     inc wl                          ; this will increse the wl. So if "RO" are pressed then wl = 2 and if "C" is pressed then wl=3
08A94 AE 13 01                     ldx wl                          ; is the current lenght of the letters pressed of a word
08A97                                                   ; level number. - how many words r completed for "ROCK" it is wordnum = 1
08A97 AC 15 01                     ldy wordnum
08A9A B9 95 A4                     lda NumberofLetters,y           ; load the no.of letters in word. here for rock,it will load 4
08A9D 8D 1F 01                     sta $11f
08AA0 EE 12 01                     inc pointer                     ; increment pointer so now it points to the next correct letter
08AA3                           
08AA3                           
08AA3 A9 01                         LDA #$01
08AA5 85 28                         STA $28
08AA7 85 29                         STA $29
08AA9 20 BC 8D                      jsr map                       ;;;;;;; mapping for how many steps word has to be completed
08AAC AC 15 01                      ldy wordnum
08AAF B9 95 A4                      lda NumberofLetters,y
08AB2 8D 1F 01                      sta $11f                          ; this loads that word 1 has how many letters . 4 will be loaded
08AB5 CD 13 01                      cmp wl                          ; compare with current lenght of the current word.
08AB8 F0 01                         BEQ @newword                     ; ie wordnum is 1. so lda will be 4. wl is 4 then new word
08ABA 60                            RTS
08ABB                           
08ABB                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08ABB                           @newword:
08ABB                           
08ABB A9 00                              lda #0
08ABD 8D 13 01                           sta wl              ; now wl is reset to zero. wl keeps the no. of letters pressed by user for current word
08AC0 8D 3A 01                           sta delay_cal_quiz       ;;;;; initializing delay value to 0
08AC3 8D 40 01                           sta var_new         ;;;;; disabling the first word comparision
08AC6 A9 01                              lda #1
08AC8 8D 37 01                           sta var01           ;;;; initialising the trigger for second comparision
08ACB 8D 39 01                           sta trig_delay      ;;;; initialising the time limit for secon word detection
08ACE 8D 5C 01                           sta clearing_byte
08AD1                           
08AD1 20 C5 87                           jsr mon_1           ;;;; loading the initial monster again
08AD4                           
08AD4 A9 00                              lda #0
08AD6 8D 31 01                           sta $131
08AD9 60                                 RTS
08ADA                           
08ADA                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08ADA                           Compare2:                  ;;;;; checking for the comparision of second word's letter typed and the one required
08ADA AD 37 01                           LDA var01
08ADD C9 01                              cmp #$01
08ADF F0 01                              beq @c0
08AE1 60                                 rts
08AE2                           @c0:
08AE2 AC 38 01                           ldy pointer0     ; it points to current letter that should be pressed by the user. pointer is a number. we will load the letter from library
08AE5 AE 0D 01                           ldx Current     ; this stores the current letter pressed by the user
08AE8 B9 9F A4                           lda word2,y   ; load the expected letter into accumaltor
08AEB CD 0D 01                           cmp Current  ;        compare with the currently pressed letter
08AEE F0 06                              beq @Found0              ; correct letter is pressed
08AF0 A9 00                              lda #0
08AF2 8D 0D 01                           sta Current
08AF5                           @c00:
08AF5 60                                 RTS
08AF6                           @Found0:
08AF6 A9 00                            lda #0
08AF8 8D 0D 01                         sta Current
08AFB                                  
08AFB A9 01                            LDA #$01
08AFD 85 52                            STA $52
08AFF EE 13 01                         inc wl                          ; this will increse the wl. So if "RO" are pressed then wl = 2 and if "C" is pressed then wl=3
08B02 AE 13 01                         ldx wl                          ; is the current lenght of the letters pressed of a word
08B05                           
08B05 EE 38 01                         inc pointer0                     ; increment pointer so now it points to the next correct letter
08B08 A9 00                            lda #0
08B0A 8D 3A 01                         sta delay_cal_quiz
08B0D                           
08B0D A9 01                         LDA #$01
08B0F 8D 3E 01                      sta under1
08B12                           
08B12 A9 00                         lda #0
08B14 85 29                         STA $29
08B16                           
08B16 AC 15 01                      ldy wordnum
08B19 B9 CF A4                      lda NumberofLetters1,y
08B1C                           
08B1C CD 13 01                      cmp wl                          ; compare with current lenght of the current word.
08B1F F0 01                         BEQ @newword0                     ; ie wordnum is 1. so lda will be 4. wl is 4 then new word
08B21                           
08B21                           
08B21                           
08B21 60                            RTS
08B22                           
08B22                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08B22                           @newword0:
08B22 A9 01                               LDA #$01
08B24 85 52                               STA $52
08B26 8D 52 01                            sta mx
08B29 A9 05                               LDA #$05
08B2B 8D 0F 01                            sta $10f             ; new word has been encountered. hence now the rock will break and scrolling will start
08B2E                           
08B2E                           
08B2E                           
08B2E A9 00                              lda #0
08B30 8D 13 01                           sta wl              ; now wl is reset to zero. wl keeps the no. of letters pressed by user for current word
08B33 8D 37 01                           sta var01
08B36 8D 39 01                           sta trig_delay
08B39 60                                 RTS
08B3A                           ;      ---------------------------------------------------------------------
08B3A                           clear_monster:
08B3A A9 1F                            lda #$1F
08B3C 8D 41 05                         sta $541
08B3F                           
08B3F 8D 45 05                         sta $545
08B42                           
08B42 8D 49 05                         sta $549
08B45                           
08B45 8D 4D 05                         sta $54D
08B48                           
08B48 8D 51 05                         sta $551
08B4B                           
08B4B 8D 55 05                         sta $555
08B4E                           
08B4E 8D 59 05                         sta $559
08B51                           
08B51 8D 5D 05                         sta $55D
08B54                           
08B54 8D 61 05                         sta $561
08B57                           
08B57 8D 65 05                         sta $565
08B5A                           
08B5A 8D 69 05                         sta $569
08B5D                           
08B5D 8D 6D 05                         sta $56D
08B60                           
08B60 8D 71 05                         sta $571
08B63                           
08B63 8D 75 05                         sta $575
08B66                           
08B66 8D 79 05                         sta $579
08B69                           
08B69 8D 7D 05                         sta $57D
08B6C                           
08B6C 60                               rts
08B6D                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08B6D                           
08B6D                             mon_exp:                   ;;;;; movement of monster when hanuman hits
08B6D                           
08B6D A5 6B                            lda go
08B6F C9 01                            cmp #1
08B71 D0 0B                            bne @gg2
08B73                           
08B73 A5 BE                             LDA $be
08B75 C9 19                             CMP #25
08B77 F0 06                             BEQ @lv7
08B79 E6 BE                             inc $be
08B7B                           
08B7B 20 67 88                          jsr mon_3
08B7E                           @gg2:
08B7E 60                                rts
08B7F                           
08B7F                              @lv7:
08B7F A9 00                             lda #0
08B81 85 BE                            sta $be
08B83 85 6B                            sta go
08B85 8D 0D 01                         sta Current
08B88 A9 01                            lda #1
08B8A 8D 37 01                          sta var01
08B8D 20 C5 87                         jsr mon_1
08B90                           
08B90 AD 52 01                         lda mx
08B93 C9 01                            cmp #1
08B95 D0 6B                            bne @gg1
08B97                                  ;LDA #10
08B97                                  ;STA scroll_status
08B97 A9 01                            lda #1
08B99 85 40                            sta trig_smoke
08B9B                                  ;jsr clear_monster
08B9B AD 28 01                         lda wn
08B9E C9 00                            cmp #0
08BA0 D0 60                            bne @gg1
08BA2                           
08BA2 A9 01                            lda #1
08BA4 8D 27 01                         sta trigger                   ;;;; loading the letters
08BA7 8D 40 01                         sta var_new                   ;;;; starting word detection
08BAA                           
08BAA EE 5B 01                         inc level_change
08BAD A9 00                            lda #0
08BAF 85 40                            sta trig_smoke
08BB1 8D 3D 01                         sta lower_byte               ;;;; starting the address of underline from starting
08BB4 8D 5D 01                         sta varYp
08BB7 8D 0D 01                         sta Current                  ;;;; clearing keyboard variable
08BBA 8D 28 01                         sta wn
08BBD 8D 52 01                         sta mx
08BC0 8D 15 01                         sta wordnum
08BC3 8D 22 01                         sta $122
08BC6 8D 12 01                         sta pointer
08BC9 8D 38 01                         sta pointer0
08BCC 8D 29 01                         sta total_letters
08BCF 8D 36 01                         sta total_letters0
08BD2 8D 25 01                         sta $125
08BD5 85 52                            sta $52
08BD7 A9 0B                            LDA #$0b
08BD9 20 18 C2                         JSR setCHRPage1000           ;;;; changing sprite page
08BDC 20 B0 9C                         jsr loading_snow             ;;; loading snow monster
08BDF A9 01                            lda #1
08BE1 85 44                            sta $44
08BE3 8D 01 02                         sta trig_static
08BE6 A9 10                            LDA #$10
08BE8 20 04 C2                         JSR setCHRPage0000
08BEB A9 00                            lda #$0
08BED 8D 01 20                         sta $2001
08BF0 20 04 A3                         jsr pal_firstchange
08BF3 20 D6 A2                         jsr firstchange
08BF6 A9 1E                            lda #%00011110
08BF8 8D 01 20                         sta $2001
08BFB 20 3A 8B                         jsr clear_monster
08BFE 20 34 82                         jsr walk_mov1
08C01 60                               rts
08C02                           
08C02 60                          @gg1:     RTS
08C03                           
08C03                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08C03                           
08C03                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08C03                           
08C03                           hit_fun:                          ;;;;; hitting of hanuman
08C03 A5 52                              LDA $52
08C05 C9 00                              CMP #$00
08C07 F0 7C                              beq @TP11
08C09                           
08C09 AD 5B 01                  lda level_change               ;;;; for first level rock which chr page has triggered
08C0C C9 00                     cmp #0
08C0E D0 15                     bne @p1
08C10 EE 5D 01                  INC varYp
08C13 AD 5D 01                  lda varYp
08C16 C9 19                     CMP #25  ;  increase/decrease to make it hit faster
08C18 D0 6B                     BNE @TP11
08C1A CE 5D 01                  dec varYp
08C1D A9 0A                     LDA #$0a
08C1F 20 18 C2                  JSR setCHRPage1000           ;;;;; setting chr of hitting frame
08C22 4C 53 8C                  jmp @p4
08C25                           
08C25                           @p1:                    ;;;;; for level one hitting which chr page has to be triggered
08C25 C9 01                         cmp #1
08C27 D0 15                         bne @p2
08C29 EE 5D 01                      INC varYp
08C2C AD 5D 01                      lda varYp
08C2F C9 19                         CMP #25  ; 20 is the delay, increase/decrease to make it hit faster
08C31 D0 52                         BNE @TP11
08C33 CE 5D 01                      dec varYp
08C36 A9 0A                         LDA #$0a
08C38 20 18 C2                      JSR setCHRPage1000
08C3B 4C 53 8C                      jmp @p4
08C3E                           @p2:                ;;;;; for level two hitting which chr page has to be set
08C3E C9 02                        cmp #2
08C40 D0 08                        bne @p3
08C42 A9 09                        LDA #$09
08C44 20 18 C2                     JSR setCHRPage1000
08C47 4C 53 8C                     jmp @p4
08C4A                           @p3:                ;;;;; for level three hitting which chr page has to be set
08C4A C9 03                         cmp #3
08C4C D0 05                         bne @p4
08C4E A9 0C                         LDA #$0c
08C50 20 18 C2                      JSR setCHRPage1000
08C53                           @p4:
08C53                           
08C53 E6 61                              INC $61
08C55 A5 61                              lda $61
08C57 C9 05                              CMP #5  ; 20 is the delay, increase/decrease to make it hit faster
08C59 D0 2A                              BNE @TP11
08C5B A9 00                              LDA #$00
08C5D 85 61                              STA $61
08C5F                           
08C5F                           
08C5F A9 00                             LDA #00
08C61 85 29                             sta $29
08C63 85 28                             sta $28
08C65                           
08C65                           
08C65                           
08C65 EE 25 01                          inc $125
08C68 20 BD 84                          jsr update1
08C6B AD 5B 01                          lda level_change
08C6E C9 00                             cmp #0
08C70 F0 0C                             beq @conti
08C72 C9 01                             cmp #1
08C74 F0 08                             beq @conti
08C76 AD 25 01                          LDA $125
08C79 C9 08                             CMP #8
08C7B F0 09                             BEQ lv1
08C7D 60                                rts
08C7E                           @conti:
08C7E AD 25 01                         LDA $125
08C81 C9 10                            CMP #16
08C83 F0 01                            BEQ lv1
08C85                           
08C85 60                        @TP11:    RTS
08C86                           lv1:
08C86                           
08C86 A9 00                             LDA #$00
08C88 85 52                             STA $52
08C8A 8D 25 01                          STA $125
08C8D                           
08C8D 20 3D 85                          jsr load_a1
08C90                           
08C90 AD 5B 01                          lda level_change            ;;;; when hitting completes
08C93 C9 00                             cmp #0
08C95 D0 0B                             bne @p1
08C97 20 22 9C                          jsr clear_rock              ;;;; clearing rocks
08C9A A9 0A                             lda #10
08C9C 8D 22 01                          sta $122           ;;;; starting scroll
08C9F 4C 1F 8D                          jmp @p4
08CA2                           @p1:                              ;;;;; for level 2
08CA2 C9 01                         cmp #1
08CA4 D0 60                         bne @p2
08CA6 20 2D 9C                      jsr clear_snow            ;;;; cleearing soldiers
08CA9 A9 0A                         lda #10
08CAB 8D 22 01                      sta $122            ;;;; starting scroll
08CAE A9 00                         lda #0
08CB0 85 6D                         sta trig_sol
08CB2                           
08CB2 AD 28 01                      lda wn                      ;;;; how many different letters will be loaded for soldiers
08CB5 C9 00                         cmp #0
08CB7 D0 66                         bne @p4
08CB9                           
08CB9 A9 01                         lda #1
08CBB 8D 27 01                      sta trigger                   ;;;; loading the letters
08CBE 8D 40 01                      sta var_new
08CC1 8D 22 01                      sta $122
08CC4                                                               ;;;; code started going from soldier to snake level
08CC4                           
08CC4 A9 00                         lda #0
08CC6                               ;sta mx
08CC6 8D 28 01                      sta wn
08CC9 8D 15 01                      sta wordnum
08CCC 8D 12 01                      sta pointer
08CCF 8D 38 01                      sta pointer0
08CD2 8D 29 01                      sta total_letters
08CD5 8D 3D 01                      sta lower_byte               ;;;; starting the address of underline from starting
08CD8 8D 5D 01                      sta varYp
08CDB 8D 0D 01                      sta Current                  ;;;; clearing keyboard variable
08CDE A9 07                         LDA #$07
08CE0 20 18 C2                      JSR setCHRPage1000          ;;;; changing sprite page
08CE3 20 49 9C                      jsr loading_snake           ;;; loading snake
08CE6 A9 01                         lda #1
08CE8 8D 31 01                      sta $131
08CEB A9 0D                         LDA #$0d
08CED 20 04 C2                      JSR setCHRPage0000
08CF0 A9 00                         lda #%0
08CF2 8D 01 20                      sta $2001
08CF5 20 48 A3                      jsr pal_firstchange1
08CF8 20 1A A3                      jsr firstchange1
08CFB A9 1E                         lda #%00011110
08CFD 8D 01 20                      sta $2001
08D00 EE 5B 01                      inc level_change
08D03 4C 1F 8D                      jmp @p4
08D06                           @p2:                            ;;;; for level 3
08D06 C9 02                        cmp #2
08D08 D0 0A                        bne @p3
08D0A A9 01                        lda #1
08D0C 85 6B                        sta go                      ;;;;; triggering snake expression
08D0E 8D 55 01                     sta mon_color               ;;;;; triggering snake colour
08D11 4C 1F 8D                     jmp @p4
08D14                           @p3:                         ;;;;; for level 4
08D14 C9 03                         cmp #3
08D16 D0 07                         bne @p4
08D18 A9 01                         lda #1
08D1A 85 C9                         sta trig_fall
08D1C 8D 55 01                      sta mon_color
08D1F                           
08D1F                           @p4:
08D1F 60                            rts
08D20                           
08D20                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08D20                           monster_colour:                            ;;;;;; change the colour of snke when hitting takes place
08D20 AD 55 01                                 lda mon_color
08D23 C9 01                                    cmp #1
08D25 D0 2E                                    bne @end_mco
08D27                           
08D27 AD 56 01                          LDA mdd2
08D2A C9 19                             CMP #25
08D2C F0 1C                             BEQ @lv9
08D2E EE 56 01                          inc mdd2
08D31                           
08D31 AD 57 01                          lda col
08D34 C9 01                             cmp #1
08D36 D0 09                             bne @hjj
08D38 20 56 8D                          jsr @old_pal
08D3B A9 00                             lda #0
08D3D 8D 57 01                          sta col
08D40 60                                rts
08D41 20 89 8D                     @hjj: jsr @new_pal
08D44 A9 01                             lda #1
08D46 8D 57 01                          sta col
08D49 60                                rts
08D4A                              @lv9:
08D4A A9 00                            lda #0
08D4C 8D 56 01                         sta mdd2
08D4F 8D 55 01                         sta mon_color
08D52 20 56 8D                         jsr @old_pal
08D55                           
08D55                           @end_mco:
08D55 60                                rts
08D56                           
08D56                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08D56                           @old_pal:
08D56 A9 02                             lda #$02
08D58 8D 42 05                          sta #$542
08D5B 8D 46 05                          sta #$546
08D5E 8D 4A 05                          sta #$54a
08D61 8D 4E 05                          sta #$54e
08D64 8D 52 05                          sta #$552
08D67 8D 56 05                          sta #$556
08D6A 8D 5A 05                          sta #$55a
08D6D 8D 5E 05                          sta #$55e
08D70 8D 62 05                          sta #$562
08D73 8D 66 05                          sta #$566
08D76 8D 6A 05                          sta #$56a
08D79 8D 6E 05                          sta #$56e
08D7C 8D 72 05                          sta #$572
08D7F 8D 76 05                          sta #$576
08D82 8D 7A 05                          sta #$57a
08D85 8D 7E 05                          sta #$57e
08D88 60                                rts
08D89                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08D89                           @new_pal:
08D89 A9 03                              lda #$03
08D8B 8D 42 05                          sta #$542
08D8E 8D 46 05                          sta #$546
08D91 8D 4A 05                          sta #$54a
08D94 8D 4E 05                          sta #$54e
08D97 8D 52 05                          sta #$552
08D9A 8D 56 05                          sta #$556
08D9D 8D 5A 05                          sta #$55a
08DA0 8D 5E 05                          sta #$55e
08DA3 8D 62 05                          sta #$562
08DA6 8D 66 05                          sta #$566
08DA9 8D 6A 05                          sta #$56a
08DAC 8D 6E 05                          sta #$56e
08DAF 8D 72 05                          sta #$572
08DB2 8D 76 05                          sta #$576
08DB5 8D 7A 05                          sta #$57a
08DB8 8D 7E 05                          sta #$57e
08DBB 60                                rts
08DBC                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08DBC                           ;To map fix distance at each step of hanuman for a given wordlength
08DBC                           map:
08DBC AD 1F 01                        LDA $11f                  ;;;;;; contains the length for the word triggered from compare
08DBF C9 03                           CMP #3
08DC1 D0 06                           BNE @m1
08DC3 A9 1C                           LDA #28
08DC5 8D 20 01                        STA $120
08DC8 60                              RTS
08DC9                           
08DC9                             @m1:
08DC9 C9 04                           CMP #4
08DCB D0 06                           BNE @m2
08DCD A9 15                           LDA #21
08DCF 8D 20 01                        STA $120
08DD2 60                              RTS
08DD3                           
08DD3                             @m2:
08DD3 C9 05                           CMP #5
08DD5 D0 06                           BNE @m3
08DD7 A9 11                           LDA #17
08DD9 8D 20 01                        STA $120
08DDC 60                              RTS
08DDD                           
08DDD                             @m3:
08DDD C9 06                           CMP #6
08DDF D0 06                           BNE @m4
08DE1 A9 0E                           LDA #14
08DE3 8D 20 01                        STA $120
08DE6 60                              RTS
08DE7                           
08DE7                             @m4:
08DE7 C9 07                           CMP #7
08DE9 D0 06                           BNE @m5
08DEB A9 0C                           LDA #12
08DED 8D 20 01                        STA $120
08DF0 60                              RTS
08DF1                           
08DF1                           
08DF1                              @m5:
08DF1 60                               RTS
08DF2                           
08DF2                           
08DF2                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08DF2                           ;To make hanuman walk when we found correct letter
08DF2                           
08DF2                            walk_fun:
08DF2                           
08DF2                           
08DF2 E6 37                                INC $37
08DF4 A5 37                                lda $37
08DF6 C9 01                                CMP #1
08DF8 D0 28                                BNE @TP1
08DFA A9 00                                LDA #$00
08DFC 85 37                                STA $37
08DFE                           
08DFE A5 29                                LDA $29
08E00 C9 00                                CMP #$00
08E02 D0 07                                BNE @ss
08E04 A5 52                                LDA $52
08E06 C9 01                                CMP #$01
08E08 F0 00                                BEQ @here
08E0A                                    ; jsr walk_mov1
08E0A                           @here:
08E0A 60                                   RTS
08E0B                           
08E0B                           
08E0B                           @ss:
08E0B 20 B4 81                          jsr update
08E0E AD 20 01                          LDA $120
08E11 C9 00                             CMP #$00
08E13 F0 07                             BEQ @lv
08E15 CE 20 01                          DEC $120
08E18 20 3B 90                          jsr B2
08E1B 60                                RTS
08E1C                           @lv:
08E1C A9 00                             LDA #$00
08E1E 85 28                             STA $28
08E20 85 29                             STA $29
08E22                           
08E22                           @TP1:
08E22 60                                RTS
08E23                           
08E23                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08E23                           scroll_walk:              ;;;; walking while scrolling is taking place
08E23                           
08E23 EE 54 01                             INC varG
08E26 AD 54 01                             lda varG
08E29 C9 0A                                CMP #10
08E2B D0 0F                                BNE @kkg
08E2D A9 00                                LDA #$00
08E2F 8D 54 01                             STA varG
08E32                           
08E32 AD 53 01                             lda sw
08E35 C9 01                                cmp #1
08E37 D0 03                                bne @kkg
08E39 20 B4 81                             jsr update
08E3C                           
08E3C 60                          @kkg:rts
08E3D                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08E3D                           monster_fun1:
08E3D                           
08E3D AD 31 01                              lda $131
08E40 C9 01                                 cmp #1
08E42 D0 1E                                 bne @jsk
08E44                           
08E44 EE 30 01                             INC $130
08E47 AD 30 01                             lda $130
08E4A C9 0A                                CMP #10
08E4C D0 14                                BNE @jsk
08E4E A9 00                                LDA #$00
08E50 8D 30 01                             STA $130
08E53                           
08E53 AD 34 01                              lda $134
08E56 C9 00                                 cmp #0
08E58 D0 09                                 bne @hm1
08E5A                           
08E5A                           
08E5A 20 C5 87                              jsr mon_1
08E5D A9 01                                 lda #1
08E5F 8D 34 01                              sta $134
08E62 60                              @jsk:  rts
08E63                           
08E63 AD 34 01                         @hm1: lda $134
08E66 C9 01                                 cmp #1
08E68 D0 1F                                 bne @hm2
08E6A                           
08E6A AD 52 01                             lda mx
08E6D C9 01                                cmp #1
08E6F F0 0F                                beq @llp
08E71 EE 4D 01                             INC varMM
08E74 AD 4D 01                             lda varMM
08E77 C9 07                                CMP #7
08E79 D0 E7                                BNE @jsk
08E7B A9 00                                LDA #$00
08E7D 8D 4D 01                             STA varMM
08E80                           
08E80 20 16 88                       @llp:   jsr mon_2
08E83 A9 02                                 lda #2
08E85 8D 34 01                              sta $134
08E88 60                                    rts
08E89                           
08E89 AD 34 01                         @hm2: lda $134
08E8C C9 02                                 cmp #2
08E8E D0 09                                 bne @hm3
08E90                           
08E90 20 67 88                              jsr mon_3
08E93 A9 03                                 lda #3
08E95 8D 34 01                              sta $134
08E98 60                                    rts
08E99                           
08E99 AD 34 01                         @hm3: lda $134
08E9C C9 03                                 cmp #3
08E9E D0 09                                 bne @hm4
08EA0                           
08EA0 20 16 88                              jsr mon_2
08EA3 A9 04                                 lda #4
08EA5 8D 34 01                              sta $134
08EA8 60                                    rts
08EA9                           
08EA9                                  @hm4:
08EA9 20 C5 87                              jsr mon_1
08EAC A9 01                                 lda #1
08EAE 8D 34 01                              sta $134
08EB1                           
08EB1 60                                    rts
08EB2                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08EB2                           hanuman_colour:                     ;;;;; colour of hanuman changes when monster hits him
08EB2 AD 58 01                                 lda hanu_pal
08EB5 C9 01                                    cmp #1
08EB7 D0 2E                                    bne @end_mco1
08EB9                           
08EB9 AD 59 01                          LDA mdd21
08EBC C9 19                             CMP #25
08EBE F0 1C                             BEQ @lv91
08EC0 EE 59 01                          inc mdd21
08EC3                           
08EC3 AD 5A 01                          lda col1
08EC6 C9 01                             cmp #1
08EC8 D0 09                             bne @hjj1
08ECA 20 E8 8E                          jsr old_pal2
08ECD A9 00                             lda #0
08ECF 8D 5A 01                          sta col1
08ED2 60                                rts
08ED3 20 1B 8F                     @hjj1: jsr new_pal2
08ED6 A9 01                             lda #1
08ED8 8D 5A 01                          sta col1
08EDB 60                                rts
08EDC                              @lv91:
08EDC A9 00                            lda #0
08EDE 8D 59 01                         sta mdd21
08EE1 8D 58 01                         sta hanu_pal
08EE4 20 E8 8E                         jsr old_pal2
08EE7                           
08EE7                           @end_mco1:
08EE7 60                                rts
08EE8                           
08EE8                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08EE8                           old_pal2:
08EE8 A9 01                             lda #$01
08EEA 8D 02 05                          sta #$502
08EED 8D 06 05                          sta #$506
08EF0 8D 0A 05                          sta #$50a
08EF3 8D 0E 05                          sta #$50e
08EF6 8D 12 05                          sta #$512
08EF9 8D 16 05                          sta #$516
08EFC 8D 1A 05                          sta #$51a
08EFF 8D 1E 05                          sta #$51e
08F02 8D 22 05                          sta #$522
08F05 8D 26 05                          sta #$526
08F08 8D 2A 05                          sta #$52a
08F0B 8D 2E 05                          sta #$52e
08F0E 8D 32 05                          sta #$532
08F11 8D 36 05                          sta #$536
08F14 8D 3A 05                          sta #$53a
08F17 8D 3E 05                          sta #$53e
08F1A 60                                rts
08F1B                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08F1B                           new_pal2:
08F1B A9 00                             lda #$00
08F1D 8D 02 05                          sta #$502
08F20 8D 06 05                          sta #$506
08F23 8D 0A 05                          sta #$50a
08F26 8D 0E 05                          sta #$50e
08F29 8D 12 05                          sta #$512
08F2C 8D 16 05                          sta #$516
08F2F 8D 1A 05                          sta #$51a
08F32 8D 1E 05                          sta #$51e
08F35 8D 22 05                          sta #$522
08F38 8D 26 05                          sta #$526
08F3B 8D 2A 05                          sta #$52a
08F3E 8D 2E 05                          sta #$52e
08F41 8D 32 05                          sta #$532
08F44 8D 36 05                          sta #$536
08F47 8D 3A 05                          sta #$53a
08F4A 8D 3E 05                          sta #$53e
08F4D 60                                rts
08F4E                           
08F4E                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08F4E                           monster_fun2:
08F4E                           
08F4E AD 4E 01                              lda key_fun2
08F51 C9 01                                 cmp #1
08F53 D0 1C                                 bne @jsk1
08F55 EE 32 01                             INC $132
08F58 AD 32 01                             lda $132
08F5B C9 08                                CMP #8
08F5D D0 12                                BNE @jsk1
08F5F A9 00                                LDA #$00
08F61 8D 32 01                             STA $132
08F64                           
08F64 EE 50 01                          inc kkc
08F67 20 77 8F                          jsr @load_mon2
08F6A AD 50 01                          LDA kkc
08F6D C9 07                             CMP #7  ; 6 will make it hit 3 times, 4 will make it 2 times and so on....
08F6F F0 01                             BEQ @lv5
08F71                           
08F71 60                        @jsk1:        RTS
08F72                           
08F72                           @lv5:
08F72                           
08F72 A9 00                             LDA #$00
08F74 8D 50 01                          STA kkc
08F77                           
08F77                           
08F77                           @load_mon2:
08F77                           
08F77 AD 33 01                              lda $133
08F7A C9 00                                 cmp #0
08F7C D0 09                                 bne @sh1
08F7E 20 C5 87                              jsr mon_1
08F81 A9 01                                 lda #1
08F83 8D 33 01                              sta $133
08F86 60                                    rts
08F87                           
08F87 AD 33 01                         @sh1: lda $133
08F8A C9 01                                 cmp #1
08F8C D0 18                                 bne @sh2
08F8E                           
08F8E EE 4F 01                             INC varMM1
08F91 AD 4F 01                             lda varMM1
08F94 C9 07                                CMP #7
08F96 D0 D9                                BNE @jsk1
08F98 A9 00                                LDA #$00
08F9A 8D 4F 01                             STA varMM1
08F9D                           
08F9D 20 16 88                              jsr mon_2
08FA0 A9 02                                 lda #2
08FA2 8D 33 01                              sta $133
08FA5 60                                    rts
08FA6                           
08FA6 AD 33 01                        @sh2: lda $133
08FA9 C9 02                                 cmp #2
08FAB D0 09                                 bne @sh3
08FAD 20 67 88                              jsr mon_3
08FB0 A9 03                                 lda #3
08FB2 8D 33 01                              sta $133
08FB5 60                                    rts
08FB6                           
08FB6 AD 33 01                        @sh3: lda $133
08FB9 C9 03                                 cmp #3
08FBB D0 09                                 bne @sh4
08FBD 20 B8 88                              jsr mon_4
08FC0 A9 04                                 lda #4
08FC2 8D 33 01                              sta $133
08FC5 60                                    rts
08FC6                           
08FC6 AD 33 01                        @sh4: lda $133
08FC9 C9 04                                 cmp #4
08FCB D0 09                                 bne @sh5
08FCD 20 09 89                              jsr mon_5
08FD0 A9 05                                 lda #5
08FD2 8D 33 01                              sta $133
08FD5 60                                    rts
08FD6                           
08FD6 AD 33 01                       @sh5:   lda $133
08FD9 C9 05                                 cmp #5
08FDB D0 09                                 bne @sh6
08FDD 20 5A 89                              jsr mon_6
08FE0 A9 06                                 lda #6
08FE2 8D 33 01                              sta $133
08FE5 60                                    rts
08FE6                           
08FE6 AD 33 01                       @sh6:   lda $133
08FE9 C9 06                                 cmp #6
08FEB D0 09                                 bne @sh7
08FED 20 AB 89                              jsr mon_7
08FF0 A9 07                                 lda #7
08FF2 8D 33 01                              sta $133
08FF5 60                                    rts
08FF6                           
08FF6                                 @sh7: ;lda key1
08FF6                                      ; cmp #7
08FF6                                      ; bne sh8
08FF6 20 C5 87                              jsr mon_1
08FF9 A9 00                                 lda #0
08FFB 8D 33 01                              sta $133
08FFE 8D 4E 01                              sta key_fun2
09001 A9 01                                 lda #1
09003 8D 49 01                              sta pro1
09006 8D 58 01                              sta hanu_pal
09009 60                                    rts
0900A                           
0900A                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0900A EE 03 06                    B1:   inc $0603
0900D EE 07 06                          inc $0607
09010 EE 0B 06                          inc $060B
09013 EE 0F 06                          inc $060F
09016 EE 13 06                          inc $0613
09019 EE 17 06                          inc $0617
0901C EE 1B 06                          inc $061B
0901F EE 1F 06                          inc $061F
09022 EE 23 06                          inc $0623
09025 EE 27 06                          inc $0627
09028 EE 2B 06                          inc $062B
0902B EE 2F 06                          inc $062F
0902E EE 33 06                          inc $0633
09031 EE 37 06                          inc $0637
09034 EE 3B 06                          inc $063B
09037 EE 3F 06                          inc $063F
0903A                           
0903A                           
0903A 60                                RTS
0903B                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0903B                           
0903B EE 03 05                    B2:   inc $0503
0903E EE 07 05                          inc $0507
09041 EE 0B 05                          inc $050B
09044 EE 0F 05                          inc $050F
09047 EE 13 05                          inc $0513
0904A EE 17 05                          inc $0517
0904D EE 1B 05                          inc $051B
09050 EE 1F 05                          inc $051F
09053 EE 23 05                          inc $0523
09056 EE 27 05                          inc $0527
09059 EE 2B 05                          inc $052B
0905C EE 2F 05                          inc $052F
0905F EE 33 05                          inc $0533
09062 EE 37 05                          inc $0537
09065 EE 3B 05                          inc $053B
09068 EE 3F 05                          inc $053F
0906B                           
0906B EE 03 05                          inc $0503
0906E EE 07 05                          inc $0507
09071 EE 0B 05                          inc $050B
09074 EE 0F 05                          inc $050F
09077 EE 13 05                          inc $0513
0907A EE 17 05                          inc $0517
0907D EE 1B 05                          inc $051B
09080 EE 1F 05                          inc $051F
09083 EE 23 05                          inc $0523
09086 EE 27 05                          inc $0527
09089 EE 2B 05                          inc $052B
0908C EE 2F 05                          inc $052F
0908F EE 33 05                          inc $0533
09092 EE 37 05                          inc $0537
09095 EE 3B 05                          inc $053B
09098 EE 3F 05                          inc $053F
0909B                           
0909B                           
0909B 60                                RTS
0909C                           
0909C                           
0909C                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0909C                           
0909C                           
0909C                           
0909C                           
0909C                            controller_test_typing:
0909C                           
0909C 20 5E 8A                          jsr Compare
0909F                            ;;;;;;;;;;;;;;
0909F 4C A2 90                         jmp @over2
090A2                            ;;;;;;;;;;;;;;;;;;;;;
090A2                           
090A2                           
090A2 60                         @over2:      RTS
090A3                           
090A3                           ;=---------------------------------------------------
090A3                           
090A3                           
090A3                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
090A3                           StartHitRockAnim:
090A3                           
090A3                           
090A3                                            ;lda k
090A3                                           ; cmp #$01
090A3                                           ; BEQ ove1
090A3                                           ; jmp rh
090A3                           
090A3                           
090A3                           
090A3                           ; here the logic is that the big rock is divided into 7 different parts. the no. of tiles in blocks are 4,2,4,2,3,3,3 respectively
090A3                           ; so total 21 tiles we are using. Now were changing the x and y positions of each 7 objects in each jsr and hence they are
090A3                           ;seemed to be fly at random
090A3                           
090A3                           
090A3                           ;rh:
090A3                           
090A3 AD 0F 01                    lda $10f
090A6 C9 05                       cmp #$05
090A8 F0 01                       beq onn
090AA 60                          rts
090AB                                    ;INC varH
090AB                                    ;lda varH
090AB                                    ;CMP #1  ; 20 is the delay, increase/decrease to make it hit faster
090AB                                    ;BNE ove1
090AB                                    ;LDA #$00
090AB                                    ;STA varH
090AB                                    ;
090AB                           
090AB                           onn:
090AB                           
090AB AD 91 01                  lda blastrock
090AE C9 01                     cmp #1
090B0 F0 15                     beq brock
090B2 AD 92 01                  lda blastsoldier
090B5 C9 01                     cmp #1
090B7 F0 0B                     beq bsoldier1
090B9 AD 90 01                  lda blastsnake
090BC C9 01                     cmp #1
090BE F0 01                     beq bsnake1
090C0 60                        rts
090C1                           
090C1                           bsnake1:
090C1 4C 89 92                  jmp bsnake
090C4                           
090C4                           bsoldier1:
090C4 4C 86 92                  jmp bsoldier
090C7                           
090C7                           brock:
090C7                           ;lda #0
090C7                           ;sta blastrock
090C7                           
090C7                           
090C7                           test0:
090C7 AD 1A 01                       lda $11a        ; for sprite 0,1,3,4
090CA EE 1A 01                       inc $11a
090CD C9 1E                          cmp #30
090CF F0 1D                          BEQ new0
090D1 D0 00                          BNE old0
090D3                           
090D3                                old0:
090D3 CE 40 05                       dec $540
090D6 CE 44 05                       dec $544
090D9 CE 4C 05                       dec $54C
090DC CE 50 05                       dec $550
090DF CE 43 05                       dec $543
090E2 CE 4F 05                       dec $54F
090E5 CE 53 05                       dec $553
090E8 CE 47 05                       dec $547
090EB 4C 0C 91                       JMP test1
090EE                           
090EE                                new0:
090EE CE 1A 01                       dec $11a
090F1 EE 4C 05                       inc $54C
090F4 EE 50 05                       inc $550
090F7 EE 40 05                       inc $540
090FA EE 44 05                       inc $544
090FD CE 43 05                       dec $543
09100 CE 4F 05                       dec $54F
09103 CE 47 05                       dec $547
09106 CE 53 05                       dec $553
09109 4C 0C 91                       JMP test1
0910C                           
0910C                                   test1:
0910C A5 DD                          lda sp1         ; for sprite 2,5
0910E E6 DD                          inc sp1
09110 C9 1E                          cmp #30
09112 F0 11                          BEQ new1
09114 D0 00                          BNE old1
09116                           
09116                                 old1:
09116 CE 48 05                       dec $548
09119 CE 54 05                       dec $554
0911C EE 4B 05                       inc $54B
0911F EE 57 05                       inc $557
09122 4C 39 91                       JMP test2
09125                           
09125                                new1:
09125 C6 DD                          dec sp1
09127 EE 54 05                       inc $554
0912A EE 48 05                       inc $548
0912D EE 4B 05                       inc $54B
09130 EE 57 05                       inc $557
09133 4C 39 91                       JMP test2
09136                           
09136 4C 85 92                    over11: JMP over1
09139                           
09139                           
09139                                test2:           ; for sprite 6,9
09139 EE 64 05                       inc $564
0913C EE 58 05                       inc $558
0913F CE 5B 05                       dec $55B
09142 CE 67 05                       dec $567
09145 4C 48 91                       JMP test3
09148                           
09148                           
09148                                test3:
09148 EE 60 05                       inc $560
0914B EE 6C 05                       inc $56C
0914E EE 5C 05                       inc $55C
09151 EE 68 05                       inc $568
09154 EE 63 05                       inc $563
09157 EE 6F 05                       inc $56F
0915A EE 5F 05                       inc $55F
0915D EE 6B 05                       inc $56B
09160 4C 63 91                       JMP test4
09163                           
09163                                test4:        ; for sprites 12,15,18
09163 EE 88 05                       inc $588
09166 EE 7C 05                       inc $57C
09169 EE 70 05                       inc $570
0916C EE 88 05                       inc $588
0916F EE 7C 05                       inc $57C
09172 EE 70 05                       inc $570
09175 CE 73 05                       dec $573
09178 CE 7F 05                       dec $57F
0917B CE 8B 05                       dec $58B
0917E 4C 81 91                       JMP test5
09181                           
09181                                test5:      ; for sprites 13,16,19
09181 EE 74 05                       inc $574
09184 EE 80 05                       inc $580
09187 EE 8C 05                       inc $58C
0918A 4C 8D 91                       JMP test6
0918D                           
0918D                           
0918D                                test6:       ; for sprites 14,17,20
0918D EE 90 05                       inc $590
09190 EE 84 05                       inc $584
09193 EE 78 05                       inc $578
09196 EE 90 05                       inc $590
09199 EE 84 05                       inc $584
0919C EE 78 05                       inc $578
0919F EE 7B 05                       inc $57B
091A2 EE 87 05                       inc $587
091A5 EE 93 05                       inc $593
091A8 4C AB 91                       JMP clear0
091AB                           
091AB                           
091AB                            ;; Now the below code is for clearing the sprites once the touch the boundary of the screen. Here we are testing
091AB                            ; the x and y position of the rock tiles with the boundary of the screen. if they match, clear that much sprites from memory
091AB                           
091AB                           
091AB                                clear0:    ; for testing the boundary for sprite 0,1,3,4
091AB                           
091AB AC 19 01                       LDY ybottom
091AE AE 17 01                       LDX xright
091B1 CC 4C 05                       CPY $54C
091B4 F0 08                          BEQ ClearSprites0
091B6 EC 4F 05                       CPX $54F
091B9 F0 03                          BEQ ClearSprites0
091BB 4C D4 91                       JMP clear1
091BE                           
091BE                           ClearSprites0:
091BE A9 1F                           lda #$1F
091C0 8D 41 05                        sta $541
091C3 8D 45 05                        sta $545
091C6 8D 4D 05                        sta $54D
091C9 8D 51 05                        sta $551
091CC                           
091CC A9 00                     lda #0
091CE 8D 91 01                  sta blastrock
091D1 8D 92 01                  sta blastsoldier
091D4                           
091D4                                 ;--------------
091D4                           
091D4                                clear1:   ; for testing the boundary for sprite 2,5
091D4 AC 19 01                       LDY ybottom
091D7 AE 17 01                       LDX xright
091DA CC 54 05                       CPY $554
091DD F0 08                          BEQ ClearSprites1
091DF EC 57 05                       CPX $557
091E2 F0 03                          BEQ ClearSprites1
091E4 4C EF 91                       JMP clear2
091E7                           
091E7                           ClearSprites1:
091E7 A9 1F                      lda #$1f
091E9 8D 49 05                   sta $549
091EC 8D 55 05                   sta $555
091EF                                 clear2:   ; for testing the boundary for sprite 6,9
091EF AC 19 01                       LDY ybottom
091F2 AE 17 01                       LDX xright
091F5 CC 64 05                       CPY $564
091F8 F0 08                          BEQ ClearSprites2
091FA EC 67 05                       CPX $567
091FD F0 03                          BEQ ClearSprites2
091FF 4C 0A 92                       JMP clear3
09202                           
09202                           ClearSprites2:
09202 A9 1F                     lda #$1f
09204 8D 59 05                  sta $559
09207 8D 65 05                  sta $565
0920A                           
0920A                                 ;--------------
0920A                           
0920A                                clear3:   ; for testing the boundary for sprite 7,8,10,11
0920A AC 19 01                       LDY ybottom
0920D AE 17 01                       LDX xright
09210 CC 6C 05                       CPY $56C
09213 F0 08                          BEQ ClearSprites3
09215 EC 6F 05                       CPX $56F
09218 F0 03                          BEQ ClearSprites3
0921A 4C 2B 92                       JMP clear4
0921D                           
0921D                           
0921D                           ClearSprites3:
0921D A9 1F                     lda #$1F
0921F 8D 5D 05                  sta $55D
09222 8D 61 05                  sta $561
09225 8D 69 05                  sta $569
09228 8D 6D 05                  sta $56D
0922B                                 ;--------------
0922B                           
0922B                                clear4:   ; for testing the boundary for sprite 12,15,18
0922B AC 19 01                       LDY ybottom
0922E AE 17 01                       LDX xright
09231 CC 88 05                       CPY $588
09234 F0 08                          BEQ ClearSprites4
09236 EC 8B 05                       CPX $58B
09239 F0 03                          BEQ ClearSprites4
0923B 4C 49 92                       JMP clear5
0923E                           
0923E                           
0923E                           ClearSprites4:
0923E A9 1F                     lda #$1f
09240 8D 71 05                  sta $571
09243 8D 7D 05                  sta $57D
09246 8D 89 05                  sta $589
09249                           
09249                                 ;--------------
09249                           
09249                           
09249                                clear5:   ; for testing the boundary for sprite 13,16,19
09249 AC 19 01                       LDY ybottom
0924C AE 17 01                       LDX xright
0924F CC 8C 05                       CPY $58C
09252 F0 08                          BEQ ClearSprites5
09254 EC 8F 05                       CPX $58F
09257 F0 03                          BEQ ClearSprites5
09259 4C 67 92                       JMP clear6
0925C                           
0925C                           ClearSprites5:
0925C A9 1F                     lda #$1f
0925E 8D 75 05                  sta $575
09261 8D 81 05                  sta $581
09264 8D 8D 05                  sta $58D
09267                           
09267                                clear6:   ; for testing the boundary for sprite 14,17,20
09267 AC 19 01                       LDY ybottom
0926A AE 17 01                       LDX xright
0926D CC 90 05                       CPY $590
09270 F0 08                          BEQ ClearSprites6
09272 EC 93 05                       CPX $593
09275 F0 03                          BEQ ClearSprites6
09277 4C 85 92                       JMP over1
0927A                           
0927A                           
0927A                           ClearSprites6:
0927A A9 1F                     lda #$1f
0927C 8D 79 05                  sta $579
0927F 8D 85 05                  sta $585
09282 8D 91 05                  sta $591
09285                           
09285                           
09285                           
09285                           over1:
09285 60                                RTS
09286                           
09286                           ;;;;;;;;;;;;;;;;;;;;;;;;
09286                           
09286                           bsoldier:
09286 4C C7 90                  jmp brock
09289                           
09289                           bsnake:
09289                           ;;; put here the animation of snake...
09289                           
09289 60                        rts
0928A                           ;       -------------------------------------------------
0928A                           clearing_letters:                                  ;;;; clearing the letters
0928A AD 2A 01                                   lda trigger2                ;;;; checking trigger
0928D C9 01                                      cmp #1
0928F F0 01                                      beq @stop
09291 60                                         rts
09292                           @stop:
09292                                ;lda #%00000000             ;off the screen
09292                                ;sta $2001
09292                           
09292 AD 02 20                       LDA $2002             ; read PPU status to reset the high/low latch
09295 A9 23                          LDA #$23
09297 8D 06 20                       STA $2006             ; write the high byte of $2000 address
0929A A9 6B                          LDA #$6b
0929C 8D 06 20                       STA $2006
0929F                           
0929F                           @stop1:
0929F A9 FD                           lda #$FD
092A1 8D 07 20                        sta $2007            ;we are stoaring a character in address 0595+y
092A4 EE 2B 01                        inc ttempx
092A7 A9 10                           lda #16  ;loading length of the word in accumulator
092A9 CD 2B 01                        cmp ttempx                ;comparing the value of x with the value stored in accumulator
092AC D0 F1                           bne @stop1
092AE                           
092AE                                 ;lda #%00011110
092AE                                 ;sta $2001
092AE AD 04 01                        lda PPUCRTL
092B1 8D 00 20                        sta $2000
092B4 A5 A3                           lda $A3
092B6 8D 05 20                        sta $2005
092B9 A5 A4                           lda $A4
092BB 8D 05 20                        sta $2005
092BE 8D 2A 01                        sta trigger2
092C1 8D 2B 01                        sta ttempx
092C4                                 ;lda #1
092C4                                 ;sta trigger
092C4 60                              RTS
092C5                           
092C5                           ;                -----------------------------------------------------
092C5                           loading_letters:              ;;;; loading the first letter
092C5                           
092C5 AD 27 01                                  lda trigger
092C8 C9 01                                     cmp #1
092CA F0 01                                     beq @start
092CC 60                                        rts
092CD                           
092CD                           @start:
092CD AC 28 01                                  ldy wn
092D0                                           ;lda #%00000000             ;off the screen
092D0                                           ;sta $2001
092D0                           
092D0 AD 02 20                                  LDA $2002             ; read PPU status to reset the high/low latch
092D3 A9 23                                     LDA #$23
092D5 8D 06 20                                  STA $2006             ; write the high byte of $2000 address
092D8 A9 6C                                     LDA #$6c
092DA 8D 06 20                                  STA $2006
092DD                           
092DD                                                       ; write the low byte of $2000 address
092DD                           @start1:
092DD AE 29 01                                  ldx total_letters
092E0 BD 5F A4                                  lda word1,x
092E3 8D 07 20                                  sta $2007             ;we are stoaring a character in address 0595+y
092E6 EE 2B 01                                  inc ttempx
092E9 EE 29 01                                  inc total_letters
092EC B9 95 A4                                  lda NumberofLetters,y  ;loading length of the word in accumulator
092EF CD 2B 01                                  cmp ttempx                ;comparing the value of x with the value stored in accumulator
092F2 D0 E9                                     bne @start1
092F4                           
092F4                                           ;lda #%00011110
092F4                                           ;sta $2001
092F4 AD 04 01                                  lda PPUCRTL
092F7 8D 00 20                        sta $2000
092FA A5 A3                           lda $A3
092FC 8D 05 20                        sta $2005
092FF A5 A4                           lda $A4
09301 8D 05 20                        sta $2005
09304 8D 2B 01                                  sta ttempx
09307 8D 27 01                                  sta trigger
0930A A9 01                                     lda #1
0930C 8D 35 01                                  sta trigger0
0930F                           
0930F 60                                        RTS
09310                           
09310                           ;       ----------------------------------------------------
09310                           loading_letters2:                          ;;;;; loading second word
09310 AD 35 01                                   lda trigger0
09313 C9 01                                      cmp #1
09315 F0 01                                      beq @start0
09317 60                                         rts
09318                           
09318                           @start0:
09318 AC 28 01                                  ldy wn
0931B                                           ;lda #%00000000             ;off the screen
0931B                                           ;sta $2001
0931B                           
0931B AD 02 20                                  LDA $2002             ; read PPU status to reset the high/low latch
0931E A9 23                                     LDA #$23
09320 8D 06 20                                  STA $2006             ; write the high byte of $2000 address
09323 A9 74                                     LDA #$74
09325 8D 06 20                                  STA $2006
09328                           
09328                                                       ; write the low byte of $2000 address
09328                           @start01:
09328 AE 36 01                                  ldx total_letters0
0932B BD 9F A4                                  lda word2,x
0932E 8D 07 20                                  sta $2007             ;we are stoaring a character in address 0595+y
09331 EE 2B 01                                  inc ttempx
09334 EE 36 01                                  inc total_letters0
09337 B9 CF A4                                  lda NumberofLetters1,y  ;loading length of the word in accumulator
0933A CD 2B 01                                  cmp ttempx                ;comparing the value of x with the value stored in accumulator
0933D D0 E9                                     bne @start01
0933F                           
0933F                                           ;lda #%00011110
0933F                                           ;sta $2001
0933F AD 04 01                                  lda PPUCRTL
09342 8D 00 20                        sta $2000
09345 A5 A3                           lda $A3
09347 8D 05 20                        sta $2005
0934A A5 A4                           lda $A4
0934C 8D 05 20                        sta $2005
0934F 8D 2B 01                                  sta ttempx
09352 8D 35 01                                  sta trigger0
09355                           
09355 60                                        RTS
09356                           ;       ---------------------------------------------------
09356                           delay_typing_lol:                                  ;;;;;;for checking the second word delay
09356 AD 39 01                        lda trig_delay
09359 C9 01                           cmp #1
0935B F0 01                           beq @start_delay
0935D 60                              rts
0935E                           @start_delay:
0935E EE 3A 01                              inc delay_cal_quiz
09361 AD 3A 01                              lda delay_cal_quiz
09364 C9 B4                                 cmp #180
09366 F0 01                                 beq @lol
09368 60                                    rts
09369                           @lol:
09369 A9 00                         lda #0
0936B 8D 3A 01                      sta delay_cal_quiz
0936E AC 15 01                      ldy wordnum
09371 AD 5B 01                      lda level_change
09374 C9 02                         cmp #2
09376 D0 06                         bne @p11
09378 BE 95 A4                      ldx NumberofLetters,y
0937B 4C 85 93                      jmp @p41
0937E                           @p11:
0937E C9 03                         cmp #3
09380 D0 03                         bne @p41
09382 BE 77 A5                      ldx NumberofLetters_snow,y
09385                           @p41:
09385 AD 13 01                      lda wl
09388 C9 00                         cmp #0
0938A F0 12                         beq @loop_w1
0938C                           @loop_w2:
0938C CE 38 01                          dec pointer0
0938F CE 13 01                          dec wl
09392 AD 13 01                          lda wl
09395 C9 00                             cmp #0
09397 D0 F3                             bne @loop_w2
09399 A9 00                             lda #0
0939B 8D 3D 01                          sta lower_byte
0939E                           
0939E                           @loop_w1:
0939E CE 12 01                          dec pointer
093A1 CA                                dex
093A2 E0 00                             cpx #0
093A4 D0 F8                             bne @loop_w1
093A6 A9 00                             lda #0
093A8 8D 3D 01                          sta lower_byte
093AB 8D 37 01                          sta var01
093AE 8D 13 01                          sta wl
093B1 8D 39 01                          sta trig_delay
093B4 85 29                             sta $29
093B6 8D 0D 01                          sta Current
093B9 A9 01                             lda #1
093BB 8D 3F 01                          sta under2
093BE 8D 40 01                          sta var_new
093C1                           
093C1 AD 5B 01                          lda level_change
093C4 C9 02                             cmp #2
093C6 D0 10                             bne @p1
093C8 A9 01                             lda #1
093CA 8D 4E 01                          sta key_fun2
093CD 20 3D 85                          jsr load_a1
093D0 A9 09                             LDA #$09
093D2 20 18 C2                          JSR setCHRPage1000
093D5 4C EB 93                          jmp @p4
093D8                           @p1:
093D8 AD 5B 01                          lda level_change
093DB C9 03                             cmp #3
093DD D0 0C                             bne @p4
093DF A9 01                             lda #1
093E1 85 18                             sta trig_hit
093E3 A9 0C                             lda #$0c
093E5 20 18 C2                          jsr setCHRPage1000
093E8 20 FC 9C                          jsr load_snow1
093EB                           @p4:
093EB 60                                rts
093EC                           ;       ---------------------------------------------------
093EC                           
093EC                           
093EC                           
093EC                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
093EC                           loading_underlines:                       ;;;;;;loading underline for the first word
093EC AD 3B 01                                     lda under
093EF C9 01                                        cmp #1
093F1 F0 01                                        beq @under_jmp
093F3 60                                           rts
093F4                           @under_jmp:
093F4                                     ;lda #%00000000             ;off the screen
093F4                                     ;sta $2001
093F4 AC 3D 01                            ldy lower_byte
093F7 A9 A0                               lda #$A0
093F9 AD 02 20                            LDA $2002             ; read PPU status to reset the high/low latch
093FC A9 23                               LDA #$23
093FE 8D 06 20                            STA $2006             ; write the high byte of $2000 address
09401 B9 E7 A3                            LDA Lower_byte_pal1,y
09404 8D 06 20                            STA $2006
09407                           
09407 A9 ED                               lda #$ED
09409 8D 07 20                            sta $2007
0940C                           
0940C EE 3D 01                            inc lower_byte
0940F                                     ;lda #%00011110
0940F                                     ;sta $2001
0940F AD 04 01                            lda PPUCRTL
09412 8D 00 20                        sta $2000
09415 A5 A3                           lda $A3
09417 8D 05 20                        sta $2005
0941A A5 A4                           lda $A4
0941C 8D 05 20                        sta $2005
0941F                           
0941F A9 00                               lda #0
09421 8D 3B 01                            sta under
09424 60                                  rts
09425                           ;       ---------------------------------------------------
09425                           loading_underlines1:                       ;;;;;;;;loading underline for the second word
09425 AD 3E 01                                     lda under1
09428 C9 01                                        cmp #1
0942A F0 01                                        beq @under_jmp1
0942C 60                                           rts
0942D                           @under_jmp1:
0942D AD 5C 01                            lda clearing_byte
09430 C9 01                               cmp #1
09432 D0 05                               bne @start_under
09434 A9 00                               lda #0
09436 8D 3D 01                            sta lower_byte
09439                           @start_under:
09439 EE 5C 01                               inc clearing_byte
0943C AC 3D 01                            ldy lower_byte
0943F A9 A0                               lda #$A0
09441 AD 02 20                            LDA $2002             ; read PPU status to reset the high/low latch
09444 A9 23                               LDA #$23
09446 8D 06 20                            STA $2006             ; write the high byte of $2000 address
09449 B9 EF A3                            LDA Lower_byte_pal2,y
0944C 8D 06 20                            STA $2006
0944F                           
0944F A9 ED                               lda #$ED
09451 8D 07 20                            sta $2007
09454                           
09454 EE 3D 01                            inc lower_byte
09457                                     ;lda #%00011110
09457                                     ;sta $2001
09457 AD 04 01                            lda PPUCRTL
0945A 8D 00 20                        sta $2000
0945D A5 A3                           lda $A3
0945F 8D 05 20                        sta $2005
09462 A5 A4                           lda $A4
09464 8D 05 20                        sta $2005
09467                           
09467 A9 00                               lda #0
09469 8D 3E 01                            sta under1
0946C 60                                  rts
0946D                           ;       ---------------------------------------------------
0946D                           clearing_underlines:                    ;;;;;;;;;;;clearing underlines
0946D AD 3F 01                                      lda under2
09470 C9 01                                        cmp #1
09472 F0 01                                        beq @under_jmp2
09474 60                                           rts
09475                           @under_jmp2:
09475                                     ;lda #%00000000             ;off the screen
09475                                     ;sta $2001
09475 AC 3D 01                            ldy lower_byte
09478 A9 A0                               lda #$A0
0947A AD 02 20                            LDA $2002             ; read PPU status to reset the high/low latch
0947D A9 23                               LDA #$23
0947F 8D 06 20                            STA $2006             ; write the high byte of $2000 address
09482 A9 8C                               LDA #$8c
09484 8D 06 20                            STA $2006
09487 A2 00                               ldx #0
09489                           
09489                           @loop_under:
09489 A9 FD                               lda #$FD
0948B 8D 07 20                            sta $2007
0948E E8                                  inx
0948F E0 14                               cpx #20
09491 D0 F6                               bne @loop_under
09493                           
09493                                     ;lda #%00011110
09493                                     ;sta $2001
09493 AD 04 01                            lda PPUCRTL
09496 8D 00 20                        sta $2000
09499 A5 A3                           lda $A3
0949B 8D 05 20                        sta $2005
0949E A5 A4                           lda $A4
094A0 8D 05 20                        sta $2005
094A3                           
094A3 A9 00                               lda #0
094A5 8D 3F 01                            sta under2
094A8 8D 3D 01                            sta lower_byte
094AB 60                                  rts
094AC                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;         ;
094AC                            projectile1:                        ;;;;;;;;;;projectile motion for hanuman
094AC AD 44 01                             lda tri
094AF C9 01                                cmp #1
094B1 D0 32                                bne @T
094B3                           
094B3                           
094B3                           
094B3                           
094B3 EE 43 01                             INC varP
094B6 AD 43 01                             lda varP
094B9 C9 01                                CMP #1
094BB D0 28                                BNE @T
094BD A9 00                                LDA #$00
094BF 8D 43 01                             STA varP
094C2                           
094C2                           
094C2 AD 42 01                             lda co
094C5 C9 0C                                cmp #12
094C7 D0 05                                bne @kaka
094C9 A9 01                                lda #1
094CB 8D 4A 01                             sta pro2
094CE                           
094CE                           @kaka:
094CE AD 42 01                             lda co
094D1 C9 1A                                cmp #26
094D3 D0 11                                bne @ggh
094D5 A9 01                                lda #1
094D7 8D 47 01                             sta tri1
094DA                           
094DA A9 00                                lda #0
094DC 8D 44 01                             sta tri
094DF                           
094DF 8D 42 01                             sta co
094E2 20 AA 95                             jsr projectile2
094E5                           
094E5 60                            @T:     rts
094E6                           
094E6 EE 42 01                        @ggh: inc co
094E9 CE 00 05                             dec $500
094EC CE 03 05                             dec $503
094EF CE 03 05                             dec $503
094F2 CE 03 05                             dec $503
094F5                           
094F5 CE 04 05                             dec $504
094F8 CE 07 05                             dec $507
094FB CE 07 05                             dec $507
094FE CE 07 05                             dec $507
09501                           
09501 CE 08 05                             dec $508
09504 CE 0B 05                             dec $50B
09507 CE 0B 05                             dec $50B
0950A CE 0B 05                             dec $50B
0950D                           
0950D CE 0C 05                             dec $50C
09510 CE 0F 05                             dec $50f
09513 CE 0F 05                             dec $50f
09516 CE 0F 05                             dec $50f
09519                           
09519 CE 10 05                             dec $510
0951C CE 13 05                             dec $513
0951F CE 13 05                             dec $513
09522 CE 13 05                             dec $513
09525                           
09525 CE 14 05                             dec $514
09528 CE 17 05                             dec $517
0952B CE 17 05                             dec $517
0952E CE 17 05                             dec $517
09531                           
09531 CE 18 05                             dec $518
09534 CE 1B 05                             dec $51B
09537 CE 1B 05                             dec $51B
0953A CE 1B 05                             dec $51B
0953D                           
0953D CE 1C 05                             dec $51C
09540 CE 1F 05                             dec $51f
09543 CE 1F 05                             dec $51f
09546 CE 1F 05                             dec $51f
09549                           
09549 CE 20 05                             dec $520
0954C CE 23 05                             dec $523
0954F CE 23 05                             dec $523
09552 CE 23 05                             dec $523
09555                           
09555 CE 24 05                             dec $524
09558 CE 27 05                             dec $527
0955B CE 27 05                             dec $527
0955E CE 27 05                             dec $527
09561                           
09561 CE 28 05                             dec $528
09564 CE 2B 05                             dec $52B
09567 CE 2B 05                             dec $52B
0956A CE 2B 05                             dec $52B
0956D                           
0956D CE 2C 05                             dec $52C
09570 CE 2F 05                             dec $52f
09573 CE 2F 05                             dec $52f
09576 CE 2F 05                             dec $52f
09579                           
09579 CE 30 05                             dec $530
0957C CE 33 05                             dec $533
0957F CE 33 05                             dec $533
09582 CE 33 05                             dec $533
09585                           
09585 CE 34 05                             dec $534
09588 CE 37 05                             dec $537
0958B CE 37 05                             dec $537
0958E CE 37 05                             dec $537
09591                           
09591 CE 38 05                             dec $538
09594 CE 3B 05                             dec $53B
09597 CE 3B 05                             dec $53B
0959A CE 3B 05                             dec $53B
0959D                           
0959D CE 3C 05                             dec $53C
095A0 CE 3F 05                             dec $53f
095A3 CE 3F 05                             dec $53f
095A6 CE 3F 05                             dec $53f
095A9                           
095A9                           
095A9 60                                   rts
095AA                           
095AA                             projectile2:
095AA                           
095AA AD 47 01                             lda tri1
095AD C9 01                                cmp #1
095AF D0 26                                bne @T1
095B1                           
095B1 EE 43 01                             INC varP
095B4 AD 43 01                             lda varP
095B7 C9 02                                CMP #2
095B9 D0 1C                                BNE @T1
095BB A9 00                                LDA #$00
095BD 8D 43 01                             STA varP
095C0                           
095C0 AD 45 01                             lda co1
095C3 C9 04                                cmp #4
095C5 D0 11                                bne @ggh1
095C7                           
095C7 A9 01                                lda #1
095C9 8D 48 01                             sta tri2
095CC                           
095CC A9 00                                lda #0
095CE 8D 47 01                             sta tri1
095D1 8D 45 01                             sta co1
095D4 20 6C 96                             jsr projectile3
095D7                           
095D7 60                            @T1:     rts
095D8                           
095D8 EE 45 01                        @ggh1: inc co1
095DB                           
095DB CE 03 05                             dec $503
095DE CE 03 05                             dec $503
095E1 CE 03 05                             dec $503
095E4                           
095E4                           
095E4 CE 07 05                             dec $507
095E7 CE 07 05                             dec $507
095EA CE 07 05                             dec $507
095ED                           
095ED                           
095ED CE 0B 05                             dec $50B
095F0 CE 0B 05                             dec $50B
095F3 CE 0B 05                             dec $50B
095F6                           
095F6                           
095F6 CE 0F 05                             dec $50f
095F9 CE 0F 05                             dec $50f
095FC CE 0F 05                             dec $50f
095FF                           
095FF                           
095FF CE 13 05                             dec $513
09602 CE 13 05                             dec $513
09605 CE 13 05                             dec $513
09608                           
09608                           
09608 CE 17 05                             dec $517
0960B CE 17 05                             dec $517
0960E CE 17 05                             dec $517
09611                           
09611                           
09611 CE 1B 05                             dec $51B
09614 CE 1B 05                             dec $51B
09617 CE 1B 05                             dec $51B
0961A                           
0961A                           
0961A CE 1F 05                             dec $51f
0961D CE 1F 05                             dec $51f
09620 CE 1F 05                             dec $51f
09623                           
09623                           
09623 CE 23 05                             dec $523
09626 CE 23 05                             dec $523
09629 CE 23 05                             dec $523
0962C                           
0962C                           
0962C CE 27 05                             dec $527
0962F CE 27 05                             dec $527
09632 CE 27 05                             dec $527
09635                           
09635                           
09635 CE 2B 05                             dec $52B
09638 CE 2B 05                             dec $52B
0963B CE 2B 05                             dec $52B
0963E                           
0963E                           
0963E CE 2F 05                             dec $52f
09641 CE 2F 05                             dec $52f
09644 CE 2F 05                             dec $52f
09647                           
09647                           
09647 CE 33 05                             dec $533
0964A CE 33 05                             dec $533
0964D CE 33 05                             dec $533
09650                           
09650                           
09650 CE 37 05                             dec $537
09653 CE 37 05                             dec $537
09656 CE 37 05                             dec $537
09659                           
09659                           
09659 CE 3B 05                             dec $53B
0965C CE 3B 05                             dec $53B
0965F CE 3B 05                             dec $53B
09662                           
09662                           
09662 CE 3F 05                             dec $53f
09665 CE 3F 05                             dec $53f
09668 CE 3F 05                             dec $53f
0966B                           
0966B                           
0966B 60                                   rts
0966C                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0966C                           
0966C                            projectile3:
0966C AD 48 01                             lda tri2
0966F C9 01                                cmp #1
09671 D0 57                                bne @T2
09673                           
09673 EE 43 01                             INC varP
09676 AD 43 01                             lda varP
09679 C9 01                                CMP #1
0967B D0 4D                                BNE @T2
0967D A9 00                                LDA #$00
0967F 8D 43 01                             STA varP
09682                           
09682 AD 46 01                             lda co2
09685 C9 0C                                cmp #12
09687 D0 0A                                bne @ka1
09689                           
09689 A9 00                                lda #0
0968B 8D 4A 01                             sta pro2
0968E A9 01                                lda #1
09690 8D 4B 01                             sta pro3
09693                           
09693 AD 46 01                        @ka1: lda co2
09696 C9 1A                                cmp #26
09698 D0 31                                bne @ggh2
0969A A9 00                                lda #0
0969C 8D 48 01                             sta tri2
0969F                           
0969F 8D 46 01                             sta co2
096A2 8D 4A 01                             sta pro2
096A5                                      ;lda #1
096A5                                      ;sta var01
096A5 AD 5B 01                             lda level_change
096A8 C9 02                                cmp #2
096AA D0 0D                                bne @p1
096AC A9 01                                lda #1
096AE 8D 31 01                             sta $131
096B1 A9 07                                LDA #$07
096B3 20 18 C2                             JSR setCHRPage1000
096B6 4C CA 96                             jmp @T2
096B9                           @p1:
096B9 AD 5B 01                             lda level_change
096BC C9 03                                cmp #3
096BE D0 0A                                bne @T2
096C0 A9 01                                lda #1
096C2 8D 01 02                             sta trig_static
096C5 A9 0B                                lda #$0b
096C7 20 18 C2                             jsr setCHRPage1000
096CA                           
096CA 60                            @T2:     rts
096CB                           
096CB EE 46 01                        @ggh2: inc co2
096CE EE 00 05                             inc $500
096D1 CE 03 05                             dec $503
096D4 CE 03 05                             dec $503
096D7 CE 03 05                             dec $503
096DA                           
096DA EE 04 05                             inc $504
096DD CE 07 05                             dec $507
096E0 CE 07 05                             dec $507
096E3 CE 07 05                             dec $507
096E6                           
096E6 EE 08 05                             inc $508
096E9 CE 0B 05                             dec $50B
096EC CE 0B 05                             dec $50B
096EF CE 0B 05                             dec $50B
096F2                           
096F2 EE 0C 05                             inc $50C
096F5 CE 0F 05                             dec $50f
096F8 CE 0F 05                             dec $50f
096FB CE 0F 05                             dec $50f
096FE                           
096FE EE 10 05                             inc $510
09701 CE 13 05                             dec $513
09704 CE 13 05                             dec $513
09707 CE 13 05                             dec $513
0970A                           
0970A EE 14 05                             inc $514
0970D CE 17 05                             dec $517
09710 CE 17 05                             dec $517
09713 CE 17 05                             dec $517
09716                           
09716 EE 18 05                             inc $518
09719 CE 1B 05                             dec $51B
0971C CE 1B 05                             dec $51B
0971F CE 1B 05                             dec $51B
09722                           
09722 EE 1C 05                             inc $51C
09725 CE 1F 05                             dec $51f
09728 CE 1F 05                             dec $51f
0972B CE 1F 05                             dec $51f
0972E                           
0972E EE 20 05                             inc $520
09731 CE 23 05                             dec $523
09734 CE 23 05                             dec $523
09737 CE 23 05                             dec $523
0973A                           
0973A EE 24 05                             inc $524
0973D CE 27 05                             dec $527
09740 CE 27 05                             dec $527
09743 CE 27 05                             dec $527
09746                           
09746 EE 28 05                             inc $528
09749 CE 2B 05                             dec $52B
0974C CE 2B 05                             dec $52B
0974F CE 2B 05                             dec $52B
09752                           
09752 EE 2C 05                             inc $52C
09755 CE 2F 05                             dec $52f
09758 CE 2F 05                             dec $52f
0975B CE 2F 05                             dec $52f
0975E                           
0975E EE 30 05                             inc $530
09761 CE 33 05                             dec $533
09764 CE 33 05                             dec $533
09767 CE 33 05                             dec $533
0976A                           
0976A EE 34 05                             inc $534
0976D CE 37 05                             dec $537
09770 CE 37 05                             dec $537
09773 CE 37 05                             dec $537
09776                           
09776 EE 38 05                             inc $538
09779 CE 3B 05                             dec $53B
0977C CE 3B 05                             dec $53B
0977F CE 3B 05                             dec $53B
09782                           
09782 EE 3C 05                             inc $53C
09785 CE 3F 05                             dec $53f
09788 CE 3F 05                             dec $53f
0978B CE 3F 05                             dec $53f
0978E                           
0978E                           
0978E 60                                   rts
0978F                           
0978F                            ;;;;;;;;;;;;;;;;;;;;;;;;;;
0978F A9 80                      load_proj1:    lda #$80
09791 8D 01 05                                  sta $501
09794                           
09794 A9 81                                     lda #$81
09796 8D 05 05                                  sta $505
09799                           
09799 A9 82                                     lda #$82
0979B 8D 09 05                                  sta $509
0979E                           
0979E A9 1F                                     lda #$1F
097A0 8D 0D 05                                  sta $50D
097A3                           
097A3 A9 90                                     lda #$90
097A5 8D 11 05                                  sta $511
097A8                           
097A8 A9 91                                     lda #$91
097AA 8D 15 05                                  sta $515
097AD                           
097AD A9 92                                     lda #$92
097AF 8D 19 05                                  sta $519
097B2                           
097B2 A9 1F                                     lda #$1F
097B4 8D 1D 05                                  sta $51D
097B7                           
097B7 A9 A0                                     lda #$A0
097B9 8D 21 05                                  sta $521
097BC                           
097BC A9 A1                                     lda #$A1
097BE 8D 25 05                                  sta $525
097C1                           
097C1 A9 A2                                     lda #$A2
097C3 8D 29 05                                  sta $529
097C6                           
097C6 A9 A3                                     lda #$A3
097C8 8D 2D 05                                  sta $52D
097CB                           
097CB A9 B0                                     lda #$B0
097CD 8D 31 05                                  sta $531
097D0                           
097D0 A9 B1                                     lda #$B1
097D2 8D 35 05                                  sta $535
097D5                           
097D5 A9 B2                                     lda #$B2
097D7 8D 39 05                                  sta $539
097DA                           
097DA A9 B3                                     lda #$B3
097DC 8D 3D 05                                  sta $53D
097DF                           
097DF 60                                        rts
097E0                           
097E0                           
097E0                           
097E0                            load_proj2:
097E0 A9 84                                     lda #$84
097E2 8D 01 05                                  sta $501
097E5                           
097E5 A9 85                                     lda #$85
097E7 8D 05 05                                  sta $505
097EA                           
097EA A9 86                                     lda #$86
097EC 8D 09 05                                  sta $509
097EF                           
097EF A9 1F                                     lda #$1F
097F1 8D 0D 05                                  sta $50D
097F4                           
097F4 A9 94                                     lda #$94
097F6 8D 11 05                                  sta $511
097F9                           
097F9 A9 95                                     lda #$95
097FB 8D 15 05                                  sta $515
097FE                           
097FE A9 96                                     lda #$96
09800 8D 19 05                                  sta $519
09803                           
09803 A9 97                                     lda #$97
09805 8D 1D 05                                  sta $51D
09808                           
09808 A9 A4                                     lda #$A4
0980A 8D 21 05                                  sta $521
0980D                           
0980D A9 A5                                     lda #$A5
0980F 8D 25 05                                  sta $525
09812                           
09812 A9 A6                                     lda #$A6
09814 8D 29 05                                  sta $529
09817                           
09817 A9 1F                                     lda #$1F
09819 8D 2D 05                                  sta $52D
0981C                           
0981C A9 B4                                     lda #$B4
0981E 8D 31 05                                  sta $531
09821                           
09821 A9 B5                                     lda #$B5
09823 8D 35 05                                  sta $535
09826                           
09826 A9 B6                                     lda #$B6
09828 8D 39 05                                  sta $539
0982B                           
0982B A9 B7                                     lda #$B7
0982D 8D 3D 05                                  sta $53D
09830                           
09830                           
09830 60                                    rts
09831                           
09831                            load_proj3:
09831 A9 88                                     lda #$88
09833 8D 01 05                                  sta $501
09836                           
09836 A9 89                                     lda #$89
09838 8D 05 05                                  sta $505
0983B                           
0983B A9 8A                                     lda #$8A
0983D 8D 09 05                                  sta $509
09840                           
09840 A9 8B                                     lda #$8B
09842 8D 0D 05                                  sta $50D
09845                           
09845 A9 98                                     lda #$98
09847 8D 11 05                                  sta $511
0984A                           
0984A A9 99                                     lda #$99
0984C 8D 15 05                                  sta $515
0984F                           
0984F A9 9A                                     lda #$9A
09851 8D 19 05                                  sta $519
09854                           
09854 A9 9B                                     lda #$9B
09856 8D 1D 05                                  sta $51D
09859                           
09859 A9 A8                                     lda #$A8
0985B 8D 21 05                                  sta $521
0985E                           
0985E A9 A9                                     lda #$A9
09860 8D 25 05                                  sta $525
09863                           
09863 A9 AA                                     lda #$AA
09865 8D 29 05                                  sta $529
09868                           
09868 A9 AB                                     lda #$AB
0986A 8D 2D 05                                  sta $52D
0986D                           
0986D A9 B8                                     lda #$B8
0986F 8D 31 05                                  sta $531
09872                           
09872 A9 B9                                     lda #$B9
09874 8D 35 05                                  sta $535
09877                           
09877 A9 1F                                     lda #$1F
09879 8D 39 05                                  sta $539
0987C                           
0987C A9 1F                                     lda #$1F
0987E 8D 3D 05                                  sta $53D
09881                           
09881                           
09881 60                                        rts
09882                           
09882                           
09882                            load_proj4:
09882 A9 1F                                     lda #$1F
09884 8D 01 05                                  sta $501
09887                           
09887 A9 1F                                     lda #$1F
09889 8D 05 05                                  sta $505
0988C                           
0988C A9 8E                                     lda #$8E
0988E 8D 09 05                                  sta $509
09891                           
09891 A9 8F                                     lda #$8F
09893 8D 0D 05                                  sta $50D
09896                           
09896 A9 9C                                     lda #$9C
09898 8D 11 05                                  sta $511
0989B                           
0989B A9 9D                                     lda #$9D
0989D 8D 15 05                                  sta $515
098A0                           
098A0 A9 9E                                     lda #$9E
098A2 8D 19 05                                  sta $519
098A5                           
098A5 A9 9F                                     lda #$9F
098A7 8D 1D 05                                  sta $51D
098AA                           
098AA A9 AC                                     lda #$AC
098AC 8D 21 05                                  sta $521
098AF                           
098AF A9 AD                                     lda #$AD
098B1 8D 25 05                                  sta $525
098B4                           
098B4 A9 AE                                     lda #$AE
098B6 8D 29 05                                  sta $529
098B9                           
098B9 A9 AF                                     lda #$AF
098BB 8D 2D 05                                  sta $52D
098BE                           
098BE A9 BC                                     lda #$BC
098C0 8D 31 05                                  sta $531
098C3                           
098C3 A9 BD                                     lda #$BD
098C5 8D 35 05                                  sta $535
098C8                           
098C8 A9 BE                                     lda #$BE
098CA 8D 39 05                                  sta $539
098CD                           
098CD A9 BF                                     lda #$BF
098CF 8D 3D 05                                  sta $53D
098D2                           
098D2                           
098D2 60                                        rts
098D3                           
098D3                            trigger_proj1:
098D3                           
098D3 AD 49 01                         lda pro1
098D6 C9 01                            cmp #1
098D8 D0 30                            bne @gg66
098DA                           
098DA AD 5B 01                  lda level_change                ;;;;; to change the chr page for walking of hanuman with rock
098DD C9 02                     cmp #2
098DF D0 08                     bne @p1
098E1 A9 07                     LDA #$07                       ;;;;;; chr page with hanuman walking frames and rock
098E3 20 18 C2                  JSR setCHRPage1000
098E6 4C F2 98                  jmp @p4
098E9                           @p1:
098E9 C9 03                     cmp #3
098EB D0 05                     bne @p4
098ED A9 0B                     LDA #$0b
098EF 20 18 C2                  JSR setCHRPage1000
098F2                           @p4:
098F2 A5 BD                             LDA $bd
098F4 C9 0A                             CMP #10
098F6 F0 06                             BEQ @lvv1
098F8 E6 BD                             inc $bd
098FA                           
098FA 20 8F 97                          jsr load_proj1
098FD 60                                rts
098FE                           
098FE A9 00                        @lvv1:lda #0
09900 85 BD                            sta $bd
09902 8D 49 01                         sta pro1
09905                                 ; jsr load_proj1
09905 A9 01                            lda #1
09907 8D 44 01                         sta tri
0990A                           
0990A                                 ; sta pro2
0990A                           
0990A 60                        @gg66:     RTS
0990B                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0990B                            trigger_proj2:
0990B                           
0990B AD 4A 01                         lda pro2
0990E C9 01                            cmp #1
09910 D0 03                            bne @gg2
09912                           
09912 20 E0 97                          jsr load_proj2
09915 60                          @gg2:     RTS
09916                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
09916                           trigger_proj3:
09916                           
09916 AD 4B 01                         lda pro3
09919 C9 01                            cmp #1
0991B D0 18                            bne @gg3
0991D                           
0991D A5 BE                             LDA $be
0991F C9 2D                             CMP #45
09921 F0 06                             BEQ @lv3
09923 E6 BE                             inc $be
09925                           
09925 20 31 98                          jsr load_proj3
09928 60                                rts
09929                           
09929 A9 00                        @lv3:lda #0
0992B 85 BE                            sta $be
0992D 8D 4B 01                         sta pro3
09930 A9 01                            lda #1
09932 8D 4C 01                         sta pro4
09935                           
09935 60                          @gg3:     RTS
09936                            ;;;;;;;;;;;;;;;;;;;;;;;;;;
09936                            trigger_proj4:
09936                           
09936 AD 4C 01                         lda pro4
09939 C9 01                            cmp #1
0993B D0 16                            bne @gg4
0993D                           
0993D A5 BF                             LDA $bf
0993F C9 32                             CMP #50
09941 F0 06                             BEQ @lv4
09943 E6 BF                             inc $bf
09945                           
09945 20 82 98                          jsr load_proj4
09948 60                                rts
09949                           
09949 A9 00                        @lv4:lda #0
0994B 85 BF                            sta $bf
0994D 8D 4C 01                         sta pro4
09950                           
09950 20 34 82                         jsr walk_mov1
09953 60                          @gg4:     RTS
09954                           
09954                           
09954                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
09954                            ;     first rock level code
09954                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
09954                           Compare_0:
09954 AD 40 01                  lda var_new
09957 C9 01                     cmp #1
09959 F0 01                     beq @com_jmp
0995B 60                        rts
0995C                           @com_jmp:
0995C A5 29                     LDA $29
0995E C9 01                     cmp #1
09960 F0 13                     beq @c
09962 AC 12 01                  ldy pointer     ; it points to current letter that should be pressed by the user. pointer is a number. we will load the letter from library
09965 AE 0D 01                  ldx Current     ; this stores the current letter pressed by the user
09968 B9 D9 A4                  lda word_rock,y   ; load the expected letter into accumaltor
0996B CD 0D 01                  cmp Current  ;        compare with the currently pressed letter
0996E F0 06                     beq @Found              ; correct letter is pressed
09970 A9 00                     lda #0
09972 8D 0D 01                  sta Current
09975                           
09975                           @c:
09975 60                           RTS
09976                           
09976                           @Found:
09976 A9 00                              lda #0
09978 85 2C                              sta ps2
0997A 20 2D E3                           jsr arrow11
0997D A9 00                              lda #0
0997F 8D 0D 01                           sta Current
09982 A9 01                              lda #1
09984 8D 3B 01                           sta under
09987 EE 13 01                           inc wl                          ; this will increse the wl. So if "RO" are pressed then wl = 2 and if "C" is pressed then wl=3
0998A AE 13 01                           ldx wl                          ; is the current lenght of the letters pressed of a word
0998D                                                   ; level number. - how many words r completed for "ROCK" it is wordnum = 1
0998D AC 15 01                                          ldy wordnum
09990 B9 FD A4                                          lda NumberofLetters_rock,y           ; load the no.of letters in word. here for rock,it will load 4
09993 8D 1F 01                                          sta $11f
09996 EE 12 01                                          inc pointer                     ; increment pointer so now it points to the next correct letter
09999                           
09999                           
09999                           
09999                           
09999 A9 01                         LDA #$01
0999B 85 28                         STA $28
0999D 85 29                         STA $29
0999F 20 BC 8D                      jsr map
099A2 AC 15 01                      ldy wordnum
099A5 B9 FD A4                      lda NumberofLetters_rock,y
099A8 8D 1F 01                      sta $11f                          ; this loads that word 1 has how many letters . 4 will be loaded
099AB CD 13 01                      cmp wl                          ; compare with current lenght of the current word.
099AE F0 01                         BEQ @newword                     ; ie wordnum is 1. so lda will be 4. wl is 4 then new word
099B0 60                            RTS
099B1                           
099B1                           @newword:
099B1                           
099B1 A9 00                              lda #0
099B3 8D 13 01                           sta wl              ; now wl is reset to zero.
099B6 8D 40 01                           sta var_new
099B9 A9 01                              lda #1
099BB 8D 5C 01                           sta clearing_byte
099BE 85 52                              sta $52
099C0 60                                 RTS
099C1                           ;       -----------------------------------------------------
099C1                                   ;     hanuman hitting rock
099C1                           ;       -----------------------------------------------------
099C1                           
099C1                           ;       --------------------------------------------------------
099C1                           
099C1                           ;       -----------------------------------------------------------
099C1                           
099C1                           loading_letters_0:
099C1                           
099C1 AD 27 01                                  lda trigger
099C4 C9 01                                     cmp #1
099C6 F0 01                                     beq @start
099C8 60                                        rts
099C9                           
099C9                           @start:
099C9 AC 28 01                                  ldy wn
099CC                                           ;lda #%00000000             ;off the screen
099CC                                           ;sta $2001
099CC                           
099CC AD 02 20                                  LDA $2002             ; read PPU status to reset the high/low latch
099CF A9 23                                     LDA #$23
099D1 8D 06 20                                  STA $2006             ; write the high byte of $2000 address
099D4 A9 6C                                     LDA #$6c
099D6 8D 06 20                                  STA $2006
099D9                           
099D9                                                       ; write the low byte of $2000 address
099D9                           @start1:
099D9 AE 29 01                                  ldx total_letters
099DC BD D9 A4                                  lda word_rock,x
099DF 8D 07 20                                  sta $2007             ;we are stoaring a character in address 0595+y
099E2 EE 2B 01                                  inc ttempx
099E5 EE 29 01                                  inc total_letters
099E8 B9 FD A4                                  lda NumberofLetters_rock,y  ;loading length of the word in accumulator
099EB CD 2B 01                                  cmp ttempx                ;comparing the value of x with the value stored in accumulator
099EE D0 E9                                     bne @start1
099F0                           
099F0 AD 04 01                                  lda PPUCRTL
099F3 8D 00 20                        sta $2000
099F6 A5 A3                           lda $A3
099F8 8D 05 20                        sta $2005
099FB A5 A4                           lda $A4
099FD 8D 05 20                        sta $2005
09A00 8D 2B 01                                  sta ttempx
09A03 8D 27 01                                  sta trigger
09A06                           
09A06 60                                        RTS
09A07                           
09A07                           ;       -----------------------------------------------------
09A07                                   ;     hanuman hitting soldier
09A07                           ;       -----------------------------------------------------
09A07                           Compare_1:
09A07 AD 40 01                  lda var_new
09A0A C9 01                     cmp #1
09A0C F0 01                     beq @com_jmp
09A0E 60                        rts
09A0F                           @com_jmp:
09A0F A5 29                     LDA $29
09A11 C9 01                     cmp #1
09A13 F0 13                     beq @c
09A15 AC 12 01                  ldy pointer     ; it points to current letter that should be pressed by the user. pointer is a number. we will load the letter from library
09A18 AE 0D 01                  ldx Current     ; this stores the current letter pressed by the user
09A1B B9 05 A5                  lda word_soldier,y   ; load the expected letter into accumaltor
09A1E CD 0D 01                  cmp Current  ;        compare with the currently pressed letter
09A21 F0 06                     beq @Found              ; correct letter is pressed
09A23 A9 00                     lda #0
09A25 8D 0D 01                  sta Current
09A28                           
09A28                           @c:
09A28 60                           RTS
09A29                           
09A29                           @Found:
09A29 A9 00                              lda #0
09A2B 85 2C                              sta ps2
09A2D 20 2D E3                           jsr arrow11
09A30 A9 00                              lda #0
09A32 8D 0D 01                           sta Current
09A35 A9 01                              lda #1
09A37 8D 3B 01                           sta under
09A3A EE 13 01                           inc wl                          ; this will increse the wl. So if "RO" are pressed then wl = 2 and if "C" is pressed then wl=3
09A3D AE 13 01                           ldx wl                          ; is the current lenght of the letters pressed of a word
09A40                                                   ; level number. - how many words r completed for "ROCK" it is wordnum = 1
09A40 AC 15 01                                          ldy wordnum
09A43 B9 2C A5                                          lda NumberofLetters_soldier,y           ; load the no.of letters in word. here for rock,it will load 4
09A46 8D 1F 01                                          sta $11f
09A49 EE 12 01                                          inc pointer                     ; increment pointer so now it points to the next correct letter
09A4C                           
09A4C                           
09A4C                           
09A4C                           
09A4C A9 01                         LDA #$01
09A4E 85 28                         STA $28
09A50 85 29                         STA $29
09A52 20 BC 8D                      jsr map
09A55 AC 15 01                      ldy wordnum
09A58 B9 2C A5                      lda NumberofLetters_soldier,y
09A5B 8D 1F 01                      sta $11f                          ; this loads that word 1 has how many letters . 4 will be loaded
09A5E CD 13 01                      cmp wl                          ; compare with current lenght of the current word.
09A61 F0 01                         BEQ @newword                     ; ie wordnum is 1. so lda will be 4. wl is 4 then new word
09A63 60                            RTS
09A64                           
09A64                           @newword:
09A64                           
09A64 A9 00                              lda #0
09A66 8D 13 01                           sta wl              ; now wl is reset to zero.
09A69 8D 40 01                           sta var_new
09A6C A9 01                              lda #1
09A6E 8D 5C 01                           sta clearing_byte
09A71 85 52                              sta $52
09A73 60                                 RTS
09A74                           ;       -----------------------------------------------------
09A74                                   ;     hanuman hitting soldier
09A74                           ;       -----------------------------------------------------
09A74                           
09A74                           ;       --------------------------------------------------------
09A74                           
09A74                           ;       -----------------------------------------------------------
09A74                           
09A74                           loading_letters_1:
09A74                           
09A74 AD 27 01                                  lda trigger
09A77 C9 01                                     cmp #1
09A79 F0 01                                     beq @start
09A7B 60                                        rts
09A7C                           
09A7C                           @start:
09A7C AC 28 01                                  ldy wn
09A7F                                           ;lda #%00000000             ;off the screen
09A7F                                           ;sta $2001
09A7F                           
09A7F AD 02 20                                  LDA $2002             ; read PPU status to reset the high/low latch
09A82 A9 23                                     LDA #$23
09A84 8D 06 20                                  STA $2006             ; write the high byte of $2000 address
09A87 A9 6C                                     LDA #$6c
09A89 8D 06 20                                  STA $2006
09A8C                           
09A8C                                                       ; write the low byte of $2000 address
09A8C                           @start1:
09A8C AE 29 01                                  ldx total_letters
09A8F BD 05 A5                                  lda word_soldier,x
09A92 8D 07 20                                  sta $2007             ;we are stoaring a character in address 0595+y
09A95 EE 2B 01                                  inc ttempx
09A98 EE 29 01                                  inc total_letters
09A9B B9 2C A5                                  lda NumberofLetters_soldier,y  ;loading length of the word in accumulator
09A9E CD 2B 01                                  cmp ttempx                ;comparing the value of x with the value stored in accumulator
09AA1 D0 E9                                     bne @start1
09AA3                           
09AA3 AD 04 01                                  lda PPUCRTL
09AA6 8D 00 20                        sta $2000
09AA9 A5 A3                           lda $A3
09AAB 8D 05 20                        sta $2005
09AAE A5 A4                           lda $A4
09AB0 8D 05 20                        sta $2005
09AB3 8D 2B 01                                  sta ttempx
09AB6 8D 27 01                                  sta trigger
09AB9                           
09AB9 60                                        RTS
09ABA                           
09ABA                           
09ABA                           ;       ---------------------------------------------------------
09ABA                           ;;;;;   -------------------------------------------------------------
09ABA                           ;;;     Code for snow monster
09ABA                           ;;;;;   -------------------------------------------------------------
09ABA                           
09ABA                           Compare1_3:
09ABA AD 40 01                  lda var_new
09ABD C9 01                     cmp #1
09ABF F0 01                     beq @com_jmp
09AC1 60                        rts
09AC2                           @com_jmp:
09AC2 A5 29                     LDA $29
09AC4 C9 01                     cmp #1
09AC6 F0 13                     beq @c
09AC8 AC 12 01                  ldy pointer     ; it points to current letter that should be pressed by the user. pointer is a number. we will load the letter from library
09ACB AE 0D 01                  ldx Current     ; this stores the current letter pressed by the user
09ACE B9 34 A5                  lda word_snow,y   ; load the expected letter into accumaltor
09AD1 CD 0D 01                  cmp Current  ;        compare with the currently pressed letter
09AD4 F0 06                     beq @Found              ; correct letter is pressed
09AD6 A9 00                     lda #0
09AD8 8D 0D 01                  sta Current
09ADB                           ;bne c                ; incorrect is pressed
09ADB 60                        @c:RTS
09ADC                           
09ADC                           @Found:
09ADC                            ;;;;;;;;
09ADC A9 00                              lda #0
09ADE 85 2C                              sta ps2
09AE0 20 2D E3                           jsr arrow11
09AE3 A9 00                              lda #0
09AE5 8D 0D 01                           sta Current
09AE8 A9 01                        lda #1
09AEA 8D 3B 01                     sta under
09AED EE 13 01                     inc wl                          ; this will increse the wl. So if "RO" are pressed then wl = 2 and if "C" is pressed then wl=3
09AF0 AE 13 01                     ldx wl                          ; is the current lenght of the letters pressed of a word
09AF3                                                   ; level number. - how many words r completed for "ROCK" it is wordnum = 1
09AF3 AC 15 01                     ldy wordnum
09AF6 B9 77 A5                     lda NumberofLetters_snow,y           ; load the no.of letters in word. here for rock,it will load 4
09AF9 8D 1F 01                     sta $11f
09AFC EE 12 01                     inc pointer                     ; increment pointer so now it points to the next correct letter
09AFF                           
09AFF                           
09AFF A9 01                         LDA #$01
09B01 85 28                         STA $28
09B03                           
09B03 85 29                         STA $29
09B05 20 BC 8D                      jsr map
09B08 AC 15 01                      ldy wordnum
09B0B B9 77 A5                      lda NumberofLetters_snow,y
09B0E 8D 1F 01                      sta $11f                          ; this loads that word 1 has how many letters . 4 will be loaded
09B11 CD 13 01                      cmp wl                          ; compare with current lenght of the current word.
09B14 F0 01                         BEQ @newword                     ; ie wordnum is 1. so lda will be 4. wl is 4 then new word
09B16                           
09B16                           
09B16                           
09B16 60                            RTS
09B17                           
09B17                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
09B17                           @newword:
09B17                                   ;  LDA #$01
09B17                                   ;  STA k
09B17                                   ;  sta key
09B17                                   ;  LDA #$05
09B17                                   ;  sta hitrock             ; new word has been encountered. hence now the rock will break and scrolling will start
09B17                                    ; LDA #10
09B17                                    ; STA scroll_status
09B17                           
09B17                           
09B17 A9 00                              lda #0
09B19                                    ;sta lower_byte
09B19 8D 13 01                           sta wl              ; now wl is reset to zero. wl keeps the no. of letters pressed by user for current word
09B1C 8D 3A 01                           sta delay_cal_quiz
09B1F 8D 01 02                           sta trig_static
09B22                                    ;sta var1
09B22 8D 40 01                           sta var_new
09B25                                    ;inc wordnum         ; so we have gone to next level. hence next word
09B25 A9 01                              lda #1
09B27 8D 37 01                           sta var01
09B2A                           
09B2A 8D 39 01                           sta trig_delay
09B2D 8D 5C 01                           sta clearing_byte
09B30                                    ;jsr mon_1
09B30 60                                 RTS
09B31                           
09B31                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
09B31                           Compare2_3:
09B31 AD 37 01                           LDA var01
09B34 C9 01                              cmp #$01
09B36 F0 01                              beq @c0
09B38 60                                 rts
09B39                           @c0:
09B39 AC 38 01                           ldy pointer0     ; it points to current letter that should be pressed by the user. pointer is a number. we will load the letter from library
09B3C AE 0D 01                           ldx Current     ; this stores the current letter pressed by the user
09B3F B9 86 A5                           lda word_snow2,y   ; load the expected letter into accumaltor
09B42 CD 0D 01                           cmp Current  ;        compare with the currently pressed letter
09B45 F0 06                              beq @Found0              ; correct letter is pressed
09B47 A9 00                              lda #0
09B49 8D 0D 01                           sta Current
09B4C                           
09B4C 60                                 RTS
09B4D                           @Found0:
09B4D A9 00                            lda #0
09B4F 8D 0D 01                         sta Current
09B52                                  
09B52 A9 01                            LDA #$01
09B54 85 52                            STA $52
09B56                                  ;LDA #$03
09B56                                  ;JSR setCHRPage1000
09B56 EE 13 01                         inc wl                          ; this will increse the wl. So if "RO" are pressed then wl = 2 and if "C" is pressed then wl=3
09B59 AE 13 01                         ldx wl                          ; is the current lenght of the letters pressed of a word
09B5C                                                      ; level number. - how many words r completed for "ROCK" it is wordnum = 1
09B5C                                  ;lda NumberofLetters1,y           ; load the no.of letters in word. here for rock,it will load 4
09B5C                                  ;sta ww
09B5C EE 38 01                         inc pointer0                     ; increment pointer so now it points to the next correct letter
09B5F A9 00                            lda #0
09B61 8D 3A 01                         sta delay_cal_quiz
09B64                           
09B64                           
09B64                           
09B64                              ;jump walking code
09B64                               ;lda $05
09B64                               ;sta walk
09B64                              ;JMP cont
09B64                           
09B64 A9 01                         LDA #$01
09B66 8D 3E 01                      sta under1
09B69                               ;STA varX
09B69 A9 00                         lda #0
09B6B 85 29                         STA $29
09B6D                               ;jsr map
09B6D AC 15 01                      ldy wordnum
09B70 B9 C9 A5                      lda NumberofLetters1_snow2,y
09B73                               ;sta ww                          ; this loads that word 1 has how many letters . 4 will be loaded
09B73 CD 13 01                      cmp wl                          ; compare with current lenght of the current word.
09B76 F0 01                         BEQ @newword0                     ; ie wordnum is 1. so lda will be 4. wl is 4 then new word
09B78                           
09B78                           
09B78                           
09B78 60                            RTS
09B79                           
09B79                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
09B79                           @newword0:
09B79 A9 01                               LDA #$01
09B7B 85 52                               STA $52
09B7D 8D 52 01                            sta mx
09B80                                    ; sta key
09B80 A9 05                               LDA #$05
09B82 8D 0F 01                            sta $10f             ; new word has been encountered. hence now the rock will break and scrolling will start
09B85                           
09B85                           
09B85                           
09B85 A9 00                              lda #0
09B87 8D 13 01                           sta wl              ; now wl is reset to zero. wl keeps the no. of letters pressed by user for current word
09B8A 8D 37 01                           sta var01
09B8D 8D 39 01                           sta trig_delay
09B90                                    ;sta lower_byte
09B90                                    ;inc wordnum         ; so we have gone to next level. hence next word
09B90                                    ;lda #1
09B90                                    ;sta trigger2
09B90 60                                 RTS
09B91                           
09B91                           ;       -------------------------------------------------------------
09B91                           
09B91                           ;        ----------------------------------------------------------
09B91                           
09B91                           ;        -------------------------------------------------------------
09B91                           
09B91                           loading_letters_3:
09B91                           
09B91 AD 27 01                                  lda trigger
09B94 C9 01                                     cmp #1
09B96 F0 01                                     beq @start
09B98 60                                        rts
09B99                           
09B99                           @start:
09B99 AC 28 01                                  ldy wn
09B9C                                           ;lda #%00000000             ;off the screen
09B9C                                           ;sta $2001
09B9C                           
09B9C AD 02 20                                  LDA $2002             ; read PPU status to reset the high/low latch
09B9F A9 23                                     LDA #$23
09BA1 8D 06 20                                  STA $2006             ; write the high byte of $2000 address
09BA4 A9 6C                                     LDA #$6c
09BA6 8D 06 20                                  STA $2006
09BA9                           
09BA9                                                       ; write the low byte of $2000 address
09BA9                           @start1:
09BA9 AE 29 01                                  ldx total_letters
09BAC BD 34 A5                                  lda word_snow,x
09BAF 8D 07 20                                  sta $2007             ;we are stoaring a character in address 0595+y
09BB2 EE 2B 01                                  inc ttempx
09BB5 EE 29 01                                  inc total_letters
09BB8 B9 77 A5                                  lda NumberofLetters_snow,y  ;loading length of the word in accumulator
09BBB CD 2B 01                                  cmp ttempx                ;comparing the value of x with the value stored in accumulator
09BBE D0 E9                                     bne @start1
09BC0                           
09BC0                                           ;lda #%00011110
09BC0                                           ;sta $2001
09BC0 AD 04 01                                  lda PPUCRTL
09BC3 8D 00 20                        sta $2000
09BC6 A5 A3                           lda $A3
09BC8 8D 05 20                        sta $2005
09BCB A5 A4                           lda $A4
09BCD 8D 05 20                        sta $2005
09BD0 8D 2B 01                                  sta ttempx
09BD3 8D 27 01                                  sta trigger
09BD6 A9 01                                     lda #1
09BD8 8D 35 01                                  sta trigger0
09BDB                           
09BDB 60                                        RTS
09BDC                           
09BDC                           ;       ----------------------------------------------------
09BDC                           loading_letters2_3:
09BDC AD 35 01                                   lda trigger0
09BDF C9 01                                      cmp #1
09BE1 F0 01                                      beq @start0
09BE3 60                                         rts
09BE4                           
09BE4                           @start0:
09BE4 AC 28 01                                  ldy wn
09BE7                                           ;lda #%00000000             ;off the screen
09BE7                                           ;sta $2001
09BE7                           
09BE7 AD 02 20                                  LDA $2002             ; read PPU status to reset the high/low latch
09BEA A9 23                                     LDA #$23
09BEC 8D 06 20                                  STA $2006             ; write the high byte of $2000 address
09BEF A9 74                                     LDA #$74
09BF1 8D 06 20                                  STA $2006
09BF4                           
09BF4                                                       ; write the low byte of $2000 address
09BF4                           @start01:
09BF4 AE 36 01                                  ldx total_letters0
09BF7 BD 86 A5                                  lda word_snow2,x
09BFA 8D 07 20                                  sta $2007             ;we are stoaring a character in address 0595+y
09BFD EE 2B 01                                  inc ttempx
09C00 EE 36 01                                  inc total_letters0
09C03 B9 C9 A5                                  lda NumberofLetters1_snow2,y  ;loading length of the word in accumulator
09C06 CD 2B 01                                  cmp ttempx                ;comparing the value of x with the value stored in accumulator
09C09 D0 E9                                     bne @start01
09C0B                           
09C0B                                           ;lda #%00011110
09C0B                                           ;sta $2001
09C0B AD 04 01                                  lda PPUCRTL
09C0E 8D 00 20                        sta $2000
09C11 A5 A3                           lda $A3
09C13 8D 05 20                        sta $2005
09C16 A5 A4                           lda $A4
09C18 8D 05 20                        sta $2005
09C1B 8D 2B 01                                  sta ttempx
09C1E 8D 35 01                                  sta trigger0
09C21                           
09C21 60                                        RTS
09C22                           ;
09C22                           clear_rock:
09C22                           
09C22 A9 05                           lda #$05
09C24 8D 0F 01                        sta $10f
09C27 A9 01                           lda #1
09C29 8D 91 01                        sta blastrock
09C2C 60                              rts
09C2D                           ;      -------------------------------------------------------------------
09C2D                           clear_snow:
09C2D A9 1F                                lda #$1F
09C2F A2 00                                ldx #0
09C31                           @loop:
09C31 9D 41 05                         sta $541,x
09C34 E8                               inx
09C35 E8                               inx
09C36 E8                               inx
09C37 E8                               inx
09C38 E0 C8                            cpx #200
09C3A D0 F5                            bne @loop
09C3C 60                               rts
09C3D                           ;      -----------------------------------------------------
09C3D                           ClearSprites111:
09C3D A9 00                                     lda #0
09C3F 8D 0C 01                                  sta color1
09C42                                           ;lda #9
09C42                                           ;sta cs
09C42 9D 00 05                        STA $500, x
09C45 E8                              INX
09C46 D0 F5                           BNE ClearSprites111
09C48 60                              rts
09C49                           
09C49                           
09C49                           loading_snake:
09C49 A9 00                             lda #$00
09C4B                                  ; sta color
09C4B 8D 1A 01                          sta $11a
09C4E 85 DD                             sta sp1
09C50                           
09C50 20 3D 9C                  jsr ClearSprites111
09C53                           
09C53                           LoadSprites111:
09C53 A2 00                           LDX #$00
09C55 A0 00                           LDY #$00
09C57                           
09C57                              LoadSpritesLoop111:
09C57 BD E8 A6                       LDA sprites_snake,x            ; load data from address (sprites + x)
09C5A 9D 40 05                       STA $0540,x              ; store into RAM address ($0200 + x)
09C5D E8                             INX                       ; X = X + 1
09C5E E0 40                          CPX #64
09C60                                                   ; Compare X to # of values (divide by 4 for total # of sprites)
09C60 D0 F5                          BNE LoadSpritesLoop111       ; Branch to LoadSpritesLoop if compare was Not Equal to zero
09C62 20 66 9C                       jsr load_hanuman
09C65                                                          ; if compare was equal to 32, keep going down
09C65 60                             RTS
09C66                                ;       ----------------------------------------------------
09C66                           load_hanuman:
09C66                           
09C66 A2 00                           LDX #$00
09C68 A0 00                           LDY #$00
09C6A                           
09C6A                              @LoadSpritesLoop111:
09C6A BD D8 A5                       LDA hanuman_sprites,x            ; load data from address (sprites + x)
09C6D 9D 00 05                       STA $0500,x              ; store into RAM address ($0200 + x)
09C70 E8                             INX                       ; X = X + 1
09C71 E0 40                          CPX #64
09C73                                                   ; Compare X to # of values (divide by 4 for total # of sprites)
09C73 D0 F5                          BNE @LoadSpritesLoop111       ; Branch to LoadSpritesLoop if compare was Not Equal to zero
09C75 60                             rts
09C76                                ;       -----------------------------------------------------
09C76                           loading_rock:
09C76 A9 00                             lda #$00
09C78                                  ; sta color
09C78 8D 1A 01                          sta $11a
09C7B 85 DD                             sta sp1
09C7D                           
09C7D 20 3D 9C                  jsr ClearSprites111
09C80                           
09C80                           @LoadSprites111:
09C80 A2 00                           LDX #$00
09C82 A0 00                           LDY #$00
09C84                           
09C84                              @LoadSpritesLoop111:
09C84 BD 18 A6                       LDA sprites_rock,x            ; load data from address (sprites + x)
09C87 9D 40 05                       STA $0540,x              ; store into RAM address ($0200 + x)
09C8A E8                             INX                       ; X = X + 1
09C8B E0 5C                          CPX #92
09C8D                                                   ; Compare X to # of values (divide by 4 for total # of sprites)
09C8D D0 F5                          BNE @LoadSpritesLoop111       ; Branch to LoadSpritesLoop if compare was Not Equal to zero
09C8F                           
09C8F 20 66 9C                       jsr load_hanuman
09C92                           
09C92                                                          ; if compare was equal to 32, keep going down
09C92 60                             RTS
09C93                                ;       ------------------------------------------------------
09C93                           loading_soldier:
09C93 A9 00                             lda #$00
09C95                                  ; sta color
09C95 8D 1A 01                          sta $11a
09C98 85 DD                             sta sp1
09C9A                           
09C9A 20 3D 9C                  jsr ClearSprites111
09C9D                           
09C9D                           @LoadSprites111:
09C9D A2 00                           LDX #$00
09C9F A0 00                           LDY #$00
09CA1                           
09CA1                              @LoadSpritesLoop111:
09CA1 BD 74 A6                       LDA sprites_soldier,x            ; load data from address (sprites + x)
09CA4 9D 40 05                       STA $0540,x              ; store into RAM address ($0200 + x)
09CA7 E8                             INX                       ; X = X + 1
09CA8 E0 74                          CPX #116
09CAA                                                   ; Compare X to # of values (divide by 4 for total # of sprites)
09CAA D0 F5                          BNE @LoadSpritesLoop111       ; Branch to LoadSpritesLoop if compare was Not Equal to zero
09CAC 20 66 9C                       jsr load_hanuman
09CAF                                                          ; if compare was equal to 32, keep going down
09CAF 60                             RTS
09CB0                                ;       -----------------------------------------------------
09CB0                           loading_snow:
09CB0 A9 00                             lda #$00
09CB2                                  ; sta color
09CB2 8D 1A 01                          sta $11a
09CB5 85 DD                             sta sp1
09CB7                           
09CB7 20 3D 9C                  jsr ClearSprites111
09CBA                           
09CBA                           @LoadSprites111:
09CBA A2 00                           LDX #$00
09CBC A0 00                           LDY #$00
09CBE                           
09CBE                              @LoadSpritesLoop111:
09CBE BD 38 A7                       LDA sprites_snow,x            ; load data from address (sprites + x)
09CC1 9D 40 05                       STA $0540,x              ; store into RAM address ($0200 + x)
09CC4 E8                             INX                       ; X = X + 1
09CC5 E0 40                          CPX #64
09CC7                                                   ; Compare X to # of values (divide by 4 for total # of sprites)
09CC7 D0 F5                          BNE @LoadSpritesLoop111       ; Branch to LoadSpritesLoop if compare was Not Equal to zero
09CC9 20 66 9C                       jsr load_hanuman
09CCC                                                          ; if compare was equal to 32, keep going down
09CCC 60                             RTS
09CCD                           ;    ----------------------------------------------------------------------------------------
09CCD                           snow_monster_static:
09CCD                           
09CCD AD 01 02                              lda trig_static
09CD0 C9 01                                 cmp #1
09CD2 D0 27                                 bne @bhk
09CD4                           
09CD4 EE 60 01                             INC $160
09CD7 AD 60 01                             lda $160
09CDA C9 0C                                CMP #12
09CDC D0 1D                                BNE @bhk
09CDE A9 00                                LDA #$00
09CE0 8D 60 01                             STA $160
09CE3                           
09CE3 AD 02 02                              lda bh
09CE6 C9 00                                 cmp #0
09CE8 D0 09                                 bne @hb1
09CEA 20 FC 9C                              jsr load_snow1
09CED A9 01                                 lda #1
09CEF 8D 02 02                              sta bh
09CF2 60                                    rts
09CF3                           
09CF3 20 EF 9D                      @hb1:   jsr load_snow4
09CF6 A9 00                                 lda #0
09CF8 8D 02 02                              sta bh
09CFB 60                           @bhk:     rts
09CFC                           ;    -----------------------------------------------------------------------------------------
09CFC                           load_snow1:
09CFC                           
09CFC A9 1F                            lda #$1f
09CFE 8D 41 05                         sta $541
09D01                           
09D01 A9 C3                            lda #$c3
09D03 8D 45 05                         sta $545
09D06                           
09D06 A9 C4                            lda #$c4
09D08 8D 49 05                         sta $549
09D0B                           
09D0B A9 C5                            lda #$c5
09D0D 8D 4D 05                         sta $54D
09D10                           
09D10 A9 1F                            lda #$1f
09D12 8D 51 05                         sta $551
09D15                           
09D15 A9 D3                            lda #$D3
09D17 8D 55 05                         sta $555
09D1A                           
09D1A A9 D4                            lda #$d4
09D1C 8D 59 05                         sta $559
09D1F                           
09D1F A9 D5                            lda #$d5
09D21 8D 5D 05                         sta $55D
09D24                           
09D24 A9 1F                            lda #$1f
09D26 8D 61 05                         sta $561
09D29                           
09D29 A9 E3                            lda #$E3
09D2B 8D 65 05                         sta $565
09D2E                           
09D2E A9 E4                            lda #$E4
09D30 8D 69 05                         sta $569
09D33                           
09D33 A9 E5                            lda #$e5
09D35 8D 6D 05                         sta $56D
09D38                           
09D38 A9 1F                            lda #$1f
09D3A 8D 71 05                         sta $571
09D3D                           
09D3D A9 F3                            lda #$F3
09D3F 8D 75 05                         sta $575
09D42                           
09D42 A9 F4                            lda #$F4
09D44 8D 79 05                         sta $579
09D47                           
09D47 A9 F5                            lda #$f5
09D49 8D 7D 05                         sta $57D
09D4C                           
09D4C 60                               rts
09D4D                           
09D4D                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ch4
09D4D                            load_snow2:
09D4D                           
09D4D A9 1F                            lda #$1f
09D4F 8D 41 05                         sta $541
09D52                           
09D52 A9 C6                            lda #$C6
09D54 8D 45 05                         sta $545
09D57                           
09D57 A9 C7                            lda #$C7
09D59 8D 49 05                         sta $549
09D5C                           
09D5C A9 C8                            lda #$c8
09D5E 8D 4D 05                         sta $54D
09D61                           
09D61 A9 1F                            lda #$1f
09D63 8D 51 05                         sta $551
09D66                           
09D66 A9 D6                            lda #$D6
09D68 8D 55 05                         sta $555
09D6B                           
09D6B A9 D7                            lda #$D7
09D6D 8D 59 05                         sta $559
09D70                           
09D70 A9 D8                            lda #$d8
09D72 8D 5D 05                         sta $55D
09D75                           
09D75 A9 1F                            lda #$1f
09D77 8D 61 05                         sta $561
09D7A                           
09D7A A9 E6                            lda #$E6
09D7C 8D 65 05                         sta $565
09D7F                           
09D7F A9 E7                            lda #$E7
09D81 8D 69 05                         sta $569
09D84                           
09D84 A9 E8                            lda #$e8
09D86 8D 6D 05                         sta $56D
09D89                           
09D89 A9 1F                            lda #$1f
09D8B 8D 71 05                         sta $571
09D8E                           
09D8E A9 F6                            lda #$F6
09D90 8D 75 05                         sta $575
09D93                           
09D93 A9 F7                            lda #$F7
09D95 8D 79 05                         sta $579
09D98                           
09D98 A9 F8                            lda #$f8
09D9A 8D 7D 05                         sta $57D
09D9D                           
09D9D 60                               rts
09D9E                           
09D9E                           
09D9E                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ch2
09D9E                             load_snow3:
09D9E                           
09D9E A9 C9                            lda #$c9
09DA0 8D 41 05                         sta $541
09DA3                           
09DA3 A9 CA                            lda #$Ca
09DA5 8D 45 05                         sta $545
09DA8                           
09DA8 A9 CB                            lda #$Cb
09DAA 8D 49 05                         sta $549
09DAD                           
09DAD A9 CC                            lda #$Cc
09DAF 8D 4D 05                         sta $54D
09DB2                           
09DB2 A9 D9                            lda #$d9
09DB4 8D 51 05                         sta $551
09DB7                           
09DB7 A9 DA                            lda #$Da
09DB9 8D 55 05                         sta $555
09DBC                           
09DBC A9 DB                            lda #$Db
09DBE 8D 59 05                         sta $559
09DC1                           
09DC1 A9 DC                            lda #$Dc
09DC3 8D 5D 05                         sta $55D
09DC6                           
09DC6 A9 E9                            lda #$E9
09DC8 8D 61 05                         sta $561
09DCB                           
09DCB A9 EA                            lda #$Ea
09DCD 8D 65 05                         sta $565
09DD0                           
09DD0 A9 EB                            lda #$Eb
09DD2 8D 69 05                         sta $569
09DD5                           
09DD5 A9 EC                            lda #$Ec
09DD7 8D 6D 05                         sta $56D
09DDA                           
09DDA A9 F9                            lda #$F9
09DDC 8D 71 05                         sta $571
09DDF                           
09DDF A9 FA                            lda #$Fa
09DE1 8D 75 05                         sta $575
09DE4                           
09DE4 A9 FB                            lda #$Fb
09DE6 8D 79 05                         sta $579
09DE9                           
09DE9 A9 FC                            lda #$Fc
09DEB 8D 7D 05                         sta $57D
09DEE                           
09DEE 60                               rts
09DEF                           
09DEF                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ch1
09DEF                            load_snow4:
09DEF                           
09DEF A9 1F                            lda #$1f
09DF1 8D 41 05                         sta $541
09DF4                           
09DF4 A9 CD                            lda #$Cd
09DF6 8D 45 05                         sta $545
09DF9                           
09DF9 A9 CE                            lda #$Ce
09DFB 8D 49 05                         sta $549
09DFE                           
09DFE A9 CF                            lda #$cf
09E00 8D 4D 05                         sta $54D
09E03                           
09E03 A9 1F                            lda #$1f
09E05 8D 51 05                         sta $551
09E08                           
09E08 A9 DD                            lda #$dd
09E0A 8D 55 05                         sta $555
09E0D                           
09E0D A9 DE                            lda #$De
09E0F 8D 59 05                         sta $559
09E12                           
09E12 A9 DF                            lda #$df
09E14 8D 5D 05                         sta $55D
09E17                           
09E17 A9 1F                            lda #$1f
09E19 8D 61 05                         sta $561
09E1C                           
09E1C A9 ED                            lda #$ed
09E1E 8D 65 05                         sta $565
09E21                           
09E21 A9 EE                            lda #$ee
09E23 8D 69 05                         sta $569
09E26                           
09E26 A9 EF                            lda #$eF
09E28 8D 6D 05                         sta $56D
09E2B                           
09E2B A9 1F                            lda #$1f
09E2D 8D 71 05                         sta $571
09E30                           
09E30 A9 FD                            lda #$fd
09E32 8D 75 05                         sta $575
09E35                           
09E35 A9 FE                            lda #$fe
09E37 8D 79 05                         sta $579
09E3A                           
09E3A A9 FF                            lda #$ff
09E3C 8D 7D 05                         sta $57D
09E3F                           
09E3F 60                               rts
09E40                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
09E40                           load_snow5:
09E40                           
09E40 A9 8C                            lda #$8c
09E42 8D 41 05                         sta $541
09E45                           
09E45 A9 8D                            lda #$8d
09E47 8D 45 05                         sta $545
09E4A                           
09E4A A9 8E                            lda #$8e
09E4C 8D 49 05                         sta $549
09E4F                           
09E4F A9 8F                            lda #$8f
09E51 8D 4D 05                         sta $54D
09E54                           
09E54 A9 9C                            lda #$9c
09E56 8D 51 05                         sta $551
09E59                           
09E59 A9 9D                            lda #$9D
09E5B 8D 55 05                         sta $555
09E5E                           
09E5E A9 9E                            lda #$9E
09E60 8D 59 05                         sta $559
09E63                           
09E63 A9 9F                            lda #$9F
09E65 8D 5D 05                         sta $55D
09E68                           
09E68 A9 AC                            lda #$AC
09E6A 8D 61 05                         sta $561
09E6D                           
09E6D A9 AD                            lda #$AD
09E6F 8D 65 05                         sta $565
09E72                           
09E72 A9 AE                            lda #$AE
09E74 8D 69 05                         sta $569
09E77                           
09E77 A9 AF                            lda #$AF
09E79 8D 6D 05                         sta $56D
09E7C                           
09E7C A9 BC                            lda #$BC
09E7E 8D 71 05                         sta $571
09E81                           
09E81 A9 BD                            lda #$BD
09E83 8D 75 05                         sta $575
09E86                           
09E86 A9 BE                            lda #$BE
09E88 8D 79 05                         sta $579
09E8B                           
09E8B A9 BF                            lda #$BF
09E8D 8D 7D 05                         sta $57D
09E90                           
09E90 60                               rts
09E91                           ;;;    -------------------------------------------------------------------
09E91                           snow_monster_hit:
09E91                           
09E91 A5 18                                 lda trig_hit
09E93 C9 01                                 cmp #1
09E95 D0 2F                                 bne bhk1
09E97                           
09E97 20 3D 85                             jsr load_a1
09E9A EE 04 02                             INC varB1
09E9D AD 04 02                             lda varB1
09EA0 C9 05                                CMP #5
09EA2 D0 22                                BNE bhk1
09EA4 A9 00                                LDA #$00
09EA6 8D 04 02                             STA varB1
09EA9                           
09EA9 E6 17                                inc be1
09EAB                           
09EAB                           
09EAB A5 D3                                 lda bh1
09EAD C9 00                                 cmp #0
09EAF D0 08                                 bne hb2
09EB1 20 4D 9D                              jsr load_snow2
09EB4 A9 01                                 lda #1
09EB6 85 D3                                 sta bh1
09EB8                           
09EB8 60                                    rts
09EB9                           
09EB9 20 9E 9D                      hb2:   jsr load_snow3
09EBC A9 00                                 lda #0
09EBE 85 D3                                 sta bh1
09EC0 A5 17                                 lda be1
09EC2 C9 0C                                 cmp #12
09EC4 F0 01                                 beq omg1
09EC6 60                           bhk1:     rts
09EC7                           
09EC7 20 FC 9C                     omg1:  jsr load_snow1
09ECA A9 00                               lda #0
09ECC 85 18                               sta trig_hit
09ECE 85 17                               sta be1
09ED0 A9 01                               lda #1
09ED2 8D 49 01                            sta pro1
09ED5 8D 58 01                            sta hanu_pal
09ED8 60                                  rts
09ED9                           ;         ------------------------------------------------
09ED9                           update2:
09ED9                           
09ED9 A5 6D                     	lda trig_sol
09EDB C9 01                     	cmp #1
09EDD D0 3C                     	bne @sk3
09EDF                           
09EDF E6 6B                     	  INC varS
09EE1 A5 6B                               lda varS
09EE3 C9 0C                                CMP #12
09EE5 D0 34                                BNE @sk3
09EE7 A9 00                                LDA #0
09EE9 85 6B                                STA varS
09EEB                           
09EEB                           
09EEB A5 6C                      @sk :lda var_sol
09EED C9 00                          cmp #0
09EEF D0 0C                          bne @sk1
09EF1 20 1C 9F                       jsr sol_mov1
09EF4 A9 C8                          lda #200
09EF6 85 6B                          sta varS
09EF8 A9 01                          lda #1
09EFA 85 6C                          sta var_sol
09EFC 60                             rts
09EFD                           
09EFD A5 6C                      @sk1: lda var_sol
09EFF C9 01                          cmp #1
09F01 D0 08                          bne @sk2
09F03 20 AE 9F                       jsr sol_mov2
09F06 A9 02                          lda #2
09F08 85 6C                          sta var_sol
09F0A 60                             rts
09F0B                           
09F0B A5 6C                      @sk2:lda var_sol
09F0D C9 02                          cmp #2
09F0F D0 0A                          bne @sk3
09F11 20 40 A0                       jsr sol_mov3
09F14                             ;   lda #200
09F14                             ;   sta varS
09F14 A9 00                          lda #0
09F16 8D 41 01                       sta $141
09F19 85 6C                          sta var_sol
09F1B                           
09F1B 60                         @sk3:rts
09F1C                           
09F1C                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
09F1C                           
09F1C                           sol_mov1:
09F1C A9 9A                     	lda #$9a
09F1E 8D 41 05                  	sta $541
09F21 A9 9B                     	lda #$9b
09F23 8D 45 05                  	sta $545
09F26 A9 9C                     	lda #$9c
09F28 8D 49 05                  	sta $549
09F2B A9 AA                     	lda #$aa
09F2D 8D 4D 05                  	sta $54d
09F30 A9 AB                     	lda #$ab
09F32 8D 51 05                  	sta $551
09F35 A9 AC                     	lda #$ac
09F37 8D 55 05                  	sta $555
09F3A A9 BA                     	lda #$ba
09F3C 8D 59 05                  	sta $559
09F3F A9 BB                     	lda #$bb
09F41 8D 5D 05                  	sta $55d
09F44 A9 BC                     	lda #$bc
09F46 8D 61 05                  	sta $561
09F49 A9 CA                     	lda #$ca
09F4B 8D 65 05                  	sta $565
09F4E A9 CB                     	lda #$cb
09F50 8D 69 05                  	sta $569
09F53 A9 CC                     	lda #$cc
09F55 8D 6D 05                  	sta $56d
09F58 A9 DA                     	lda #$da
09F5A 8D 71 05                  	sta $571
09F5D A9 DB                     	lda #$db
09F5F 8D 75 05                  	sta $575
09F62 A9 DC                     	lda #$dc
09F64 8D 79 05                  	sta $579
09F67 A9 EA                     	lda #$ea
09F69 8D 7D 05                  	sta $57d
09F6C A9 EB                     	lda #$eb
09F6E 8D 81 05                  	sta $581
09F71 A9 EC                     	lda #$ec
09F73 8D 85 05                  	sta $585
09F76 A9 FA                     	lda #$fa
09F78 8D 89 05                  	sta $589
09F7B A9 FB                     	lda #$fb
09F7D 8D 8D 05                  	sta $58d
09F80 A9 FC                     	lda #$fc
09F82 8D 91 05                  	sta $591
09F85                           	
09F85 A9 1F                     	lda #$1f
09F87 8D A9 05                  	sta $5a9
09F8A A9 1F                     	lda #$1f
09F8C 8D AD 05                  	sta $5ad
09F8F A9 1F                     	lda #$1f
09F91 8D B1 05                  	sta $5b1
09F94                           
09F94                           
09F94 A9 1F                     	lda #$1f
09F96 8D 95 05                  	sta $595
09F99 A9 1F                     	lda #$1f
09F9B 8D 99 05                  	sta $599
09F9E A9 1F                     	lda #$1f
09FA0 8D 9D 05                  	sta $59d
09FA3 A9 1F                     	lda #$1f
09FA5 8D A1 05                  	sta $5a1
09FA8 A9 1F                     	lda #$1f
09FAA 8D A5 05                  	sta $5a5
09FAD                           
09FAD 60                        	rts
09FAE                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;
09FAE                           
09FAE                           sol_mov2:
09FAE A9 96                     	lda #$96
09FB0 8D 41 05                  	sta $541
09FB3 A9 97                     	lda #$97
09FB5 8D 45 05                  	sta $545
09FB8 A9 98                     	lda #$98
09FBA 8D 49 05                  	sta $549
09FBD A9 A6                     	lda #$a6
09FBF 8D 4D 05                  	sta $54d
09FC2 A9 A7                     	lda #$a7
09FC4 8D 51 05                  	sta $551
09FC7 A9 A8                     	lda #$a8
09FC9 8D 55 05                  	sta $555
09FCC A9 B6                     	lda #$b6
09FCE 8D 59 05                  	sta $559
09FD1 A9 B7                     	lda #$b7
09FD3 8D 5D 05                  	sta $55d
09FD6 A9 B8                     	lda #$b8
09FD8 8D 61 05                  	sta $561
09FDB A9 C6                     	lda #$c6
09FDD 8D 65 05                  	sta $565
09FE0 A9 C7                     	lda #$c7
09FE2 8D 69 05                  	sta $569
09FE5 A9 C8                     	lda #$c8
09FE7 8D 6D 05                  	sta $56d
09FEA A9 D6                     	lda #$d6
09FEC 8D 71 05                  	sta $571
09FEF A9 D7                     	lda #$d7
09FF1 8D 75 05                  	sta $575
09FF4 A9 D8                     	lda #$d8
09FF6 8D 79 05                  	sta $579
09FF9 A9 E6                     	lda #$e6
09FFB 8D 7D 05                  	sta $57d
09FFE A9 E7                     	lda #$e7
0A000 8D 81 05                  	sta $581
0A003 A9 E8                     	lda #$e8
0A005 8D 85 05                  	sta $585
0A008 A9 F6                     	lda #$f6
0A00A 8D 89 05                  	sta $589
0A00D A9 F7                     	lda #$f7
0A00F 8D 8D 05                  	sta $58d
0A012 A9 F8                     	lda #$f8
0A014 8D 91 05                  	sta $591
0A017                           	
0A017 A9 1F                     	lda #$1f
0A019 8D A9 05                  	sta $5a9
0A01C A9 1F                     	lda #$1f
0A01E 8D AD 05                  	sta $5ad
0A021 A9 1F                     	lda #$1f
0A023 8D B1 05                  	sta $5b1
0A026                           
0A026 A9 86                     	lda #$86
0A028 8D 95 05                  	sta $595
0A02B A9 87                     	lda #$87
0A02D 8D 99 05                  	sta $599
0A030 A9 88                     	lda #$88
0A032 8D 9D 05                  	sta $59d
0A035 A9 89                     	lda #$89
0A037 8D A1 05                  	sta $5a1
0A03A A9 8A                     	lda #$8a
0A03C 8D A5 05                  	sta $5a5
0A03F                           
0A03F 60                        	rts
0A040                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;
0A040                           sol_mov3:
0A040                           
0A040 A9 93                     	lda #$93
0A042 8D 41 05                  	sta $541
0A045 A9 94                     	lda #$94
0A047 8D 45 05                  	sta $545
0A04A A9 95                     	lda #$95
0A04C 8D 49 05                  	sta $549
0A04F A9 A3                     	lda #$a3
0A051 8D 4D 05                  	sta $54d
0A054 A9 A4                     	lda #$a4
0A056 8D 51 05                  	sta $551
0A059 A9 A5                     	lda #$a5
0A05B 8D 55 05                  	sta $555
0A05E A9 B3                     	lda #$b3
0A060 8D 59 05                  	sta $559
0A063 A9 B4                     	lda #$b4
0A065 8D 5D 05                  	sta $55d
0A068 A9 B5                     	lda #$b5
0A06A 8D 61 05                  	sta $561
0A06D A9 C3                     	lda #$c3
0A06F 8D 65 05                  	sta $565
0A072 A9 C4                     	lda #$c4
0A074 8D 69 05                  	sta $569
0A077 A9 C5                     	lda #$c5
0A079 8D 6D 05                  	sta $56d
0A07C A9 D3                     	lda #$d3
0A07E 8D 71 05                  	sta $571
0A081 A9 D4                     	lda #$d4
0A083 8D 75 05                  	sta $575
0A086 A9 D5                     	lda #$d5
0A088 8D 79 05                  	sta $579
0A08B A9 E3                     	lda #$e3
0A08D 8D 7D 05                  	sta $57d
0A090 A9 E4                     	lda #$e4
0A092 8D 81 05                  	sta $581
0A095 A9 E5                     	lda #$e5
0A097 8D 85 05                  	sta $585
0A09A A9 F3                     	lda #$f3
0A09C 8D 89 05                  	sta $589
0A09F A9 F4                     	lda #$f4
0A0A1 8D 8D 05                  	sta $58d
0A0A4 A9 F5                     	lda #$f5
0A0A6 8D 91 05                  	sta $591
0A0A9                           
0A0A9                           
0A0A9 A9 B0                     	lda #$b0
0A0AB 8D A9 05                  	sta $5a9
0A0AE A9 B1                     	lda #$b1
0A0B0 8D AD 05                  	sta $5ad
0A0B3 A9 B2                     	lda #$b2
0A0B5 8D B1 05                  	sta $5b1
0A0B8                           
0A0B8 A9 1F                            	lda #$1f
0A0BA 8D 95 05                  	sta $595
0A0BD A9 1F                     	lda #$1f
0A0BF 8D 99 05                  	sta $599
0A0C2 A9 1F                     	lda #$1f
0A0C4 8D 9D 05                  	sta $59d
0A0C7 A9 1F                     	lda #$1f
0A0C9 8D A1 05                  	sta $5a1
0A0CC A9 1F                     	lda #$1f
0A0CE 8D A5 05                  	sta $5a5
0A0D1 60                        	rts
0A0D2                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0A0D2                           update3:
0A0D2                           
0A0D2 A5 40                     	lda trig_smoke
0A0D4 C9 01                     	cmp #1
0A0D6 D0 68                     	bne sm5
0A0D8                           	
0A0D8 A9 00                     	lda #0
0A0DA 85 6B                     	sta go
0A0DC 85 C9                     	sta trig_fall
0A0DE                           	
0A0DE A9 00                     	lda #0
0A0E0 20 5E A3                  	jsr smoke_pallete_change
0A0E3                           
0A0E3 E6 38                     	  INC varSS
0A0E5 A5 38                               lda varSS
0A0E7 C9 0A                                CMP #10
0A0E9 D0 55                                BNE sm5
0A0EB A9 00                                LDA #0
0A0ED 85 38                                STA varSS
0A0EF                           
0A0EF                           
0A0EF A5 39                      sm :lda var_smoke
0A0F1 C9 00                          cmp #0
0A0F3 D0 08                          bne sm1
0A0F5 20 41 A1                       jsr smoke_mov1
0A0F8 A9 01                          lda #1
0A0FA 85 39                          sta var_smoke
0A0FC 60                             rts
0A0FD                           
0A0FD A5 39                      sm1: lda var_smoke
0A0FF C9 01                          cmp #1
0A101 D0 08                          bne sm2
0A103 20 92 A1                       jsr smoke_mov2
0A106 A9 02                          lda #2
0A108 85 39                          sta var_smoke
0A10A 60                             rts
0A10B                           
0A10B A5 39                      sm2:lda var_smoke
0A10D C9 02                          cmp #2
0A10F D0 08                          bne sm3
0A111 20 E3 A1                       jsr smoke_mov3
0A114 A9 03                          lda #3
0A116 85 39                          sta var_smoke
0A118 60                             rts
0A119                           
0A119 A5 39                      sm3:lda var_smoke
0A11B C9 03                          cmp #3
0A11D D0 08                          bne sm4
0A11F 20 34 A2                       jsr smoke_mov4
0A122 A9 04                          lda #4
0A124 85 39                          sta var_smoke
0A126 60                             rts
0A127                           
0A127 A5 39                     sm4:lda var_smoke
0A129 C9 04                          cmp #4
0A12B D0 13                          bne sm5
0A12D 20 85 A2                       jsr smoke_mov5
0A130 A9 00                          lda #0
0A132 85 39                          sta var_smoke
0A134 85 40                          sta trig_smoke
0A136                                ;lda random7
0A136                                ;cmp #1
0A136                                ;beq pop
0A136 A9 0A                          lda #10
0A138 8D 22 01                       sta $122
0A13B A9 02                          lda #2
0A13D 20 5E A3                       jsr smoke_pallete_change
0A140 60                        sm5:rts
0A141                           ;pop:
0A141                           ;    lda #0
0A141                           ;    sta random7
0A141                           ;    rts
0A141                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0A141                           
0A141                           smoke_mov1:
0A141                           
0A141 A9 1F                     	lda #$1f
0A143 8D 41 05                  	sta $541
0A146 A9 1F                     	lda #$1f
0A148 8D 45 05                  	sta $545
0A14B A9 1F                     	lda #$1f
0A14D 8D 49 05                  	sta $549
0A150 A9 1F                     	lda #$1f
0A152 8D 4D 05                  	sta $54d
0A155 A9 1F                     	lda #$1f
0A157 8D 51 05                  	sta $551
0A15A A9 91                     	lda #$91
0A15C 8D 55 05                  	sta $555
0A15F A9 92                     	lda #$92
0A161 8D 59 05                  	sta $559
0A164 A9 1F                     	lda #$1f
0A166 8D 5D 05                  	sta $55d
0A169 A9 1F                     	lda #$1f
0A16B 8D 61 05                  	sta $561
0A16E A9 A1                     	lda #$a1
0A170 8D 65 05                  	sta $565
0A173 A9 A2                     	lda #$a2
0A175 8D 69 05                  	sta $569
0A178 A9 1F                     	lda #$1f
0A17A 8D 6D 05                  	sta $56d
0A17D A9 1F                     	lda #$1f
0A17F 8D 71 05                  	sta $571
0A182 A9 1F                     	lda #$1f
0A184 8D 75 05                  	sta $575
0A187 A9 1F                     	lda #$1f
0A189 8D 79 05                  	sta $579
0A18C A9 1F                     	lda #$1f
0A18E 8D 7D 05                  	sta $57d
0A191                           
0A191                           
0A191 60                        	rts
0A192                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;
0A192                           
0A192                           smoke_mov2:
0A192                           
0A192 A9 88                     	lda #$88
0A194 8D 41 05                  	sta $541
0A197 A9 89                     	lda #$89
0A199 8D 45 05                  	sta $545
0A19C A9 8A                     	lda #$8a
0A19E 8D 49 05                  	sta $549
0A1A1 A9 8B                     	lda #$8b
0A1A3 8D 4D 05                  	sta $54d
0A1A6 A9 98                     	lda #$98
0A1A8 8D 51 05                  	sta $551
0A1AB A9 99                     	lda #$99
0A1AD 8D 55 05                  	sta $555
0A1B0 A9 9A                     	lda #$9a
0A1B2 8D 59 05                  	sta $559
0A1B5 A9 9B                     	lda #$9b
0A1B7 8D 5D 05                  	sta $55d
0A1BA A9 A8                     	lda #$a8
0A1BC 8D 61 05                  	sta $561
0A1BF A9 A9                     	lda #$a9
0A1C1 8D 65 05                  	sta $565
0A1C4 A9 AA                     	lda #$aa
0A1C6 8D 69 05                  	sta $569
0A1C9 A9 AB                     	lda #$ab
0A1CB 8D 6D 05                  	sta $56d
0A1CE A9 B8                     	lda #$b8
0A1D0 8D 71 05                  	sta $571
0A1D3 A9 B9                     	lda #$b9
0A1D5 8D 75 05                  	sta $575
0A1D8 A9 BA                     	lda #$ba
0A1DA 8D 79 05                  	sta $579
0A1DD A9 BB                     	lda #$bb
0A1DF 8D 7D 05                  	sta $57d
0A1E2                           
0A1E2                           
0A1E2 60                        	rts
0A1E3                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;
0A1E3                           smoke_mov3:
0A1E3                           
0A1E3 A9 84                     	lda #$84
0A1E5 8D 41 05                  	sta $541
0A1E8 A9 85                     	lda #$85
0A1EA 8D 45 05                  	sta $545
0A1ED A9 86                     	lda #$86
0A1EF 8D 49 05                  	sta $549
0A1F2 A9 87                     	lda #$87
0A1F4 8D 4D 05                  	sta $54d
0A1F7 A9 94                     	lda #$94
0A1F9 8D 51 05                  	sta $551
0A1FC A9 95                     	lda #$95
0A1FE 8D 55 05                  	sta $555
0A201 A9 96                     	lda #$96
0A203 8D 59 05                  	sta $559
0A206 A9 97                     	lda #$97
0A208 8D 5D 05                  	sta $55d
0A20B A9 A4                     	lda #$a4
0A20D 8D 61 05                  	sta $561
0A210 A9 A5                     	lda #$a5
0A212 8D 65 05                  	sta $565
0A215 A9 A6                     	lda #$a6
0A217 8D 69 05                  	sta $569
0A21A A9 A7                     	lda #$a7
0A21C 8D 6D 05                  	sta $56d
0A21F A9 B4                     	lda #$b4
0A221 8D 71 05                  	sta $571
0A224 A9 B5                     	lda #$b5
0A226 8D 75 05                  	sta $575
0A229 A9 B6                     	lda #$b6
0A22B 8D 79 05                  	sta $579
0A22E A9 B7                     	lda #$b7
0A230 8D 7D 05                  	sta $57d
0A233                           
0A233                           
0A233 60                        	rts
0A234                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0A234                           smoke_mov4:
0A234                           
0A234 A9 80                     	lda #$80
0A236 8D 41 05                  	sta $541
0A239 A9 81                     	lda #$81
0A23B 8D 45 05                  	sta $545
0A23E A9 82                     	lda #$82
0A240 8D 49 05                  	sta $549
0A243 A9 83                     	lda #$83
0A245 8D 4D 05                  	sta $54d
0A248 A9 90                     	lda #$90
0A24A 8D 51 05                  	sta $551
0A24D A9 1F                     	lda #$1f
0A24F 8D 55 05                  	sta $555
0A252 A9 1F                     	lda #$1f
0A254 8D 59 05                  	sta $559
0A257 A9 93                     	lda #$93
0A259 8D 5D 05                  	sta $55d
0A25C A9 A0                     	lda #$a0
0A25E 8D 61 05                  	sta $561
0A261 A9 1F                     	lda #$1f
0A263 8D 65 05                  	sta $565
0A266 A9 1F                     	lda #$1f
0A268 8D 69 05                  	sta $569
0A26B A9 A3                     	lda #$a3
0A26D 8D 6D 05                  	sta $56d
0A270 A9 B0                     	lda #$b0
0A272 8D 71 05                  	sta $571
0A275 A9 B1                     	lda #$b1
0A277 8D 75 05                  	sta $575
0A27A A9 B2                     	lda #$b2
0A27C 8D 79 05                  	sta $579
0A27F A9 B3                     	lda #$b3
0A281 8D 7D 05                  	sta $57d
0A284                           
0A284                           
0A284 60                        	rts
0A285                           ;;;;;;;;;;;;;;;;;;;;;;;
0A285                           smoke_mov5:
0A285                           
0A285 A9 1F                     	lda #$1f
0A287 8D 41 05                  	sta $541
0A28A A9 1F                     	lda #$1f
0A28C 8D 45 05                  	sta $545
0A28F A9 1F                     	lda #$1f
0A291 8D 49 05                  	sta $549
0A294 A9 1F                     	lda #$1f
0A296 8D 4D 05                  	sta $54d
0A299 A9 1F                     	lda #$1f
0A29B 8D 51 05                  	sta $551
0A29E A9 1F                     	lda #$1f
0A2A0 8D 55 05                  	sta $555
0A2A3 A9 1F                     	lda #$1f
0A2A5 8D 59 05                  	sta $559
0A2A8 A9 1F                     	lda #$1f
0A2AA 8D 5D 05                  	sta $55d
0A2AD A9 1F                     	lda #$1f
0A2AF 8D 61 05                  	sta $561
0A2B2 A9 1F                     	lda #$1f
0A2B4 8D 65 05                  	sta $565
0A2B7 A9 1F                     	lda #$1f
0A2B9 8D 69 05                  	sta $569
0A2BC A9 1F                     	lda #$1f
0A2BE 8D 6D 05                  	sta $56d
0A2C1 A9 1F                     	lda #$1f
0A2C3 8D 71 05                  	sta $571
0A2C6 A9 1F                     	lda #$1f
0A2C8 8D 75 05                  	sta $575
0A2CB A9 1F                     	lda #$1f
0A2CD 8D 79 05                  	sta $579
0A2D0 A9 1F                     	lda #$1f
0A2D2 8D 7D 05                  	sta $57d
0A2D5                           
0A2D5                           
0A2D5 60                        	rts
0A2D6                           ;         ---------------------------------------------------------------------
0A2D6                           firstchange:
0A2D6                                   ;lda changescreen_var1
0A2D6                                   ;cmp #10
0A2D6                                   ;bne dwnfornxt
0A2D6 A9 00                             lda #0
0A2D8 8D 01 20                          sta $2001
0A2DB A9 20                             LDA #$20                ; draw screen
0A2DD 8D 06 20                          STA $2006
0A2E0 A9 00                             LDA #$00
0A2E2 8D 06 20                          STA $2006
0A2E5                           
0A2E5 A0 00                             ldy #$00
0A2E7 A2 04                             ldx #$04
0A2E9                           
0A2E9 A9 7A                             lda #<snow_typing
0A2EB 85 10                             sta $10
0A2ED A9 F6                             lda #>snow_typing
0A2EF 85 11                             sta $11
0A2F1                           @NameLoop:
0A2F1 B1 10                             lda ($10),y
0A2F3 8D 07 20                          sta $2007
0A2F6 C8                                iny
0A2F7 D0 F8                             bne @NameLoop
0A2F9 E6 11                             inc $11
0A2FB CA                                dex
0A2FC D0 F3                             bne @NameLoop
0A2FE                               ;    lda PPUCRTL
0A2FE                                ;   sta $2000
0A2FE A9 1E                             lda #30
0A300 8D 01 20                          sta $2001
0A303                                    ;sta changescreen_var1
0A303 60                                rts
0A304                           ;       -------------------------------------------------------------
0A304                           pal_firstchange:
0A304 A9 3F                     LDA #$3F
0A306 8D 06 20                  	STA $2006
0A309 A9 00                     	LDA #$00
0A30B 8D 06 20                  	STA $2006
0A30E                           @load_pal:                       ; load palette
0A30E BD A8 AB                          LDA palette_snow_typing,x
0A311 8D 07 20                          sta $2007
0A314 E8                                inx
0A315 E0 20                             cpx #$20
0A317 D0 F5                             bne @load_pal
0A319 60                                rts
0A31A                           ;       -------------------------------------------------------------
0A31A                           firstchange1:
0A31A                                   ;lda changescreen_var1
0A31A                                   ;cmp #10
0A31A                                   ;bne dwnfornxt
0A31A A9 00                             lda #0
0A31C 8D 01 20                          sta $2001
0A31F A9 20                             LDA #$20                ; draw screen
0A321 8D 06 20                          STA $2006
0A324 A9 00                             LDA #$00
0A326 8D 06 20                          STA $2006
0A329                           
0A329 A0 00                             ldy #$00
0A32B A2 04                             ldx #$04
0A32D                           
0A32D A9 7A                             lda #<snake_typing
0A32F 85 10                             sta $10
0A331 A9 F2                             lda #>snake_typing
0A333 85 11                             sta $11
0A335                           @NameLoop:
0A335 B1 10                             lda ($10),y
0A337 8D 07 20                          sta $2007
0A33A C8                                iny
0A33B D0 F8                             bne @NameLoop
0A33D E6 11                             inc $11
0A33F CA                                dex
0A340 D0 F3                             bne @NameLoop
0A342                               ;    lda PPUCRTL
0A342                                ;   sta $2000
0A342 A9 1E                             lda #30
0A344 8D 01 20                          sta $2001
0A347                                    ;sta changescreen_var1
0A347 60                                rts
0A348                           ;       -------------------------------------------------------------
0A348                           pal_firstchange1:
0A348 A9 3F                     LDA #$3F
0A34A 8D 06 20                  	STA $2006
0A34D A9 00                     	LDA #$00
0A34F 8D 06 20                  	STA $2006
0A352                           @load_pal:                       ; load palette
0A352 BD C8 AB                          LDA palette_snake_typing,x
0A355 8D 07 20                          sta $2007
0A358 E8                                inx
0A359 E0 20                             cpx #$20
0A35B D0 F5                             bne @load_pal
0A35D 60                                rts
0A35E                           
0A35E                           
0A35E                                ;       --------------------------------------------------------
0A35E                           smoke_pallete_change:
0A35E A2 00                                          ldx #0
0A360 A0 00                                          ldy #0
0A362                                                
0A362                                                @loop:
0A362 9D 42 05                                             sta $542,x
0A365 E8                                                   inx
0A366 E8                                                   inx
0A367 E8                                                   inx
0A368 E8                                                   inx
0A369 E0 10                                                cpx #16
0A36B D0 F5                                                bne @loop
0A36D 60                                                   rts
0A36E                           ;This subroutine is for loading the new word after every scrolling
0A36E                           
0A36E                            ;This fragment of code is added for eliminating unknown sprites that was appearing in the first word
0A36E                            ;so we are just storing zeroes in the addresses 5A5 to 5AD  for only once when the first word will be loaded.
0A36E                           clearingword1:
0A36E 60                                        RTS
0A36F                           
0A36F                           
0A36F                           ResetKeyboard:
0A36F A9 04                       lda #%00000100
0A371 8D 16 40                    sta $4016
0A374 A9 05                       lda #%00000101
0A376 8D 16 40                    sta $4016        ;;sets keyboard row/column to 0
0A379 A9 04                       lda #%00000100
0A37B 8D 16 40                    sta $4016
0A37E 60                          rts
0A37F                           
0A37F                           
0A37F                             ;;
0A37F                           ReadKeyboard:
0A37F A2 00                       ldx #$00                ;;byte counter
0A381                           ReadKeyboardLoop:
0A381 A9 00                       lda #%00000000          ;;set to low column
0A383 AD 17 40                    lda $4017
0A386 4A                          lsr a                   ;;dont use d0
0A387 29 0F                       and #$0F
0A389 9D 00 03                    sta $0300, x            ;;get low column 4 bits
0A38C                           
0A38C A9 06                       lda #%00000110          ;;set to high column
0A38E 8D 16 40                    sta $4016
0A391                           
0A391 AD 17 40                    lda $4017
0A394 0A                          asl a
0A395 0A                          asl a
0A396 0A                          asl a
0A397 29 F0                       and #$F0
0A399 1D 00 03                    ora $0300, x            ;;get high column 4 bits
0A39C 9D 00 03                    sta $0300, x
0A39F                           
0A39F E8                          inx
0A3A0 E0 0D                       cpx #$0D                ;;count 13 rows
0A3A2 F0 08                       beq ReadKeyboardLoopDone
0A3A4                           ReadKeyboardLoopNextRow:
0A3A4 A9 04                       lda #%00000100          ;;set to low column, increments row
0A3A6 8D 16 40                    sta $4016
0A3A9 4C 81 A3                    jmp ReadKeyboardLoop
0A3AC                           
0A3AC                           ReadKeyboardLoopDone:
0A3AC 60                          rts
0A3AD                           
0A3AD                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0A3AD                           
0A3AD                           
0A3AD                           ParseKeyboard:
0A3AD A2 00                       ldx #$00                  ;;which keyboard byte
0A3AF                           ParseKeyboardByteLoop:
0A3AF A0 00                       ldy #$00                  ;;which bit in byte to look at
0A3B1 A9 01                       lda #$01
0A3B3 8D 05 01                    sta bitmask               ;;start with lowest bit
0A3B6                           
0A3B6                           ParseKeyboardBitLoop:
0A3B6 BD 00 03                    lda $0300, x              ;;get keyboard byte
0A3B9 2D 05 01                    and bitmask               ;;mask off all but 1 bit
0A3BC F0 10                       beq ParseKeyboardFound    ;;if bit CLEAR, button is DOWN
0A3BE                           
0A3BE                           ParseKeyboardNextBit:
0A3BE 0E 05 01                    asl bitmask               ;;go to next bit
0A3C1 C8                          iny                       ;;look at all 8 bits
0A3C2 C0 08                       cpy #$08
0A3C4 D0 F0                       bne ParseKeyboardBitLoop
0A3C6                           
0A3C6                           ParseKeyboardNextByte:
0A3C6 E8                          inx                       ;;go to next byte
0A3C7 E0 0D                       cpx #$0D                  ;;13 rows
0A3C9 D0 E4                       bne ParseKeyboardByteLoop
0A3CB                           
0A3CB                           ParseKeyboardNotFound:      ;;no keys down were found
0A3CB A9 30                       lda #'\0'
0A3CD                           ;  sta $0501                 ;;set tile to empty
0A3CD 60                          rts
0A3CE                           
0A3CE                           ParseKeyboardFound:
0A3CE 8A                          txa
0A3CF 0A                          asl a
0A3D0 0A                          asl a
0A3D1 0A                          asl a
0A3D2 8D 06 01                    sta temp                  ;;shift byte counter up  xxxxx000
0A3D5                           
0A3D5 98                          tya
0A3D6 0D 06 01                    ora temp                  ;;add in bit counter     xxxxxyyy
0A3D9 AA                          tax
0A3DA                            ;;;;;;;;;;
0A3DA A5 29                      lda $29
0A3DC C9 01                      cmp #$01
0A3DE F0 06                      BEQ over123
0A3E0                           
0A3E0                             ;;;;;;
0A3E0 BD F7 A3                    lda keyboard, x           ;;load that character
0A3E3                             ;;;;;;;;;;;;;;
0A3E3                           
0A3E3                             ;;;;;;;;;
0A3E3 8D 0D 01                    sta Current                 ;;store into sprite tile
0A3E6                             ;sta $501
0A3E6                           
0A3E6                             over123:
0A3E6 60                          rts
0A3E7                            ;         -----------------------------------------------------------------------------------
0A3E7                            Lower_byte_pal1:
0A3E7 8C 8D 8E 8F 90 91 92 93   .db $8c,$8d,$8e,$8f,$90,$91,$92,$93
0A3EF                           Lower_byte_pal2:
0A3EF 94 95 96 97 98 99 9A 9B   .db $94,$95,$96,$97,$98,$99,$9a,$9b
0A3F7                            ;         ------------------------------------------------------------------------------------
0A3F7                           keyboard:
0A3F7                             ; SUBOR compatible layout
0A3F7 34 47 46 43 32 45 35 56     .db '4', 'G', 'F', 'C', '2', 'E', '5', 'V'
0A3FF 32 44 53 45 31 57 33 58     .db '2', 'D', 'S', 'E', '1', 'W', '3', 'X'
0A407 49 42 4E 52 38 50 44 48     .db 'I', 'B', 'N', 'R', '8', 'P', 'D', 'H'
0A40F 39 49 4C 2C 35 4F 30 2E     .db '9', 'I', 'L', ',', '5', 'O', '0', '.'
0A417 5B 52 55 4C 37 30 30 44     .db '[', 'R', 'U', 'L', '7', '0', '0', 'D'
0A41F 51 43 5A 54 45 41 31 43     .db 'Q', 'C', 'Z', 'T', 'E', 'A', '1', 'C'
0A427 37 59 4B 4D 34 55 38 4A     .db '7', 'Y', 'K', 'M', '4', 'U', '8', 'J'
0A42F 30 30 30 30 36 50 30 53     .db '0', '0', '0', '0', '6', 'P', '0', 'S'
0A437 54 48 4E 20 33 52 36 42     .db 'T', 'H', 'N', ' ', '3', 'R', '6', 'B'
0A43F 00 00 00 00 00 00 00 00     .dB  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0
0A447 4D 34 37 31 32 31 32 38     .dB 'M', '4', '7', '1', '2', '1', '2', '8'
0A44F 2D 2B 2A 39 30 35 2F 4E     .dB '-', '+', '*', '9', '0', '5', '/', 'N'
0A457 60 36 50 20 39 33 2E 30     .dB '`', '6', 'P', ' ', '9', '3', '.', '0'
0A45F                           
0A45F                            ; Family Basic keyboard layout
0A45F                           
0A45F                            ; .db $08, $A7, $41, $41, $41, $BB, $41, $AE
0A45F                            ; .db $07, $41, $41, $41, $41, $41, $41, $41
0A45F                            ; .db $06, $4F, 'L', 'K', '>', '<', 'P', ')'
0A45F                            ; .db $05, 'I', 'U', 'J', 'M', 'N', '(', '*'
0A45F                            ; .db $04, 'Y', 'G', 'H', 'B', 'V', '&', '^'
0A45F                            ; .db $03, 'T', 'R', 'D', 'F', 'C', '%', '$'
0A45F                            ; .db $02, 'W', 'S', 'A', 'X', 'Z', 'E', '#'
0A45F                            ; .db $01, $0C, 'Q', $A9, $AB, $0B, '!', '@'
0A45F                            ; .db $09, $15, $18, $17, $16, $41, $D0, $86
0A45F                            ; .db  0 , $15, $17, $18, $16 ,  0 ,  0 ,  0
0A45F                            ; .db  0 , 0,   0,   0,   0,   0 ,  0 ,    0
0A45F                           
0A45F                           
0A45F                           ;Library:
0A45F                           word1:
0A45F 41 52 49 4E 43 45         .db 'A','R','I','N','C','E'
0A465 46 52 49 45 4E 44         .db 'F','R','I','E','N','D'
0A46B 57 41 52                  .db 'W','A','R'
0A46E 4C 41 52 47 45            .db 'L','A','R','G','E'
0A473 54 59 50 45               .db 'T','Y','P','E'
0A477 4E 49 47 48 54            .db 'N','I','G','H','T'
0A47C 4D 4F 52 4E 49 4E 47      .db 'M','O','R','N','I','N','G'
0A483 54 52 55 54 48            .db 'T','R','U','T','H'
0A488 44 45 46 45 41 54         .db 'D','E','F','E','A','T'
0A48E 4D 4F 4E 53 4F 4F 4E      .db 'M','O','N','S','O','O','N'
0A495                           
0A495                           
0A495                           NumberofLetters:
0A495 06 06 03 05 04 05 07 05.. .db $06, $06, $03, $05, $04, $05 ,$07, $05, $06, $07
0A49F                           
0A49F                           word2:
0A49F 52 41 4D                  .db 'R','A','M'
0A4A2 48 41 4E 55 4D 41 4E      .db 'H','A','N','U','M','A','N'
0A4A9 50 45 41 43 45            .db 'P','E','A','C','E'
0A4AE 41 52 4D 59               .db 'A','R','M','Y'
0A4B2 57 41 4C 4B               .db 'W','A','L','K'
0A4B6 44 41 52 4B               .db 'D','A','R','K'
0A4BA 42 52 49 47 48 54         .db 'B','R','I','G','H','T'
0A4C0 57 49 4E 53               .db 'W','I','N','S'
0A4C4 4D 4F 4E 53 54 45 52      .db 'M','O','N','S','T','E','R'
0A4CB 52 41 49 4E               .db 'R','A','I','N'
0A4CF                           
0A4CF                           NumberofLetters1:
0A4CF 03 07 05 04 04 04 06 04.. .db  $03, $07, $05, $04, $04, $04,$06, $04, $07, $04
0A4D9                           
0A4D9                           ;;;; Rock libraries
0A4D9                           ;    --------------------------------------------------------------------------------------------
0A4D9                           word_rock:
0A4D9 4C 49 46 45               .db 'L','I','F','E'
0A4DD 53 57 4F 52 44            .db 'S','W','O','R','D'
0A4E2 46 52 49 45 4E 44         .db 'F','R','I','E','N','D'
0A4E8 41 52 52 4F 57            .db 'A','R','R','O','W'
0A4ED 53 49 54 41               .db 'S','I','T','A'
0A4F1 54 52 55 54 48            .db 'T','R','U','T','H'
0A4F6 52 49 4E 47               .db 'R','I','N','G'
0A4FA 47 4F 44                  .db 'G','O','D'
0A4FD                           
0A4FD                           
0A4FD                           NumberofLetters_rock:
0A4FD 04 05 06 05 04 05 04 03   .db $04, $05, $06, $05, $04, $05 ,$04, $03
0A505                           ;   ---------------------------------------------------------------------------------------
0A505                           word_soldier:
0A505 4D 4F 4E 53 54 45 52      .db 'M','O','N','S','T','E','R'
0A50C 44 45 41 54 48            .db 'D','E','A','T','H'
0A511 45 41 52 54 48            .db 'E','A','R','T','H'
0A516 4C 4F 52 44               .db 'L','O','R','D'
0A51A 52 4F 43 4B               .db 'R','O','C','K'
0A51E 42 4F 57                  .db 'B','O','W'
0A521 52 41 56 56 41 4E         .db 'R','A','V','V','A','N'
0A527 50 52 49 44 45            .db 'P','R','I','D','E'
0A52C                           
0A52C                           
0A52C                           NumberofLetters_soldier:
0A52C 07 05 05 04 04 03 06 05   .db  $07, $05, $05, $04, $04, $03,$06, $05
0A534                           ;    ------------------------------------------------------------------------------------------
0A534                           word_snow:
0A534 46 49 47 48 54            .db 'F','I','G','H','T'
0A539 52 45 41 44               .db 'R','E','A','D'
0A53D 46 4C 59                  .db 'F','L','Y'
0A540 41 56 4F 49 44            .db 'A','V','O','I','D'
0A545 47 4F 4F 44               .db 'G','O','O','D'
0A549 57 49 4E 44               .db 'W','I','N','D'
0A54D 46 49 4E 41 4C            .db 'F','I','N','A','L'
0A552 46 49 52 45               .db 'F','I','R','E'
0A556 50 41 4C 41 43 45         .db 'P','A','L','A','C','E'
0A55C 52 41 4D                  .db 'R','A','M'
0A55F 42 4F 59                  .db 'B','O','Y'
0A562 53 48 41 52 50            .db 'S','H','A','R','P'
0A567 48 4F 52 53 45            .db 'H','O','R','S','E'
0A56C 4D 4F 52 4E 49 4E 47      .db 'M','O','R','N','I','N','G'
0A573 47 41 4D 45               .db 'G','A','M','E'
0A577                           
0A577                           
0A577                           NumberofLetters_snow:
0A577 05 04 03 05 04 04 05 04.. .db  $05, $04, $03, $05, $04, $04,$05, $04, $06, $03, $03, $05 ,$05, $07, $04
0A586                           
0A586                           ;   -------------------------------------------------------------------------------------
0A586                           word_snow2:
0A586 52 55 4E                  .db 'R','U','N'
0A589 42 4F 4F 4B 53            .db 'B','O','O','K','S'
0A58E 47 41 4C 41 58 59         .db 'G','A','L','A','X','Y'
0A594 46 4C 49 45 53            .db 'F','L','I','E','S'
0A599 44 52 45 41 4D            .db 'D','R','E','A','M'
0A59E 4D 49 4C 4C               .db 'M','I','L','L'
0A5A2 4D 4F 56 45               .db 'M','O','V','E'
0A5A6 49 43 45                  .db 'I','C','E'
0A5A9 4C 41 4E 4B 41            .db 'L','A','N','K','A'
0A5AE 53 49 54 41               .db 'S','I','T','A'
0A5B2 47 49 52 4C               .db 'G','I','R','L'
0A5B6 53 57 4F 52 44            .db 'S','W','O','R','D'
0A5BB 52 49 44 49 4E 47         .db 'R','I','D','I','N','G'
0A5C1 57 41 4C 4B               .db 'W','A','L','K'
0A5C5 4F 56 45 52               .db 'O','V','E','R'
0A5C9                           
0A5C9                           NumberofLetters1_snow2:
0A5C9 03 05 06 04 05 03 04 03.. .db  $03, $05, $06, $04, $05, $03,$04, $03, $05, $04, $04, $05 ,$06, $04, $04
0A5D8                           ;    ---------------------------------------------------------------------------------
0A5D8                           hanuman_sprites:
0A5D8 A0 00 01 10               .db $A0, $00, $01, $10 ;0
0A5DC A0 01 01 18               .db $A0, $01, $01, $18 ;1
0A5E0 A0 02 01 20               .db $A0, $02, $01, $20 ;2
0A5E4 A0 03 01 28               .db $A0, $03, $01, $28 ;3
0A5E8 A8 10 01 10               .db $A8, $10, $01, $10 ;4
0A5EC A8 11 01 18               .db $A8, $11, $01, $18 ;5
0A5F0 A8 12 01 20               .db $A8, $12, $01, $20 ;6
0A5F4 A8 13 01 28               .db $A8, $13, $01, $28 ;7
0A5F8 B0 20 01 10               .db $B0, $20, $01, $10 ;8
0A5FC B0 21 01 18               .db $B0, $21, $01, $18 ;9
0A600 B0 22 01 20               .db $B0, $22, $01, $20 ;10
0A604 B0 23 01 28               .db $B0, $23, $01, $28 ;11
0A608 B8 30 01 10               .db $B8, $30, $01, $10 ;12
0A60C B8 31 01 18               .db $B8, $31, $01, $18 ;13
0A610 B8 32 01 20               .db $B8, $32, $01, $20 ;14
0A614 B8 33 01 28               .db $B8, $33, $01, $28 ;15
0A618                           ;    -------------------------------------------------------------------------------
0A618                           sprites_rock:
0A618                           
0A618 90 9D 03 D0               .db $90, $9d, $03, $D0 ;sprite 0
0A61C 90 9E 03 D8               .db $90, $9e, $03, $D8 ;sprite 1
0A620 90 9F 03 E0               .db $90, $9f, $03, $E0 ;sprite 2
0A624                           
0A624 98 AD 03 D0               .db $98, $ad, $03, $D0 ;sprite 3
0A628 98 AE 03 D8               .db $98, $ae, $03, $D8 ;sprite 4
0A62C 98 AF 03 E0               .db $98, $af, $03, $E0 ;sprite 5
0A630                           
0A630 A0 BD 03 D0               .db $A0, $bd, $03, $D0 ;sprite 6
0A634 A0 BE 03 D8               .db $A0, $be, $03, $D8 ;sprite 7
0A638 A0 BF 03 E0               .db $A0, $bf, $03, $E0 ;sprite 8
0A63C                           
0A63C A8 CD 03 D0               .db $A8, $cd, $03, $D0 ;sprite 9
0A640 A8 CE 03 D8               .db $A8, $ce, $03, $D8 ;sprite 10
0A644 A8 CF 03 E0               .db $A8, $cf, $03, $E0 ;sprite 11
0A648                           
0A648 B0 DD 03 D0               .db $B0, $dd, $03, $D0 ;sprite 12
0A64C B0 DE 03 D8               .db $B0, $de, $03, $D8 ;sprite 13
0A650 B0 DF 03 E0               .db $B0, $df, $03, $E0 ;sprite 14
0A654                           
0A654 B8 ED 03 D0               .db $B8, $ed, $03, $D0 ;sprite 15
0A658 B8 EE 03 D8               .db $B8, $ee, $03, $D8 ;sprite 16
0A65C B8 EF 03 E0               .db $B8, $ef, $03, $E0 ;sprite 17
0A660                           
0A660 C0 FD 03 D0               .db $C0, $fd, $03, $D0 ;sprite 18
0A664 C0 FE 03 D8               .db $C0, $fe, $03, $D8 ;sprite 19
0A668 C0 FF 03 E0               .db $C0, $ff, $03, $E0 ;sprite 20
0A66C                           
0A66C E0 63 00 50               .db $e0, $63, $00, $50
0A670 E0 73 00 58               .db $e0, $73, $00, $58
0A674                           
0A674                           sprites_soldier:
0A674                           ;monster sprites
0A674                           ------------------------------
0A674                           
0A674 88 9A 02 D0               .db $88, $9a, $02, $D0 ;sprite 0
0A678 88 9B 02 D8               .db $88, $9b, $02, $D8 ;sprite 1
0A67C 88 9C 02 E0               .db $88, $9c, $02, $E0 ;sprite 2
0A680                           
0A680 90 AA 02 D0               .db $90, $aa, $02, $D0 ;sprite 3
0A684 90 AB 02 D8               .db $90, $ab, $02, $D8 ;sprite 4
0A688 90 AC 02 E0               .db $90, $ac, $02, $E0 ;sprite 5
0A68C                           
0A68C 98 BA 02 D0               .db $98, $ba, $02, $D0 ;sprite 6
0A690 98 BB 02 D8               .db $98, $bb, $02, $D8 ;sprite 7
0A694 98 BC 02 E0               .db $98, $bc, $02, $E0 ;sprite 8
0A698                           
0A698 A0 CA 02 D0               .db $A0, $ca, $02, $D0 ;sprite 9
0A69C A0 CB 02 D8               .db $A0, $cb, $02, $D8 ;sprite 10
0A6A0 A0 CC 02 E0               .db $A0, $cc, $02, $E0 ;sprite 11
0A6A4                           
0A6A4 A8 DA 02 D0               .db $A8, $da, $02, $D0 ;sprite 12
0A6A8 A8 DB 02 D8               .db $A8, $db, $02, $D8 ;sprite 13
0A6AC A8 DC 02 E0               .db $A8, $dc, $02, $E0 ;sprite 14
0A6B0                           
0A6B0 B0 EA 02 D0               .db $B0, $ea, $02, $D0 ;sprite 15
0A6B4 B0 EB 02 D8               .db $B0, $eb, $02, $D8 ;sprite 16
0A6B8 B0 EC 02 E0               .db $B0, $ec, $02, $E0 ;sprite 17
0A6BC                           
0A6BC B8 FA 02 D0               .db $B8, $fa, $02, $D0 ;sprite 18
0A6C0 B8 FB 02 D8               .db $B8, $fb, $02, $D8 ;sprite 19
0A6C4 B8 FC 02 E0               .db $B8, $fc, $02, $E0 ;sprite 20
0A6C8                           
0A6C8 80 1F 02 D0               .db $80, $1f, $02, $D0 ;sprite 15
0A6CC 80 1F 02 D8               .db $80, $1f, $02, $D8 ;sprite 16
0A6D0 80 1F 02 E0               .db $80, $1f, $02, $E0 ;sprite 17
0A6D4 80 1F 02 E8               .db $80, $1f, $02, $e8 ;sprite 18
0A6D8 80 1F 02 F0               .db $80, $1f, $02, $f0 ;sprite 19
0A6DC                           
0A6DC 98 1F 02 B8               .db $98, $1f, $02, $b8 ;sprite 19
0A6E0 98 1F 02 C0               .db $98, $1f, $02, $c0 ;sprite 19
0A6E4 98 1F 02 C8               .db $98, $1f, $02, $c8 ;sprite 19
0A6E8                           ;   ---------------------------------------------------
0A6E8                           
0A6E8                              ;vert tile attr horiz
0A6E8                           sprites_snake:
0A6E8                           ;rock sprites
0A6E8                           ------------------------------
0A6E8                           
0A6E8 A0 1F 02 D0               .db $A0, $1F, $02, $D0 ;sprite 6
0A6EC A0 1F 02 D8               .db $A0, $1F, $02, $D8 ;sprite 7
0A6F0 A0 1F 02 E0               .db $A0, $1F, $02, $E0 ;sprite 8
0A6F4 A0 1F 02 E8               .db $A0, $1F, $02, $E8 ;sprite 8
0A6F8                           
0A6F8 A8 D0 02 D0               .db $A8, $D0, $02, $D0 ;sprite 9
0A6FC A8 D1 02 D8               .db $A8, $D1, $02, $D8 ;sprite 10
0A700 A8 1F 02 E0               .db $A8, $1F, $02, $E0 ;sprite 11
0A704 A8 1F 02 E8               .db $A8, $1F, $02, $E8 ;sprite 11
0A708                           
0A708 B0 E0 02 D0               .db $B0, $E0, $02, $D0 ;sprite 12
0A70C B0 E1 02 D8               .db $B0, $E1, $02, $D8 ;sprite 13
0A710 B0 E2 02 E0               .db $B0, $E2, $02, $E0 ;sprite 14
0A714 B0 E3 02 E8               .db $B0, $E3, $02, $E8 ;sprite 14
0A718                           
0A718 B8 F0 02 D0               .db $B8, $F0, $02, $D0 ;sprite 15
0A71C B8 F1 02 D8               .db $B8, $F1, $02, $D8 ;sprite 16
0A720 B8 F2 02 E0               .db $B8, $F2, $02, $E0 ;sprite 17
0A724 B8 F3 02 E8               .db $B8, $F3, $02, $E8 ;sprite 17
0A728                           
0A728 B0 1F 03 E8               .db $B0, $1f, $03, $E8 ;sprite 14
0A72C B8 1F 03 D0               .db $B8, $1f, $03, $D0 ;sprite 15
0A730 B8 1F 03 D8               .db $B8, $1f, $03, $D8 ;sprite 16
0A734 B8 1F 03 E0               .db $B8, $1f, $03, $E0 ;sprite 17
0A738                           ;.db $B8, $1f, $02, $E8 ;sprite 17
0A738                           ;   ----------------------------------------------------------------------------------
0A738                              ;vert tile attr horiz
0A738                           sprites_snow:
0A738                           ;snow monster sprites
0A738                           ------------------------------
0A738                           
0A738 A0 1F 02 D0               .db $A0, $1f, $02, $D0 ;sprite 6
0A73C A0 C3 02 D8               .db $A0, $c3, $02, $D8 ;sprite 7
0A740 A0 C4 02 E0               .db $A0, $c4, $02, $E0 ;sprite 8
0A744 A0 C5 02 E8               .db $A0, $c5, $02, $E8 ;sprite 8
0A748                           
0A748 A8 1F 02 D0               .db $A8, $1f, $02, $D0 ;sprite 9
0A74C A8 D3 02 D8               .db $A8, $d3, $02, $D8 ;sprite 10
0A750 A8 D4 02 E0               .db $A8, $d4, $02, $E0 ;sprite 11
0A754 A8 D5 02 E8               .db $A8, $d5, $02, $E8 ;sprite 11
0A758                           
0A758 B0 1F 02 D0               .db $B0, $1f, $02, $D0 ;sprite 12
0A75C B0 E3 02 D8               .db $B0, $E3, $02, $D8 ;sprite 13
0A760 B0 E4 02 E0               .db $B0, $E4, $02, $E0 ;sprite 14
0A764 B0 E5 02 E8               .db $B0, $e5, $02, $E8 ;sprite 14
0A768                           
0A768 B8 1F 02 D0               .db $B8, $1f, $02, $D0 ;sprite 15
0A76C B8 F3 02 D8               .db $B8, $F3, $02, $D8 ;sprite 16
0A770 B8 F4 02 E0               .db $B8, $F4, $02, $E0 ;sprite 17
0A774 B8 F5 02 E8               .db $B8, $f5, $02, $E8 ;sprite 17
0A778                           
0A778 B8 1F 03 D0               .db $B8, $1f, $03, $d0 ;sprite 14
0A77C B8 1F 03 D8               .db $B8, $1f, $03, $D8 ;sprite 15
0A780 B8 1F 03 E0               .db $B8, $1f, $03, $e0 ;sprite 16
0A784 B8 1F 03 E8               .db $B8, $1f, $03, $E8 ;sprite 17
0A788                           
0A788                           ;   ----------------------------------------
0A788                           screen1_typing:
0A788 00 00 00 00 00 00 00 00..         .incbin "light_for.nam"
0AB88                           
0AB88                           
0AB88                           
0AB88                           
0AB88                           ;       ---------------------------------------
0AB88                           palette_typing:
0AB88                           
0AB88 0F 21 01 30 0F 21 09 29.. .byte $0F,$21,$01,$30,   $0F,$21,$09,$29,   $0F,$21,$01,$30,  $0F,$00,$20,$3D
0AB98                           ; .byte $3F ,$3F ,$3F, $28,$3F ,$14 ,$28 ,$21 , $3F ,$3F ,$28 ,$02 ,$3F ,$3F, $3F ,$28
0AB98 0F 02 27 30 0F 06 27 30.. .byte $0f,$02,$27,$30,   $0f,$06,$27,$30,   $0f,$28,$0f,$3d,  $0f,$38,$17,$0f
0ABA8                           
0ABA8                           palette_snow_typing:
0ABA8                           
0ABA8 0F 11 01 30 0F 11 01 30.. .byte $0F,$11,$01,$30,   $0F,$11,$01,$30,   $0F,$11,$01,$30,  $0F,$11,$01,$30
0ABB8                           
0ABB8 0F 20 10 00 0F 06 27 30.. .byte $0f,$20,$10,$00,   $0f,$06,$27,$30,   $0f,$28,$0f,$3d,  $0f,$20,$10,$00
0ABC8                           
0ABC8                           palette_snake_typing:
0ABC8                           
0ABC8 08 21 0F 30 08 19 3A 0A.. .byte $08,$21,$0f,$30,   $08,$19,$3A,$0A,   $08,$3d,$0f,$28,  $08,$1C,$2C,$3C
0ABD8                           
0ABD8 08 20 10 00 08 06 27 30.. .byte $08,$20,$10,$00,   $08,$06,$27,$30,   $08,$28,$0f,$3d,  $08,$20,$10,$00
0ABE8                           
0ABE8                           LoadAddyt = $ADE2
0ABE8                           InitAddyt = $ADE2
0ABE8                           PlayAddyt = $ADE5
0ABE8                           
0ABE8 00 00 00 00 00 00 00 00.. .org LoadAddyt
0ADE2 4C 15 AE 4C 1D B0 BD 10.. .incbin "typing.nsf"
0BF96                           
0BF96 00 00 00 00 00 00 00 00.. .org $c000
0C000                           
0C000                           .base $8000
08000                           .include malaria.asm
08000                           controller_test_malaria:
08000                           
08000 AD 84 01                          lda $184
08003 C9 05                             cmp #5
08005 10 03                             bpl @oh
08007 4C 14 80                          jmp @dsp
0800A                           
0800A A9 0A                         @oh: lda #10
0800C 8D 85 01                  	sta $185
0800F A9 00                     	lda #0
08011 8D 84 01                  	sta $184
08014                           
08014                           
08014 A5 20                     @dsp:	LDA $20
08016 85 22                     	sta $22
08018                           
08018 A2 00                             ldx #$00
0801A                           
0801A A9 01                             LDA #$01		; strobe joypad
0801C 8D 16 40                  	STA $4016
0801F A9 00                     	LDA #$00
08021 8D 16 40                  	STA $4016
08024                           @con_loop:
08024 AD 16 40                  	LDA $4016		; check the state of each button
08027 4A                        	LSR
08028 66 20                     	ROR $20
0802A E8                                INX
0802B E0 08                             CPX #$08
0802D D0 F5                             bne @con_loop
0802F                           
0802F A5 22                     	LDA $22
08031 49 FF                     	EOR #$FF
08033 25 20                     	AND $20
08035 85 24                     	STA $24
08037                           
08037                           @CheckUp:
08037 A9 10                     	LDA #%00010000
08039                           	;AND justpressed
08039 25 20                     	AND $20
0803B F0 0C                             BEQ @CheckDown
0803D                           
0803D CE 14 05                          dec $514
08040 CE 18 05                          dec $518
08043 CE 1C 05                          dec $51C
08046 CE 20 05                          dec $520
08049                           
08049                           
08049                           
08049                           @CheckDown:
08049 A9 20                     	LDA #%00100000
0804B                           	;AND justpressed
0804B 25 20                     	AND $20
0804D F0 0C                     	BEQ @CheckLeft
0804F                           
0804F EE 14 05                          inc $514
08052 EE 18 05                          inc $518
08055 EE 1C 05                          inc $51C
08058 EE 20 05                          inc $520
0805B                           
0805B                           
0805B                           
0805B                           
0805B                           
0805B                           @CheckLeft:
0805B A9 40                     	LDA #%01000000
0805D                           	;AND justpressed
0805D 25 20                     	AND $20
0805F F0 0C                     	BEQ @CheckRight
08061                           
08061 CE 17 05                          dec $517
08064 CE 1B 05                          dec $51B
08067 CE 1F 05                          dec $51F
0806A CE 23 05                          dec $523
0806D                           
0806D                           
0806D                           
0806D                           @CheckRight:
0806D A9 80                     	LDA #%10000000
0806F                           	;AND justpressed
0806F 25 20                     	AND $20
08071 F0 0C                     	BEQ @CheckSel
08073                           
08073 EE 17 05                          inc $517
08076 EE 1B 05                          inc $51B
08079 EE 1F 05                          inc $51F
0807C EE 23 05                          inc $523
0807F                           
0807F                           
0807F                           @CheckSel:
0807F A9 04                     	LDA #%00000100
08081 25 24                     	AND $24
08083 F0 00                     	BEQ @CheckStart
08085                           
08085                           
08085                           
08085                           @CheckStart
08085 A9 08                     	LDA #%00001000
08087 25 24                     	AND $24
08089 F0 00                     	BEQ @CheckB
0808B                           
0808B                           
0808B                           @CheckB:
0808B A9 02                     	LDA #%00000010
0808D 25 24                     	AND $24
0808F F0 00                     	BEQ @CheckA
08091                           
08091                           
08091                           @CheckA:
08091 A9 01                     	LDA #%00000001
08093 25 24                     	AND $24
08095 F0 05                     	BEQ @CheckOver
08097                           
08097                           
08097 A9 01                     	lda #1
08099 8D 44 01                  	sta tri
0809C                           
0809C                           
0809C                           
0809C                           @CheckOver:
0809C 60                                RTS
0809D                                   
0809D                           palchange_mal:
0809D A2 00                            	LDX #0      ; load palette lookup value
0809F A0 00                             LDY #$00
080A1 A9 3F                             LDA #$3F
080A3 8D 06 20                  	STA $2006
080A6 A9 00                     	LDA #$00
080A8 8D 06 20                  	STA $2006
080AB                           LoadNewPal:                     ; load palette
080AB BD 42 E8                          LDA Pall, x
080AE 8D 07 20                          STA $2007
080B1 E8                                INX
080B2 C8                                INY
080B3 C0 10                             CPY #$10
080B5 D0 F4                             BNE LoadNewPal
080B7                           ;        RTS
080B7 A9 0E                             lda #%00001110
080B9 8D 01 20                          sta $2001
080BC A5 A5                             lda $A5
080BE 49 02                             eor #%00000010
080C0                               ;    sta ppucntl
080C0 8D 00 20                          sta $2000
080C3 A9 00                             lda #0
080C5 8D 05 20                          sta $2005
080C8 8D 05 20                          sta $2005
080CB                           
080CB                                   
080CB 60                                rts
080CC                           
080CC                                   mainscreen1_mal:
080CC                           
080CC A9 20                        	LDA #$20                ; draw screen
080CE 8D 06 20                      	STA $2006
080D1 A9 00                         	LDA #$00
080D3 8D 06 20                      	STA $2006
080D6                           
080D6 A0 00                             ldy #$00
080D8 A2 04                             ldx #$04
080DA                           
080DA                               ;    lda #<screen
080DA 85 10                             sta $10
080DC                               ;    lda #>screen
080DC 85 11                             sta $11
080DE                           
080DE                           @NameLoop11:
080DE B1 10                             lda ($10),y
080E0 8D 07 20                          sta $2007
080E3 C8                                iny
080E4 D0 F8                             bne @NameLoop11
080E6 E6 11                             inc $11
080E8 CA                                dex
080E9 D0 F3                             bne @NameLoop11
080EB                           
080EB 60                        rts
080EC                           ;       ----------------------------------------------------
080EC                           
080EC                           
080EC                           pal_fordemo:
080EC A9 00                             lda #0
080EE 8D 01 20                          sta $2001
080F1 A2 00                             ldx #0
080F3 A0 00                             ldy #0
080F5                           
080F5 A9 3F                            	LDA #$3F
080F7 8D 06 20                  	STA $2006
080FA A9 00                     	LDA #$00
080FC 8D 06 20                  	STA $2006
080FF                           @load_pal12:                       ; load palette
080FF BD 28 96                          LDA pal_fordemo1,x
08102 8D 07 20                          sta $2007
08105 E8                                inx
08106 E0 20                             cpx #$20
08108 D0 F5                             bne @load_pal12
0810A A9 1E                             lda #30
0810C 8D 01 20                          sta $2001
0810F                           
0810F 60                        @brk2rts2  rts
08110                           demoscreen_load:
08110                           
08110 AD 85 01                           lda $185
08113 C9 0A                               cmp #10
08115 D0 3A                               bne jh
08117 A9 15                               lda #21
08119 20 04 C2                            jsr setCHRPage0000
0811C                           
0811C                           
0811C                           
0811C 20 EC 80                          jsr pal_fordemo
0811F A9 00                             lda #0
08121 8D 01 20                          sta $2001
08124 A9 20                             LDA #$20                ; draw screen
08126 8D 06 20                      	STA $2006
08129 A9 00                         	LDA #$00
0812B 8D 06 20                      	STA $2006
0812E                           
0812E A0 00                             ldy #$00
08130 A2 04                             ldx #$04
08132                           
08132 A9 28                             lda #<demoscreen
08134 85 10                             sta $10
08136 A9 92                             lda #>demoscreen
08138 85 11                             sta $11
0813A                           
0813A                           @NameLoop111:
0813A B1 10                             lda ($10),y
0813C 8D 07 20                          sta $2007
0813F C8                                iny
08140 D0 F8                             bne @NameLoop111
08142 E6 11                             inc $11
08144 CA                                dex
08145 D0 F3                             bne @NameLoop111
08147 A9 0E                             lda #%00001110
08149 8D 01 20                          sta $2001
0814C                           
0814C A9 00                             lda #0
0814E 8D 85 01                          sta $185
08151                           
08151 60                          jh:     rts
08152                           
08152                           
08152 A9 0C                     frame1:    lda #$0C
08154 8D 15 05                             sta $515
08157 A9 0D                                lda #$0D
08159 8D 19 05                             sta $519
0815C A9 1C                                lda #$1C
0815E 8D 1D 05                             sta $51D
08161 A9 1D                                lda #$1D
08163 8D 21 05                             sta $521
08166 60                                   rts
08167                           
08167 A9 20                     frame2:   lda #$20
08169 8D 15 05                             sta $515
0816C A9 21                                lda #$21
0816E 8D 19 05                             sta $519
08171 A9 30                                lda #$30
08173 8D 1D 05                             sta $51D
08176 A9 31                                lda #$31
08178 8D 21 05                             sta $521
0817B 60                                   rts
0817C                           
0817C                           
0817C A9 24                     frame3:  lda #$24
0817E 8D 15 05                             sta $515
08181 A9 25                                lda #$25
08183 8D 19 05                             sta $519
08186 A9 34                                lda #$34
08188 8D 1D 05                             sta $51D
0818B A9 35                                lda #$35
0818D 8D 21 05                             sta $521
08190 60                                   rts
08191                           
08191                           
08191 A9 26                     frame4: lda #$26
08193 8D 15 05                             sta $515
08196 A9 27                                lda #$27
08198 8D 19 05                             sta $519
0819B A9 36                                lda #$36
0819D 8D 1D 05                             sta $51D
081A0 A9 37                                lda #$37
081A2 8D 21 05                             sta $521
081A5 60                                   rts
081A6                           
081A6 A9 06                     frame5:   lda #$06
081A8 8D 15 05                             sta $515
081AB A9 07                                lda #$07
081AD 8D 19 05                             sta $519
081B0 A9 16                                lda #$16
081B2 8D 1D 05                             sta $51D
081B5 A9 17                                lda #$17
081B7 8D 21 05                             sta $521
081BA 60                                   rts
081BB                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
081BB                            racket_mos:
081BB                           
081BB AD 44 01                          lda tri
081BE C9 01                             cmp #1
081C0 D0 2F                             bne @gg2
081C2                           
081C2 AD 87 01                          LDA $187
081C5 C9 0A                             CMP #10
081C7 F0 07                             BEQ @lv2
081C9 EE 87 01                          inc $187
081CC 20 52 81                          jsr frame1
081CF                           
081CF 60                                rts
081D0                           
081D0                           
081D0                           
081D0                           
081D0 A9 00                        @lv2:lda #0
081D2 8D 87 01                         sta $187
081D5 8D 44 01                         sta tri
081D8                           
081D8 A9 04                               lda #$04
081DA 8D 15 05                             sta $515
081DD A9 01                                lda #$01
081DF 8D 19 05                             sta $519
081E2 A9 10                                lda #$10
081E4 8D 1D 05                             sta $51D
081E7 A9 11                                lda #$11
081E9 8D 21 05                             sta $521
081EC                           
081EC A9 01                                lda #1
081EE 8D 74 01                             sta $174
081F1                           
081F1                           
081F1                           
081F1 60                          @gg2:     RTS
081F2                             
081F2                             
081F2                             random_gen_mal:
081F2 A2 0A                             ldx #10          ; generate 4 bytes
081F4                           @loop:
081F4 A5 8A                             lda $8A     ; random bit generator
081F6 2A                                rol             ; written by kevtis
081F7 2A                                rol             ; uses user input from joystick for initial values
081F8 2A                                rol
081F9 2A                                rol
081FA 45 8A                             eor $8A     ; this will XOR two bits together and put the answer in bit 7 of the acc
081FC 2A                                rol             ; this puts the answer into the carry
081FD 66 87                             ror $87
081FF 66 88                             ror $88
08201 66 89                             ror $89
08203                                   ;ror random44
08203 CA                                dex
08204 D0 EE                             bne @loop
08206 60                                rts
08207                           
08207                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08207                           garbage_motion:
08207 EE 60 01                                 INC $160
0820A AD 60 01                                 lda $160
0820D C9 05                                    CMP #5
0820F D0 19                                    BNE @TP
08211 A9 00                                    LDA #0
08213 8D 60 01                                 STA $160
08216                           
08216 AD 5F 01                                 lda $15f
08219 C9 00                                    cmp #0
0821B D0 0E                                    bne @ahd
0821D A9 22                                    lda #$22
0821F 8D 25 05                                 sta $525
08222 8D 29 05                                 sta $529
08225 A9 01                                    lda #1
08227 8D 5F 01                                 sta $15f
0822A 60                                 @TP:   rts
0822B A9 12                               @ahd: lda #$12
0822D 8D 25 05                                 sta $525
08230 8D 29 05                                 sta $529
08233 A9 00                                    lda #0
08235 8D 5F 01                                 sta $15f
08238 60                                       rts
08239                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08239                           mos_motion:
08239                           
08239                           
08239 EE 30 01                                 INC $130
0823C AD 30 01                                 lda $130
0823F C9 04                                    CMP #4
08241 D0 45                                    BNE @TPM
08243 A9 00                                    LDA #0
08245 8D 30 01                                 STA $130
08248                           
08248 AD 32 01                                 lda $132
0824B C9 00                                    cmp #0
0824D D0 3A                                    bne @ahd1
0824F A9 02                                    lda #$02
08251 AE 78 01                                 ldx $178
08254 E0 01                                    cpx #1
08256 F0 0A                                    beq @mov1
08258 8D 01 05                                 sta $501
0825B AE 79 01                                 ldx $179
0825E E0 01                                    cpx #1
08260 F0 0A                                    beq @mov2
08262 8D 05 05                           @mov1: sta $505
08265 AE 80 01                                  ldx $180
08268 E0 01                                    cpx #1
0826A F0 0A                                    beq @mov3
0826C 8D 09 05                           @mov2: sta $509
0826F AE 81 01                                 ldx $181
08272 E0 01                                    cpx #1
08274 F0 0A                                    beq @mov4
08276 8D 0D 05                           @mov3: sta $50D
08279 AE 82 01                                  ldx $182
0827C E0 01                                    cpx #1
0827E F0 03                                    beq @mov5
08280 8D 11 05                           @mov4: sta $511
08283                           
08283 A9 01                              @mov5: lda #1
08285 8D 32 01                                 sta $132
08288 60                                 @TPM:   rts
08289 A9 03                               @ahd1: lda #$03
0828B AE 78 01                                 ldx $178
0828E E0 01                                    cpx #1
08290 F0 0A                                    beq @mov11
08292 8D 01 05                                 sta $501
08295 AE 79 01                                 ldx $179
08298 E0 01                                    cpx #1
0829A F0 0A                                    beq @mov22
0829C 8D 05 05                           @mov11: sta $505
0829F AE 80 01                                  ldx $180
082A2 E0 01                                    cpx #1
082A4 F0 0A                                    beq @mov33
082A6 8D 09 05                           @mov22: sta $509
082A9 AE 81 01                                 ldx $181
082AC E0 01                                    cpx #1
082AE F0 0A                                    beq @mov44
082B0 8D 0D 05                           @mov33: sta $50D
082B3 AE 82 01                                  ldx $182
082B6 E0 01                                    cpx #1
082B8 F0 03                                    beq @mov55
082BA 8D 11 05                           @mov44: sta $511
082BD                           
082BD A9 00                              @mov55: lda #0
082BF 8D 32 01                                 sta $132
082C2 60                                       rts
082C3                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
082C3 AD 78 01                  mos_1 : lda $178
082C6 C9 01                             cmp #1
082C8 F0 0D                             beq @TP1
082CA                           
082CA EE 00 05                          inc $500
082CD CE 03 05                          dec $503
082D0                           
082D0 AD 00 05                          lda $500
082D3 C9 FF                             cmp #$ff
082D5 F0 01                             beq @as
082D7                           
082D7 60                            @TP1:   rts
082D8 E6 8A                          @as:   inc $8A
082DA 20 F2 81                             jsr random_gen_mal
082DD 8D 03 05                             sta #$503
082E0 60                                   rts
082E1                           
082E1                           
082E1                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
082E1 AD 79 01                  mos_2 : lda $179
082E4 C9 01                             cmp #1
082E6 F0 0A                             beq @TP2
082E8                           
082E8 EE 07 05                          inc $507
082EB AD 07 05                          lda $507
082EE C9 FF                             cmp #$ff
082F0 F0 01                             beq @as1
082F2                           
082F2 60                           @TP2: rts
082F3 E6 8A                          @as1:   inc $8A
082F5 20 F2 81                             jsr random_gen_mal
082F8 8D 04 05                             sta #$504
082FB 60                                   rts
082FC                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
082FC                           mos_3 :
082FC AD 80 01                          lda $180
082FF C9 01                             cmp #1
08301 F0 14                             beq @TP3
08303                           
08303                           
08303 EE 08 05                          inc $508
08306 EE 0B 05                          inc $50B
08309 AD 0B 05                          lda $50B
0830C C9 FF                             cmp #$ff
0830E F0 08                             beq @as2
08310 AD 08 05                          lda $508
08313 C9 FF                             cmp #$ff
08315 F0 01                             beq @as2
08317                           
08317                           
08317 60                            @TP3:   rts
08318 E6 8A                          @as2:   inc $8A
0831A 20 F2 81                             jsr random_gen_mal
0831D 8D 08 05                             sta #$508
08320                           
08320 60                                   rts
08321                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08321 AD 81 01                  mos_4 : lda $181
08324 C9 01                             cmp #1
08326 F0 0D                             beq @TP4
08328                           
08328 CE 0C 05                          dec $50C
0832B CE 0F 05                          dec $50F
0832E AD 0F 05                          lda $50F
08331 C9 FF                             cmp #$ff
08333 F0 01                             beq @as3
08335                           
08335 60                            @TP4:   rts
08336 E6 8A                          @as3:   inc $8A
08338 20 F2 81                             jsr random_gen_mal
0833B 8D 0F 05                             sta #$50F
0833E                           
0833E 60                                   rts
0833F                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0833F AD 82 01                  mos_5 : lda $182
08342 C9 01                             cmp #1
08344 F0 0D                             beq @TP5
08346                           
08346 CE 10 05                          dec $510
08349 EE 13 05                          inc $513
0834C AD 13 05                          lda $513
0834F C9 FF                             cmp #$ff
08351 F0 01                             beq @as4
08353                           
08353 60                            @TP5:    rts
08354 E6 8A                          @as4:   inc $8A
08356 20 F2 81                             jsr random_gen_mal
08359 8D 10 05                             sta #$510
0835C                           
0835C 60                                   rts
0835D                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0835D                           increment_b:
0835D EE 2C 05                                 inc $52C
08360 EE 30 05                                 inc $530
08363 EE 34 05                                 inc $534
08366 EE 38 05                                 inc $538
08369 EE 3C 05                                 inc $53C
0836C EE 40 05                                 inc $540
0836F EE 44 05                                 inc $544
08372 EE 48 05                                 inc $548
08375                           
08375 60                                       rts
08376                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08376                           decrement_b:
08376 CE 2C 05                                 dec $52C
08379 CE 30 05                                 dec $530
0837C CE 34 05                                 dec $534
0837F CE 38 05                                 dec $538
08382 CE 3C 05                                 dec $53C
08385 CE 40 05                                 dec $540
08388 CE 44 05                                 dec $544
0838B CE 48 05                                 dec $548
0838E 60                                       rts
0838F                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0838F                            increment_g:
0838F EE 4C 05                                 inc $54C
08392 EE 50 05                                 inc $550
08395 EE 54 05                                 inc $554
08398 EE 58 05                                 inc $558
0839B EE 5C 05                                 inc $55C
0839E EE 60 05                                 inc $560
083A1 EE 64 05                                 inc $564
083A4 EE 68 05                                 inc $568
083A7                           
083A7 60                                       rts
083A8                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
083A8                           decrement_g:
083A8 CE 4C 05                                 dec $54C
083AB CE 50 05                                 dec $550
083AE CE 54 05                                 dec $554
083B1 CE 58 05                                 dec $558
083B4 CE 5C 05                                 dec $55C
083B7 CE 60 05                                 dec $560
083BA CE 64 05                                 dec $564
083BD CE 68 05                                 dec $568
083C0 60                                       rts
083C1                           
083C1                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
083C1                           
083C1                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
083C1                           update_boy:
083C1                           
083C1 A5 52                                lda $52
083C3 C9 00                                cmp #0
083C5 F0 0C                                beq gpo1
083C7 C9 01                                cmp #1
083C9 F0 1D                                beq gpo2
083CB C9 02                                cmp #2
083CD F0 2E                                beq gpo3
083CF C9 03                                cmp #3
083D1 F0 3F                                beq gpo4
083D3                           
083D3                           
083D3 A5 54                       gpo1:    lda $54
083D5 C9 50                                cmp #80
083D7 D0 09                                bne cng1
083D9 A9 00                                lda #0
083DB 85 54                                sta $54
083DD A9 01                                lda #1
083DF 85 52                                sta $52
083E1 60                                   rts
083E2                           
083E2 E6 54                            cng1:inc $54
083E4 20 5C 85                              jsr load_b1
083E7 60                                    rts
083E8                           
083E8                           
083E8                           
083E8 A5 54                       gpo2:    lda $54
083EA C9 FA                                cmp #250
083EC D0 09                                bne cng2
083EE                           
083EE A9 00                                lda #0
083F0 85 54                                sta $54
083F2 A9 02                                lda #2
083F4 85 52                                sta $52
083F6 60                                   rts
083F7                           
083F7 E6 54                         cng2:  inc $54
083F9 20 9E 84                             jsr updateb_frnt
083FC 60                                   rts
083FD                           
083FD                           
083FD A5 54                      gpo3:     lda $54
083FF C9 50                                cmp #80
08401 D0 09                                bne cng3
08403 A9 00                                lda #0
08405 85 54                                sta $54
08407 A9 03                                lda #3
08409 85 52                                sta $52
0840B 60                                   rts
0840C                           
0840C E6 54                            cng3:inc $54
0840E 20 5C 85                              jsr load_b1
08411 60                                    rts
08412                           
08412                           
08412                           
08412 A5 54                       gpo4:    lda $54
08414 C9 FA                                cmp #250
08416 D0 09                                bne cng4
08418                           
08418 A9 00                                lda #0
0841A 85 54                                sta $54
0841C A9 00                                lda #0
0841E 85 52                                sta $52
08420 60                                   rts
08421                           
08421 E6 54                         cng4:  inc $54
08423 20 CC 84                             jsr updateb_bk
08426 60                                   rts
08427                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08427                           update_girl:
08427                           
08427 AD 68 01                             lda $168
0842A C9 00                                cmp #0
0842C F0 0C                                beq g1
0842E C9 01                                cmp #1
08430 F0 21                                beq g2
08432 C9 02                                cmp #2
08434 F0 36                                beq g3
08436 C9 03                                cmp #3
08438 F0 4B                                beq g4
0843A                           
0843A                           
0843A AD 69 01                    g1:    lda $169
0843D C9 50                                cmp #80
0843F D0 0B                                bne cg1
08441 A9 00                                lda #0
08443 8D 69 01                             sta $169
08446 A9 01                                lda #1
08448 8D 68 01                             sta $168
0844B 60                                   rts
0844C                           
0844C EE 69 01                         cg1:inc $169
0844F 20 29 86                              jsr load_g1
08452 60                                    rts
08453                           
08453                           
08453                           
08453 AD 69 01                    g2:      lda $169
08456 C9 FA                                cmp #250
08458 D0 0B                                bne cg2
0845A                           
0845A A9 00                                lda #0
0845C 8D 69 01                             sta $169
0845F A9 02                                lda #2
08461 8D 68 01                             sta $168
08464 60                                   rts
08465                           
08465 EE 69 01                      cg2:  inc $169
08468 20 2B 85                             jsr updateg_bk
0846B 60                                   rts
0846C                           
0846C                           
0846C AD 69 01                   g3:     lda $169
0846F C9 50                                cmp #80
08471 D0 0B                                bne cg3
08473 A9 00                                lda #0
08475 8D 69 01                             sta $169
08478 A9 03                                lda #3
0847A 8D 68 01                             sta $168
0847D 60                                   rts
0847E                           
0847E EE 69 01                         cg3:inc $169
08481 20 29 86                              jsr load_g1
08484 60                                    rts
08485                           
08485                           
08485                           
08485 AD 69 01                    g4:    lda $169
08488 C9 FA                                cmp #250
0848A D0 0B                                bne cg4
0848C                           
0848C A9 00                                lda #0
0848E 8D 69 01                             sta $169
08491 A9 00                                lda #0
08493 8D 68 01                             sta $168
08496 60                                   rts
08497                           
08497 EE 69 01                      cg4:  inc $169
0849A 20 FA 84                             jsr updateg_frnt
0849D 60                                   rts
0849E                           
0849E                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0849E                           updateb_frnt:
0849E                           
0849E E6 53                              INC $53
084A0 A5 53                              lda $53
084A2 C9 0A                              CMP #10  ; 20 is the delay, increase/decrease to make it hit faster
084A4 D0 16                              BNE fp
084A6 A9 00                              LDA #$00
084A8 85 53                              STA $53
084AA                           
084AA                            
084AA AD 66 01                   LDA $166
084AD C9 00                             CMP #$00
084AF D0 0C                             BNE L22
084B1 20 85 85                          jsr load_b2
084B4 20 5D 83                         jsr increment_b
084B7 A9 01                             LDA #$01
084B9 8D 66 01                          STA $166
084BC 60                         fp:  RTS
084BD                           
084BD                           L22:
084BD 20 AE 85                          jsr load_b3
084C0 20 5D 83                          jsr increment_b
084C3 AD 66 01                          LDA $166
084C6 A9 00                             LDA #$00
084C8 8D 66 01                          STA $166
084CB                           
084CB 60                                RTS
084CC                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
084CC                           updateb_bk:
084CC                           
084CC E6 53                              INC $53
084CE A5 53                              lda $53
084D0 C9 0A                              CMP #10  ; 20 is the delay, increase/decrease to make it hit faster
084D2 D0 16                              BNE bk
084D4 A9 00                              LDA #$00
084D6 85 53                              STA $53
084D8                           
084D8                           
084D8 AD 67 01                   LDA $167
084DB C9 00                             CMP #$00
084DD D0 0C                             BNE L222
084DF 20 D7 85                          jsr load_b4
084E2 20 76 83                          jsr decrement_b
084E5 A9 01                             LDA #$01
084E7 8D 67 01                          STA $167
084EA 60                        bk:        RTS
084EB                           
084EB                           L222:
084EB 20 00 86                          jsr load_b5
084EE 20 76 83                          jsr decrement_b
084F1 AD 67 01                          LDA $167
084F4 A9 00                             LDA #$00
084F6 8D 67 01                          STA $167
084F9                           
084F9 60                                RTS
084FA                           
084FA                           
084FA                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
084FA                           updateg_frnt:
084FA                           
084FA EE 6A 01                           INC $16a
084FD AD 6A 01                           lda $16a
08500 C9 0A                              CMP #10  ; 20 is the delay, increase/decrease to make it hit faster
08502 D0 17                              BNE fpg
08504 A9 00                              LDA #$00
08506 8D 6A 01                           STA $16a
08509                           
08509                           
08509 AD 6B 01                   LDA $16b
0850C C9 00                             CMP #$00
0850E D0 0C                             BNE L22g
08510 20 52 86                          jsr load_g2
08513 20 8F 83                         jsr increment_g
08516 A9 01                             LDA #$01
08518 8D 6B 01                          STA $16b
0851B 60                         fpg:  RTS
0851C                           
0851C                           L22g:
0851C 20 7B 86                          jsr load_g3
0851F 20 8F 83                          jsr increment_g
08522 AD 6B 01                          LDA $16b
08525 A9 00                             LDA #$00
08527 8D 6B 01                          STA $16b
0852A                           
0852A 60                                RTS
0852B                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0852B                           updateg_bk:
0852B                           
0852B EE 6A 01                           INC $16a
0852E AD 6A 01                           lda $16a
08531 C9 0A                              CMP #10  ; 20 is the delay, increaseincreme/decrease to make it hit faster
08533 D0 17                              BNE bkg
08535 A9 00                              LDA #$00
08537 8D 6A 01                           STA $16a
0853A                           
0853A                           
0853A AD 6C 01                   LDA $16c
0853D C9 00                             CMP #$00
0853F D0 0C                             BNE L2g
08541 20 A4 86                          jsr load_g4
08544 20 A8 83                          jsr decrement_g
08547 A9 01                             LDA #$01
08549 8D 6C 01                          STA $16c
0854C 60                        bkg:        RTS
0854D                           
0854D                           L2g:
0854D 20 CD 86                          jsr load_g5
08550 20 A8 83                          jsr decrement_g
08553 AD 6C 01                          LDA $16c
08556 A9 00                             LDA #$00
08558 8D 6C 01                          STA $16c
0855B                           
0855B 60                                RTS
0855C                           
0855C                           
0855C                           
0855C                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0855C                           load_b1:
0855C A9 40                             lda #$40
0855E 8D 2D 05                          sta $52D
08561 A9 41                             lda #$41
08563 8D 31 05                          sta $531
08566 A9 50                             lda #$50
08568 8D 35 05                          sta $535
0856B A9 51                             lda #$51
0856D 8D 39 05                          sta $539
08570 A9 60                             lda #$60
08572 8D 3D 05                          sta $53D
08575 A9 61                             lda #$61
08577 8D 41 05                          sta $541
0857A A9 70                             lda #$70
0857C 8D 45 05                          sta $545
0857F A9 71                             lda #$71
08581 8D 49 05                          sta $549
08584                           
08584 60                                rts
08585                           
08585                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08585                           load_b2:
08585 A9 40                             lda #$40
08587 8D 2D 05                          sta $52D
0858A A9 41                             lda #$41
0858C 8D 31 05                          sta $531
0858F A9 50                             lda #$50
08591 8D 35 05                          sta $535
08594 A9 51                             lda #$51
08596 8D 39 05                          sta $539
08599 A9 28                             lda #$28
0859B 8D 3D 05                          sta $53D
0859E A9 29                             lda #$29
085A0 8D 41 05                          sta $541
085A3 A9 38                             lda #$38
085A5 8D 45 05                          sta $545
085A8 A9 39                             lda #$39
085AA 8D 49 05                          sta $549
085AD                           
085AD 60                                rts
085AE                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
085AE                           load_b3:
085AE A9 40                             lda #$40
085B0 8D 2D 05                          sta $52D
085B3 A9 41                             lda #$41
085B5 8D 31 05                          sta $531
085B8 A9 50                             lda #$50
085BA 8D 35 05                          sta $535
085BD A9 51                             lda #$51
085BF 8D 39 05                          sta $539
085C2 A9 2A                             lda #$2A
085C4 8D 3D 05                          sta $53D
085C7 A9 2B                             lda #$2B
085C9 8D 41 05                          sta $541
085CC A9 3A                             lda #$3A
085CE 8D 45 05                          sta $545
085D1 A9 3B                             lda #$3B
085D3 8D 49 05                          sta $549
085D6                           
085D6 60                                rts
085D7                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
085D7                           
085D7                           load_b4:
085D7 A9 08                             lda #$08
085D9 8D 2D 05                          sta $52D
085DC A9 09                             lda #$09
085DE 8D 31 05                          sta $531
085E1 A9 18                             lda #$18
085E3 8D 35 05                          sta $535
085E6 A9 19                             lda #$19
085E8 8D 39 05                          sta $539
085EB A9 28                             lda #$28
085ED 8D 3D 05                          sta $53D
085F0 A9 29                             lda #$29
085F2 8D 41 05                          sta $541
085F5 A9 38                             lda #$38
085F7 8D 45 05                          sta $545
085FA A9 39                             lda #$39
085FC 8D 49 05                          sta $549
085FF                           
085FF 60                                rts
08600                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08600                           load_b5:
08600 A9 0A                             lda #$0A
08602 8D 2D 05                          sta $52D
08605 A9 0B                             lda #$0B
08607 8D 31 05                          sta $531
0860A A9 1A                             lda #$1A
0860C 8D 35 05                          sta $535
0860F A9 1B                             lda #$1B
08611 8D 39 05                          sta $539
08614 A9 2A                             lda #$2A
08616 8D 3D 05                          sta $53D
08619 A9 2B                             lda #$2B
0861B 8D 41 05                          sta $541
0861E A9 3A                             lda #$3A
08620 8D 45 05                          sta $545
08623 A9 3B                             lda #$3B
08625 8D 49 05                          sta $549
08628                           
08628 60                                rts
08629                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08629                             load_g1:
08629 A9 42                             lda #$42
0862B 8D 4D 05                          sta $54D
0862E A9 43                             lda #$43
08630 8D 51 05                          sta $551
08633 A9 52                             lda #$52
08635 8D 55 05                          sta $555
08638 A9 53                             lda #$53
0863A 8D 59 05                          sta $559
0863D A9 62                             lda #$62
0863F 8D 5D 05                          sta $55D
08642 A9 63                             lda #$63
08644 8D 61 05                          sta $561
08647 A9 72                             lda #$72
08649 8D 65 05                          sta $565
0864C A9 73                             lda #$73
0864E 8D 69 05                          sta $569
08651                           
08651 60                                rts
08652                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08652                            load_g2:
08652 A9 42                             lda #$42
08654 8D 4D 05                          sta $54D
08657 A9 43                             lda #$43
08659 8D 51 05                          sta $551
0865C A9 52                             lda #$52
0865E 8D 55 05                          sta $555
08661 A9 53                             lda #$53
08663 8D 59 05                          sta $559
08666 A9 68                             lda #$68
08668 8D 5D 05                          sta $55D
0866B A9 69                             lda #$69
0866D 8D 61 05                          sta $561
08670 A9 78                             lda #$78
08672 8D 65 05                          sta $565
08675 A9 79                             lda #$79
08677 8D 69 05                          sta $569
0867A                           
0867A 60                                rts
0867B                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0867B                           load_g3:
0867B A9 42                             lda #$42
0867D 8D 4D 05                          sta $54D
08680 A9 43                             lda #$43
08682 8D 51 05                          sta $551
08685 A9 52                             lda #$52
08687 8D 55 05                          sta $555
0868A A9 53                             lda #$53
0868C 8D 59 05                          sta $559
0868F A9 6A                             lda #$6A
08691 8D 5D 05                          sta $55D
08694 A9 6B                             lda #$6B
08696 8D 61 05                          sta $561
08699 A9 7A                             lda #$7A
0869B 8D 65 05                          sta $565
0869E A9 7B                             lda #$7B
086A0 8D 69 05                          sta $569
086A3                           
086A3 60                                rts
086A4                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
086A4                            load_g4:
086A4 A9 48                             lda #$48
086A6 8D 4D 05                          sta $54D
086A9 A9 49                             lda #$49
086AB 8D 51 05                          sta $551
086AE A9 58                             lda #$58
086B0 8D 55 05                          sta $555
086B3 A9 59                             lda #$59
086B5 8D 59 05                          sta $559
086B8 A9 68                             lda #$68
086BA 8D 5D 05                          sta $55D
086BD A9 69                             lda #$69
086BF 8D 61 05                          sta $561
086C2 A9 78                             lda #$78
086C4 8D 65 05                          sta $565
086C7 A9 79                             lda #$79
086C9 8D 69 05                          sta $569
086CC                           
086CC 60                                rts
086CD                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
086CD                           load_g5:
086CD A9 4A                             lda #$4A
086CF 8D 4D 05                          sta $54D
086D2 A9 4B                             lda #$4B
086D4 8D 51 05                          sta $551
086D7 A9 5A                             lda #$5A
086D9 8D 55 05                          sta $555
086DC A9 5B                             lda #$5B
086DE 8D 59 05                          sta $559
086E1 A9 6A                             lda #$6A
086E3 8D 5D 05                          sta $55D
086E6 A9 6B                             lda #$6B
086E8 8D 61 05                          sta $561
086EB A9 7A                             lda #$7A
086ED 8D 65 05                          sta $565
086F0 A9 7B                             lda #$7B
086F2 8D 69 05                          sta $569
086F5                           
086F5 60                                rts
086F6                           
086F6                           
086F6                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
086F6                            detection1:
086F6 AD 00 05                               lda $500
086F9 8D 6D 01                               sta $16d
086FC AD 03 05                               lda $503
086FF 8D 61 01                               sta $161
08702 EE 61 01                               inc $161
08705 EE 61 01                               inc $161
08708 EE 6D 01                               inc $16d
0870B EE 6D 01                               inc $16d
0870E EE 6D 01                               inc $16d
08711 EE 6D 01                               inc $16d
08714 EE 6D 01                               inc $16d
08717 EE 6D 01                               inc $16d
0871A EE 6D 01                               inc $16d
0871D                           
0871D A9 01                                  lda #1
0871F 8D 75 01                               sta $175
08722 20 F9 88                               jsr compare_mal
08725                           
08725 AD 04 05                               lda $504
08728 8D 6D 01                               sta $16d
0872B AD 07 05                               lda $507
0872E 8D 61 01                               sta $161
08731 EE 61 01                               inc $161
08734 EE 61 01                               inc $161
08737 EE 6D 01                               inc $16d
0873A EE 6D 01                               inc $16d
0873D EE 6D 01                               inc $16d
08740 EE 6D 01                               inc $16d
08743 EE 6D 01                               inc $16d
08746 EE 6D 01                               inc $16d
08749 EE 6D 01                               inc $16d
0874C                           
0874C A9 02                                  lda #2
0874E 8D 75 01                               sta $175
08751 20 F9 88                               jsr compare_mal
08754                           
08754 AD 08 05                               lda $508
08757 8D 6D 01                               sta $16d
0875A AD 0B 05                               lda $50B
0875D 8D 61 01                               sta $161
08760 EE 61 01                               inc $161
08763 EE 61 01                               inc $161
08766 EE 6D 01                               inc $16d
08769 EE 6D 01                               inc $16d
0876C EE 6D 01                               inc $16d
0876F EE 6D 01                               inc $16d
08772 EE 6D 01                               inc $16d
08775 EE 6D 01                               inc $16d
08778 EE 6D 01                               inc $16d
0877B                           
0877B A9 03                                  lda #3
0877D 8D 75 01                               sta $175
08780 20 F9 88                               jsr compare_mal
08783                           
08783 AD 0C 05                               lda $50C
08786 8D 6D 01                               sta $16d
08789 AD 0F 05                               lda $50F
0878C 8D 61 01                               sta $161
0878F EE 61 01                               inc $161
08792 EE 61 01                               inc $161
08795 EE 6D 01                               inc $16d
08798 EE 6D 01                               inc $16d
0879B EE 6D 01                               inc $16d
0879E EE 6D 01                               inc $16d
087A1 EE 6D 01                               inc $16d
087A4 EE 6D 01                               inc $16d
087A7 EE 6D 01                               inc $16d
087AA                           
087AA A9 04                                  lda #4
087AC 8D 75 01                               sta $175
087AF 20 F9 88                               jsr compare_mal
087B2                           
087B2 AD 10 05                              lda $510
087B5 8D 6D 01                               sta $16d
087B8 AD 13 05                               lda $513
087BB 8D 61 01                               sta $161
087BE EE 61 01                               inc $161
087C1 EE 61 01                               inc $161
087C4 EE 6D 01                               inc $16d
087C7 EE 6D 01                               inc $16d
087CA EE 6D 01                               inc $16d
087CD EE 6D 01                               inc $16d
087D0 EE 6D 01                               inc $16d
087D3 EE 6D 01                               inc $16d
087D6 EE 6D 01                               inc $16d
087D9                           
087D9 A9 05                                  lda #5
087DB 8D 75 01                               sta $175
087DE 20 F9 88                               jsr compare_mal
087E1 60                                     rts
087E2                           
087E2                            detection2:
087E2 AD 00 05                               lda $500
087E5 8D 6D 01                               sta $16d
087E8 AD 03 05                               lda $503
087EB 8D 61 01                               sta $161
087EE A9 01                                  lda #1
087F0 8D 75 01                               sta $175
087F3 20 F9 88                               jsr compare_mal
087F6                           
087F6 AD 04 05                               lda $504
087F9 8D 6D 01                               sta $16d
087FC AD 07 05                               lda $507
087FF 8D 61 01                               sta $161
08802                           
08802 A9 02                                  lda #2
08804 8D 75 01                               sta $175
08807 20 F9 88                               jsr compare_mal
0880A                           
0880A AD 08 05                               lda $508
0880D 8D 6D 01                               sta $16d
08810 AD 0B 05                               lda $50B
08813 8D 61 01                               sta $161
08816                           
08816                           
08816 A9 03                                  lda #3
08818 8D 75 01                               sta $175
0881B 20 F9 88                               jsr compare_mal
0881E                           
0881E AD 0C 05                               lda $50C
08821 8D 6D 01                               sta $16d
08824 AD 0F 05                               lda $50F
08827 8D 61 01                               sta $161
0882A                           
0882A                           
0882A A9 04                                  lda #4
0882C 8D 75 01                               sta $175
0882F 20 F9 88                               jsr compare_mal
08832                           
08832 AD 10 05                              lda $510
08835 8D 6D 01                               sta $16d
08838 AD 13 05                               lda $513
0883B 8D 61 01                               sta $161
0883E                           
0883E                           
0883E A9 05                                  lda #5
08840 8D 75 01                               sta $175
08843 20 F9 88                               jsr compare_mal
08846 60                                     rts
08847                           
08847                             detection3:
08847 AD 00 05                               lda $500
0884A 8D 6D 01                               sta $16d
0884D AD 03 05                               lda $503
08850                           
08850 8D 61 01                               sta $161
08853 EE 61 01                               inc $161
08856 EE 61 01                               inc $161
08859 EE 61 01                               inc $161
0885C EE 61 01                               inc $161
0885F                           
0885F A9 01                                  lda #1
08861 8D 75 01                               sta $175
08864 20 F9 88                               jsr compare_mal
08867                           
08867 AD 04 05                               lda $504
0886A 8D 6D 01                               sta $16d
0886D AD 07 05                               lda $507
08870 8D 61 01                               sta $161
08873                           
08873 A9 02                                  lda #2
08875 8D 75 01                               sta $175
08878 20 F9 88                               jsr compare_mal
0887B                           
0887B AD 08 05                               lda $508
0887E 8D 6D 01                               sta $16d
08881 AD 0B 05                               lda $50B
08884 8D 61 01                               sta $161
08887                           
08887                           
08887 A9 03                                  lda #3
08889 8D 75 01                               sta $175
0888C 20 F9 88                               jsr compare_mal
0888F                                  
0888F AD 0C 05                               lda $50C
08892 8D 6D 01                               sta $16d
08895 AD 0F 05                               lda $50F
08898 8D 61 01                               sta $161
0889B                           
0889B                           
0889B A9 04                                  lda #4
0889D 8D 75 01                               sta $175
088A0 20 F9 88                               jsr compare_mal
088A3                                    
088A3 AD 10 05                              lda $510
088A6 8D 6D 01                               sta $16d
088A9 AD 13 05                               lda $513
088AC 8D 61 01                               sta $161
088AF                           
088AF                           
088AF A9 05                                  lda #5
088B1 8D 75 01                               sta $175
088B4 20 F9 88                               jsr compare_mal
088B7 60                                     rts
088B8                           
088B8                           
088B8                           
088B8                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
088B8                            map_quiz:
088B8 AD 75 01                        lda $175
088BB C9 01                           cmp #1
088BD D0 06                           bne ff1
088BF A9 01                           lda #1
088C1                           
088C1 8D 33 01                        sta $133
088C4                              ;   lda #0
088C4                              ;   sta key2
088C4                              ;   sta key3
088C4                              ;   sta key4
088C4                              ;   sta key5
088C4                           
088C4                           
088C4 60                              rts
088C5 AD 75 01                  ff1:lda $175
088C8 C9 02                         cmp #2
088CA D0 06                         bne ff2
088CC A9 01                         lda #1
088CE 8D 70 01                      sta $170
088D1                             ;   lda #0
088D1                             ;    sta key1
088D1                             ;    sta key3
088D1                             ;    sta key4
088D1                             ;    sta key5
088D1 60                            rts
088D2 AD 75 01                  ff2:lda $175
088D5 C9 03                         cmp #3
088D7 D0 06                         bne ff3
088D9 A9 01                         lda #1
088DB                           
088DB 8D 71 01                      sta $171
088DE                            ;    lda #0
088DE                            ;     sta key1
088DE                            ;     sta key2
088DE                            ;     sta key4
088DE                            ;     sta key5
088DE 60                            rts
088DF AD 75 01                  ff3:lda $175
088E2 C9 04                         cmp #4
088E4 D0 06                         bne ff4
088E6 A9 01                         lda #1
088E8                           
088E8 8D 72 01                      sta $172
088EB                            ;    lda #0
088EB                            ;     sta key1
088EB                            ;     sta key2
088EB                            ;     sta key3
088EB                            ;     sta key5
088EB 60                            rts
088EC AD 75 01                  ff4:lda $175
088EF C9 05                         cmp #5
088F1 D0 05                         bne ff5
088F3 A9 01                         lda #1
088F5                           
088F5 8D 73 01                      sta $173
088F8                             ;   lda #0
088F8                             ;    sta key1
088F8                             ;    sta key2
088F8                             ;    sta key3
088F8                             ;    sta key4
088F8                           
088F8 60                        ff5:rts
088F9                           compare_mal:
088F9 AD 14 05                           lda $514
088FC 8D 6F 01                           sta $16f
088FF AD 17 05                           lda $517
08902 8D 6E 01                           sta $16e
08905 EE 6E 01                           inc $16e
08908 EE 6E 01                           inc $16e
0890B EE 6E 01                           inc $16e
0890E EE 6E 01                           inc $16e
08911 EE 6E 01                           inc $16e
08914 EE 6E 01                           inc $16e
08917                           
08917 AD 6F 01                           lda $16f
0891A CD 6D 01                           cmp $16d
0891D D0 0C                              bne khm
0891F AD 6E 01                           lda $16e
08922 CD 61 01                           cmp $161
08925 D0 04                              bne khm
08927                           
08927 20 B8 88                          jsr map_quiz
0892A                           
0892A 60                                 rts
0892B                           
0892B                              khm:
0892B EE 6F 01                          inc $16f
0892E CE 6E 01                          dec $16e
08931 AD 6F 01                          lda $16f
08934 CD 6D 01                           cmp $16d
08937 D0 0C                              bne khm1
08939 AD 6E 01                           lda $16e
0893C CD 61 01                           cmp $161
0893F D0 04                              bne khm1
08941 20 B8 88                           jsr map_quiz
08944 60                                 rts
08945                           
08945                           khm1:
08945 EE 6F 01                          inc $16f
08948 CE 6E 01                          dec $16e
0894B AD 6F 01                          lda $16f
0894E CD 6D 01                           cmp $16d
08951 D0 0C                              bne khm2
08953 AD 6E 01                           lda $16e
08956 CD 61 01                           cmp $161
08959 D0 04                              bne khm2
0895B 20 B8 88                           jsr map_quiz
0895E 60                                rts
0895F                           
0895F                            khm2:
0895F EE 6F 01                          inc $16f
08962 CE 6E 01                          dec $16e
08965 AD 6F 01                          lda $16f
08968 CD 6D 01                           cmp $16d
0896B D0 0C                              bne khm3
0896D AD 6E 01                           lda $16e
08970 CD 61 01                           cmp $161
08973 D0 04                              bne khm3
08975 20 B8 88                           jsr map_quiz
08978 60                                rts
08979                           
08979                           khm3:
08979 EE 6F 01                          inc $16f
0897C CE 6E 01                          dec $16e
0897F AD 6F 01                          lda $16f
08982 CD 6D 01                           cmp $16d
08985 D0 0C                              bne khm4
08987 AD 6E 01                           lda $16e
0898A CD 61 01                           cmp $161
0898D D0 04                              bne khm4
0898F 20 B8 88                           jsr map_quiz
08992 60                                rts
08993                           
08993                           khm4:
08993 EE 6F 01                          inc $16f
08996 CE 6E 01                          dec $16e
08999 AD 6F 01                          lda $16f
0899C CD 6D 01                           cmp $16d
0899F D0 0C                              bne khm5
089A1 AD 6E 01                           lda $16e
089A4 CD 61 01                           cmp $161
089A7 D0 04                              bne khm5
089A9 20 B8 88                          jsr map_quiz
089AC 60                                rts
089AD                           
089AD                           khm5:
089AD EE 6F 01                          inc $16f
089B0 CE 6E 01                          dec $16e
089B3 AD 6F 01                          lda $16f
089B6 CD 6D 01                           cmp $16d
089B9 D0 0C                              bne khm6
089BB AD 6E 01                           lda $16e
089BE CD 61 01                           cmp $161
089C1 D0 04                              bne khm6
089C3 20 B8 88                           jsr map_quiz
089C6 60                                 rts
089C7                           ;;;;;
089C7 EE 6F 01                  khm6:   inc $16f
089CA EE 6E 01                          inc $16e
089CD AD 6F 01                          lda $16f
089D0 CD 6D 01                           cmp $16d
089D3 D0 0C                              bne khm7
089D5 AD 6E 01                           lda $16e
089D8 CD 61 01                           cmp $161
089DB D0 04                              bne khm7
089DD 20 B8 88                           jsr map_quiz
089E0 60                                 rts
089E1                           
089E1 EE 6F 01                  khm7:   inc $16f
089E4 EE 6E 01                          inc $16e
089E7 AD 6F 01                          lda $16f
089EA CD 6D 01                           cmp $16d
089ED D0 0C                              bne khm8
089EF AD 6E 01                           lda $16e
089F2 CD 61 01                           cmp $161
089F5 D0 04                              bne khm8
089F7 20 B8 88                           jsr map_quiz
089FA 60                                  rts
089FB EE 6F 01                  khm8:   inc $16f
089FE EE 6E 01                          inc $16e
08A01 AD 6F 01                          lda $16f
08A04 CD 6D 01                           cmp $16d
08A07 D0 0C                              bne khm9
08A09 AD 6E 01                           lda $16e
08A0C CD 61 01                           cmp $161
08A0F D0 04                              bne khm9
08A11 20 B8 88                           jsr map_quiz
08A14 60                                  rts
08A15                           
08A15 EE 6F 01                  khm9:   inc $16f
08A18 EE 6E 01                          inc $16e
08A1B AD 6F 01                          lda $16f
08A1E CD 6D 01                           cmp $16d
08A21 D0 0C                              bne khm10
08A23 AD 6E 01                           lda $16e
08A26 CD 61 01                           cmp $161
08A29 D0 04                              bne khm10
08A2B 20 B8 88                           jsr map_quiz
08A2E 60                                  rts
08A2F                           
08A2F EE 6F 01                  khm10:   inc $16f
08A32 EE 6E 01                          inc $16e
08A35 AD 6F 01                          lda $16f
08A38 CD 6D 01                           cmp $16d
08A3B D0 0C                              bne khm11
08A3D AD 6E 01                           lda $16e
08A40 CD 61 01                           cmp $161
08A43 D0 04                              bne khm11
08A45 20 B8 88                           jsr map_quiz
08A48 60                                 rts
08A49                            ;;;;
08A49 CE 6F 01                   khm11:  dec $16f
08A4C EE 6E 01                          inc $16e
08A4F AD 6F 01                          lda $16f
08A52 CD 6D 01                           cmp $16d
08A55 D0 0C                              bne khm12
08A57 AD 6E 01                           lda $16e
08A5A CD 61 01                           cmp $161
08A5D D0 04                              bne khm12
08A5F 20 B8 88                          jsr map_quiz
08A62 60                                 rts
08A63                           
08A63 CE 6F 01                  khm12:  dec $16f
08A66 EE 6E 01                          inc $16e
08A69 AD 6F 01                          lda $16f
08A6C CD 6D 01                           cmp $16d
08A6F D0 0C                              bne khm13
08A71 AD 6E 01                           lda $16e
08A74 CD 61 01                           cmp $161
08A77 D0 04                              bne khm13
08A79 20 B8 88                           jsr map_quiz
08A7C 60                                  rts
08A7D                           
08A7D CE 6F 01                  khm13:  dec $16f
08A80 EE 6E 01                          inc $16e
08A83 AD 6F 01                          lda $16f
08A86 CD 6D 01                           cmp $16d
08A89 D0 0C                              bne khm14
08A8B AD 6E 01                           lda $16e
08A8E CD 61 01                           cmp $161
08A91 D0 04                              bne khm14
08A93 20 B8 88                          jsr map_quiz
08A96 60                                  rts
08A97                           
08A97 CE 6F 01                  khm14:  dec $16f
08A9A EE 6E 01                          inc $16e
08A9D AD 6F 01                          lda $16f
08AA0 CD 6D 01                           cmp $16d
08AA3 D0 0C                              bne khm15
08AA5 AD 6E 01                           lda $16e
08AA8 CD 61 01                           cmp $161
08AAB D0 04                              bne khm15
08AAD 20 B8 88                          jsr map_quiz
08AB0 60                                  rts
08AB1                           
08AB1 CE 6F 01                  khm15:  dec $16f
08AB4 EE 6E 01                          inc $16e
08AB7 AD 6F 01                          lda $16f
08ABA CD 6D 01                           cmp $16d
08ABD D0 0C                              bne khm16
08ABF AD 6E 01                           lda $16e
08AC2 CD 61 01                           cmp $161
08AC5 D0 04                              bne khm16
08AC7 20 B8 88                          jsr map_quiz
08ACA 60                                 rts
08ACB                           
08ACB CE 6F 01                  khm16:  dec $16f
08ACE EE 6E 01                          inc $16e
08AD1 AD 6F 01                          lda $16f
08AD4 CD 6D 01                           cmp $16d
08AD7 D0 0C                              bne khm17
08AD9 AD 6E 01                           lda $16e
08ADC CD 61 01                           cmp $161
08ADF D0 04                              bne khm17
08AE1 20 B8 88                          jsr map_quiz
08AE4 60                                   rts
08AE5                           
08AE5 CE 6F 01                  khm17:  dec $16f
08AE8 EE 6E 01                          inc $16e
08AEB AD 6F 01                          lda $16f
08AEE CD 6D 01                           cmp $16d
08AF1 D0 0C                              bne khm18
08AF3 AD 6E 01                           lda $16e
08AF6 CD 61 01                           cmp $161
08AF9 D0 04                              bne khm18
08AFB 20 B8 88                          jsr map_quiz
08AFE 60                                 rts
08AFF                           ;;
08AFF                           
08AFF CE 6F 01                  khm18:  dec $16f
08B02 CE 6E 01                          dec $16e
08B05 AD 6F 01                          lda $16f
08B08 CD 6D 01                           cmp $16d
08B0B D0 0C                              bne khm19
08B0D AD 6E 01                           lda $16e
08B10 CD 61 01                           cmp $161
08B13 D0 04                              bne khm19
08B15 20 B8 88                          jsr map_quiz
08B18 60                                 rts
08B19                           
08B19 CE 6F 01                  khm19:  dec $16f
08B1C CE 6E 01                          dec $16e
08B1F AD 6F 01                          lda $16f
08B22 CD 6D 01                           cmp $16d
08B25 D0 0C                              bne khm20
08B27 AD 6E 01                           lda $16e
08B2A CD 61 01                           cmp $161
08B2D D0 04                              bne khm20
08B2F 20 B8 88                          jsr map_quiz
08B32 60                                 rts
08B33                           
08B33 CE 6F 01                  khm20:  dec $16f
08B36 CE 6E 01                          dec $16e
08B39 AD 6F 01                          lda $16f
08B3C CD 6D 01                           cmp $16d
08B3F D0 0C                              bne khm21
08B41 AD 6E 01                           lda $16e
08B44 CD 61 01                           cmp $161
08B47 D0 04                              bne khm21
08B49 20 B8 88                          jsr map_quiz
08B4C 60                                  rts
08B4D                           
08B4D CE 6F 01                  khm21:  dec $16f
08B50 CE 6E 01                          dec $16e
08B53 AD 6F 01                          lda $16f
08B56 CD 6D 01                           cmp $16d
08B59 D0 0C                              bne khm22
08B5B AD 6E 01                           lda $16e
08B5E CD 61 01                           cmp $161
08B61 D0 04                              bne khm22
08B63 20 B8 88                          jsr map_quiz
08B66 60                                 rts
08B67                           
08B67 CE 6F 01                  khm22:  dec $16f
08B6A CE 6E 01                          dec $16e
08B6D AD 6F 01                          lda $16f
08B70 CD 6D 01                           cmp $16d
08B73 D0 0B                              bne khm23
08B75 AD 6E 01                           lda $16e
08B78 CD 61 01                           cmp $161
08B7B D0 03                              bne khm23
08B7D 20 B8 88                          jsr map_quiz
08B80                           
08B80 60                        khm23:rts
08B81                           
08B81                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08B81                           ultimate:
08B81 AD 33 01                        lda $133
08B84 C9 01                           cmp #1
08B86 D0 0C                           bne u1_quiz
08B88 AD 74 01                        lda $174
08B8B C9 01                           cmp #1
08B8D D0 05                           bne u1_quiz
08B8F A9 01                           lda #1
08B91 8D 78 01                        sta $178
08B94                           
08B94                           
08B94                           
08B94                           
08B94 AD 70 01                   u1_quiz: lda $170
08B97 C9 01                           cmp #1
08B99 D0 0C                           bne u2_quiz
08B9B AD 74 01                        lda $174
08B9E C9 01                           cmp #1
08BA0 D0 05                           bne u2_quiz
08BA2 A9 01                           lda #1
08BA4 8D 79 01                        sta $179
08BA7                           
08BA7                           
08BA7                           
08BA7 AD 71 01                   u2_quiz: lda $171
08BAA C9 01                           cmp #1
08BAC D0 0C                           bne u3_quiz
08BAE AD 74 01                        lda $174
08BB1 C9 01                           cmp #1
08BB3 D0 05                           bne u3_quiz
08BB5 A9 01                           lda #1
08BB7 8D 80 01                        sta $180
08BBA                           
08BBA                           
08BBA AD 72 01                  u3_quiz:  lda $172
08BBD C9 01                           cmp #1
08BBF D0 0C                           bne u4_quiz
08BC1 AD 74 01                        lda $174
08BC4 C9 01                           cmp #1
08BC6 D0 05                           bne u4_quiz
08BC8 A9 01                           lda #1
08BCA 8D 81 01                        sta $181
08BCD                           
08BCD AD 73 01                   u4_quiz: lda $173
08BD0 C9 01                           cmp #1
08BD2 D0 0C                           bne u5_quiz
08BD4 AD 74 01                        lda $174
08BD7 C9 01                           cmp #1
08BD9 D0 05                           bne u5_quiz
08BDB A9 01                           lda #1
08BDD 8D 82 01                        sta $182
08BE0                           
08BE0                           
08BE0                           
08BE0 60                         u5_quiz: rts
08BE1                           
08BE1                           
08BE1                           ;;;;;;;;;;;;;;;;;;;;;
08BE1                           found1:
08BE1                           
08BE1 AD 78 01                         lda $178
08BE4 C9 01                            cmp #1
08BE6 D0 28                            bne go1
08BE8                           
08BE8                           
08BE8 A5 29                            lda $29
08BEA C9 50                            cmp #80
08BEC D0 16                            bne con1_quiz
08BEE                           
08BEE 20 D1 8C                         jsr disable1
08BF1                           
08BF1 A9 00                            lda #0
08BF3 8D 33 01                         sta $133
08BF6 8D 74 01                        sta $174
08BF9 85 29                            sta $29
08BFB 8D 78 01                         sta $178
08BFE A9 00                         lda #$00
08C00 8D 02 05                         sta $502
08C03 60                               rts
08C04                           
08C04                           
08C04                            con1_quiz:
08C04                           
08C04                           
08C04 E6 29                            inc $29
08C06                           
08C06 A9 01                            lda #$01
08C08 8D 02 05                         sta $502
08C0B A9 13                            lda #$13
08C0D 8D 01 05                         sta $501
08C10                           
08C10                           
08C10 60                           go1: rts
08C11                           
08C11                           
08C11                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08C11                            found2:
08C11                           
08C11 AD 79 01                         lda $179
08C14 C9 01                            cmp #1
08C16 D0 28                            bne go2
08C18                                  
08C18                           
08C18 A5 30                            lda $30
08C1A C9 50                            cmp #80
08C1C D0 16                            bne con2
08C1E                           
08C1E 20 F9 8C                         jsr disable2
08C21                           
08C21 A9 00                            lda #0
08C23 8D 70 01                         sta $170
08C26 8D 74 01                         sta $174
08C29 85 30                            sta $30
08C2B 8D 79 01                         sta $179
08C2E A9 00                            lda #$00
08C30 8D 06 05                         sta $506
08C33 60                               rts
08C34                           
08C34                           
08C34                            con2:
08C34                           
08C34                           
08C34 E6 30                            inc $30
08C36 A9 01                            lda #$01
08C38 8D 06 05                         sta $506
08C3B A9 13                            lda #$13
08C3D 8D 05 05                         sta $505
08C40                           
08C40 60                           go2: rts
08C41                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;
08C41                           found3:
08C41                           
08C41 AD 80 01                         lda $180
08C44 C9 01                            cmp #1
08C46 D0 28                            bne go3
08C48                           ;
08C48                           
08C48 A5 31                            lda $31
08C4A C9 50                            cmp #80
08C4C D0 16                            bne con3
08C4E                           
08C4E 20 21 8D                         jsr disable3
08C51 A9 00                            lda #0
08C53 8D 71 01                         sta $171
08C56 8D 74 01                         sta $174
08C59 85 31                            sta $31
08C5B 8D 80 01                         sta $180
08C5E A9 00                         lda #$00
08C60 8D 0A 05                         sta $50A
08C63 60                               rts
08C64                           
08C64                           
08C64                            con3:
08C64                           
08C64                           
08C64 E6 31                            inc $31
08C66 A9 01                             lda #$01
08C68 8D 0A 05                         sta $50A
08C6B A9 13                            lda #$13
08C6D 8D 09 05                         sta $509
08C70                           
08C70 60                           go3: rts
08C71                           
08C71                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;
08C71                           found4:
08C71                           
08C71 AD 81 01                       lda $181
08C74 C9 01                            cmp #1
08C76 D0 28                            bne go4
08C78                            ;     
08C78                           
08C78 A5 32                            lda $32
08C7A C9 50                            cmp #80
08C7C D0 16                            bne con4
08C7E 20 49 8D                         jsr disable4
08C81 A9 00                            lda #0
08C83 8D 72 01                         sta $172
08C86 8D 74 01                         sta $174
08C89 85 32                            sta $32
08C8B 8D 81 01                         sta $181
08C8E A9 00                          lda #$00
08C90 8D 0E 05                         sta $50E
08C93 60                               rts
08C94                           
08C94                           
08C94                            con4:
08C94                           
08C94                           
08C94 E6 32                            inc $32
08C96 A9 01                            lda #$01
08C98 8D 0E 05                         sta $50E
08C9B A9 13                            lda #$13
08C9D 8D 0D 05                         sta $50D
08CA0                           
08CA0 60                           go4: rts
08CA1                           ;;;;;;;;;;;;;;;;;;;;;;;;;
08CA1                           found5:
08CA1                           
08CA1 AD 82 01                         lda $182
08CA4 C9 01                            cmp #1
08CA6 D0 28                            bne go5
08CA8                             ;    
08CA8                           
08CA8 A5 33                            lda $33
08CAA C9 50                            cmp #80
08CAC D0 16                            bne con5
08CAE 20 71 8D                         jsr disable5
08CB1 A9 00                            lda #0
08CB3 8D 73 01                         sta $173
08CB6 8D 74 01                         sta $174
08CB9 85 33                            sta $33
08CBB 8D 82 01                         sta $182
08CBE A9 00                           lda #$00
08CC0 8D 12 05                         sta $512
08CC3 60                               rts
08CC4                           
08CC4                           
08CC4                            con5:
08CC4                           
08CC4                           
08CC4 E6 33                            inc $33
08CC6 A9 01                            lda #$01
08CC8 8D 12 05                         sta $512
08CCB                           
08CCB A9 13                            lda #$13
08CCD 8D 11 05                         sta $511
08CD0                           
08CD0 60                           go5: rts
08CD1                           
08CD1                           
08CD1                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08CD1 EE 84 01                  disable1:  inc $184
08CD4 A5 BD                            lda $bd
08CD6 CD E8 03                         cmp #1000
08CD9 D0 11                            bne con11
08CDB A9 00                            lda #0
08CDD 85 BD                            sta $bd
08CDF                           
08CDF 20 E4 C7                         jsr random_gen
08CE2 8D 00 05                         sta $500
08CE5 20 E4 C7                         jsr random_gen
08CE8 8D 03 05                         sta $503
08CEB                           
08CEB 60                               rts
08CEC                            con11:
08CEC E6 BD                            inc $bd
08CEE                                  
08CEE A9 00                            lda #$00
08CF0 8D 02 05                         sta $502
08CF3 A9 04                            lda #$04
08CF5 8D 01 05                         sta $501
08CF8 60                               rts
08CF9                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08CF9 EE 84 01                  disable2:inc $184
08CFC A5 BE                            lda $be
08CFE CD E8 03                         cmp #1000
08D01 D0 11                            bne con22
08D03 A9 00                            lda #0
08D05 85 BE                            sta $be
08D07                           
08D07                                 ; inc random44
08D07 20 E4 C7                         jsr random_gen
08D0A 8D 04 05                         sta $504
08D0D                                ;  inc random44
08D0D 20 E4 C7                         jsr random_gen
08D10 8D 07 05                         sta $507
08D13                           
08D13 60                               rts
08D14                            con22:
08D14 E6 BE                            inc $be
08D16 A9 00                            lda #$00
08D18 8D 06 05                         sta $506
08D1B A9 04                            lda #$04
08D1D 8D 05 05                         sta $505
08D20 60                               rts
08D21                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08D21 EE 84 01                  disable3: inc $184
08D24 A5 BF                            lda $bf
08D26 CD E8 03                         cmp #1000
08D29 D0 11                            bne con33
08D2B A9 00                            lda #0
08D2D 85 BF                            sta $bf
08D2F                           
08D2F                                ;  inc random44
08D2F 20 E4 C7                         jsr random_gen
08D32 8D 08 05                         sta $508
08D35                                 ; inc random44
08D35 20 E4 C7                         jsr random_gen
08D38 8D 0B 05                         sta $50B
08D3B                           
08D3B 60                               rts
08D3C                            con33:
08D3C E6 BF                            inc $bf
08D3E A9 00                            lda #$00
08D40 8D 0A 05                         sta $50A
08D43 A9 04                            lda #$04
08D45 8D 09 05                         sta $509
08D48 60                               rts
08D49                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08D49 EE 84 01                  disable4: inc $184
08D4C A5 C0                            lda $c0
08D4E CD E8 03                         cmp #1000
08D51 D0 11                            bne con44
08D53 A9 00                            lda #0
08D55 85 C0                            sta $c0
08D57                           
08D57                                ;  inc random44
08D57 20 E4 C7                         jsr random_gen
08D5A 8D 0C 05                         sta $50C
08D5D                                ;  inc random44
08D5D 20 E4 C7                         jsr random_gen
08D60 8D 0F 05                         sta $50F
08D63                           
08D63 60                               rts
08D64                            con44:
08D64 E6 C0                            inc $c0
08D66 A9 00                            lda #$00
08D68 8D 0E 05                         sta $50E
08D6B A9 04                            lda #$04
08D6D 8D 0D 05                         sta $50D
08D70 60                               rts
08D71                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08D71 EE 84 01                  disable5: inc $184
08D74 AD 77 01                         lda $177
08D77 CD E8 03                         cmp #1000
08D7A D0 12                            bne con55
08D7C A9 00                            lda #0
08D7E 8D 77 01                         sta $177
08D81                           
08D81                                ;  inc random44
08D81 20 E4 C7                         jsr random_gen
08D84 8D 10 05                         sta $510
08D87                               ;   inc random44
08D87 20 E4 C7                         jsr random_gen
08D8A 8D 13 05                         sta $513
08D8D                           
08D8D 60                               rts
08D8E                            con55:
08D8E EE 77 01                         inc $177
08D91 A9 00                            lda #$00
08D93 8D 12 05                         sta $512
08D96 A9 04                            lda #$04
08D98 8D 11 05                         sta $511
08D9B 60                               rts
08D9C                           
08D9C                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08D9C                           palette_mal:
08D9C                           
08D9C 19 00 0F 30 19 18 27 08..       .byte $19,$00,$0f,$30,  $19,$18,$27,$08,   $19,$21,$01,$3C, $19,$0E,$0A,$0B
08DAC                           
08DAC 19 07 00 0F 19 07 15 0F..       .byte $19,$07,$00,$0f,    $19,$07,$15,$0f, $19,$07,$1c,$0f, $19,$07,$30,$0f
08DBC                           
08DBC                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08DBC                           screen_malaria:
08DBC F6 F6 F6 F6 F6 F6 F6 F6..         .incbin "pic0.nam"
091BC                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
091BC                           sprites_malaria:
091BC                              ;vert tile attr horiz
091BC 10 02 00 10               .db $10, $02, $00, $10 ;sprite 0
091C0 30 02 00 80               .db $30, $02, $00, $80 ;sprite 0
091C4 78 02 00 40               .db $78, $02, $00, $40 ;sprite 0
091C8 58 02 00 88               .db $58, $02, $00, $88 ;sprite 0
091CC 90 02 00 30               .db $90, $02, $00, $30 ;sprite 0
091D0                           ;.db $A8, $02, $00, $58 ;sprite 0
091D0                           ;.db $C0, $02, $00, $90 ;sprite 0
091D0                           
091D0                           
091D0 78 04 00 80               .db $78, $04, $00, $80 ;sprite 0
091D4 78 01 00 88               .db $78, $01, $00, $88 ;sprite 0
091D8 80 10 00 80               .db $80, $10, $00, $80 ;sprite 0
091DC 80 11 00 88               .db $80, $11, $00, $88 ;sprite 0
091E0                           
091E0 81 22 03 14               .db $81, $22, $03, $14 ;sprite 0
091E4 C9 22 03 B5               .db $C9, $22, $03, $B5 ;sprite 0
091E8                           
091E8 20 40 02 60               .db $20, $40, $02, $60 ;sprite 0
091EC 20 41 02 68               .db $20, $41, $02, $68 ;sprite 0
091F0 28 50 03 60               .db $28, $50, $03, $60 ;sprite 0
091F4 28 51 03 68               .db $28, $51, $03, $68 ;sprite 0
091F8 30 60 02 60               .db $30, $60, $02, $60 ;sprite 0
091FC 30 61 02 68               .db $30, $61, $02, $68 ;sprite 0
09200 38 70 02 60               .db $38, $70, $02, $60 ;sprite 0
09204 38 71 02 68               .db $38, $71, $02, $68 ;sprite 0
09208                           
09208 60 42 01 90               .db $60, $42, $01, $90 ;sprite 0
0920C 60 43 01 98               .db $60, $43, $01, $98 ;sprite 0
09210 68 52 03 90               .db $68, $52, $03, $90 ;sprite 0
09214 68 53 03 98               .db $68, $53, $03, $98 ;sprite 0
09218 70 62 01 90               .db $70, $62, $01, $90 ;sprite 0
0921C 70 63 01 98               .db $70, $63, $01, $98 ;sprite 0
09220 78 72 01 90               .db $78, $72, $01, $90 ;sprite 0
09224 78 73 01 98               .db $78, $73, $01, $98 ;sprite 0
09228                           
09228                           demoscreen:
09228 DF DF DF DF DF DF DF DF..         .incbin "demoscreen.nam"
09628                                   
09628                                   
09628                           pal_fordemo1:
09628 31 11 30 0F 31 38 30 0F.. .byte $31,$11,$30,$0f,$31,$38,$30,$0f,$31,$38,$00,$0f,$31,$30,$00,$0f
09638 31 11 30 0F 31 38 30 0F.. .byte $31,$11,$30,$0f,$31,$38,$30,$0f,$31,$38,$00,$0f,$31,$30,$00,$0f
09648                           
09648                           LoadAddy = $AB50
09648                           InitAddy = $AB50
09648                           PlayAddy = $AB53
09648                           
09648 00 00 00 00 00 00 00 00.. .org LoadAddy
0AB50 4C 83 AB 4C 8B AD BD 7E.. .incbin "malaria.nsf"      ; NSF filename
0BE13                           
0BE13 00 00 00 00 00 00 00 00.. .org $c000
0C000                           
0C000                           .base $8000
08000                           type_screen:
08000 00 00 00 00 00 00 00 00.. .incbin "type_screen_load.nam"
08400                           start_screen11:
08400 00 00 00 00 00 00 00 00.. .incbin "start.nam"
087C0 00 00 00 00 00 00 00 00.. .org $c000
0C000                           
0C000                           
0C000                           .base $8000
08000                           .include typ_end.asm
08000                           typ_end_Compare:
08000                           
08000 AD 40 01                  lda var_new                     ;;;;;; triggering for going into compare for snake level
08003 C9 01                     cmp #1
08005 F0 01                     beq @com_jmp
08007 60                        rts
08008                           
08008                           @com_jmp:
08008                           
08008                           ;LDA var1                       ;;;;;;; checking if keyboard input is working
08008                           ;cmp #1
08008                           ;beq @c
08008 AC 12 01                  ldy pointer     ; it points to current letter that should be pressed by the user. pointer is a number. we will load the letter from library
0800B AE 0D 01                  ldx Current     ; this stores the current letter pressed by the user
0800E B9 4F 82                  lda word_end,y   ; load the expected letter into accumaltor
08011 CD 0D 01                  cmp Current  ;        compare with the currently pressed letter
08014 F0 09                     beq @Found              ; correct letter is pressed
08016 A9 00                     lda #0
08018 8D 0D 01                  sta Current
0801B EE 04 05                  inc $504
0801E 60                        @c:RTS
0801F                           
0801F                           @Found:                           ;;;;;; if word typed is correct then going in found
0801F                            ;;;;;;;;
0801F                                    ;lda #0
0801F                                    ;sta ps2
0801F                                    ;jsr arrow11
0801F                                    ;jsr LoadSprites98
0801F                           
0801F A9 00                              lda #0
08021 8D 0D 01                           sta Current
08024 A9 01                        lda #1
08026 8D 3E 01                     sta under1
08029 EE 13 01                     inc wl                          ; this will increse the wl. So if "RO" are pressed then wl = 2 and if "C" is pressed then wl=3
0802C AE 13 01                     ldx wl                          ; is the current lenght of the letters pressed of a word
0802F                                                   ; level number. - how many words r completed for "ROCK" it is wordnum = 1
0802F AC 15 01                     ldy wordnum
08032 B9 95 A4                     lda NumberofLetters,y           ; load the no.of letters in word. here for rock,it will load 4
08035 8D 1F 01                     sta $11f
08038 EE 12 01                     inc pointer                     ; increment pointer so now it points to the next correct letter
0803B                           
0803B                           
0803B A9 01                         LDA #$01
0803D 85 28                         STA $28
0803F 85 29                         STA $29
08041 20 BC 8D                      jsr map                       ;;;;;;; mapping for how many steps word has to be completed
08044 AC 15 01                      ldy wordnum
08047 B9 4E 82                      lda NumberofLetters_end,y
0804A 8D 1F 01                      sta $11f                          ; this loads that word 1 has how many letters . 4 will be loaded
0804D CD 13 01                      cmp wl                          ; compare with current lenght of the current word.
08050 F0 01                         BEQ @newword                     ; ie wordnum is 1. so lda will be 4. wl is 4 then new word
08052 60                            RTS
08053                           
08053                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08053                           @newword:
08053                           
08053 A9 00                              lda #0
08055 8D 13 01                           sta wl              ; now wl is reset to zero. wl keeps the no. of letters pressed by user for current word
08058                                    ;sta delay_cal_quiz       ;;;;; initializing delay value to 0
08058                                    ;sta var_new         ;;;;; disabling the first word comparision
08058 A9 01                              lda #1
0805A                                    ;sta var01           ;;;; initialising the trigger for second comparision
0805A                                    ;sta trig_delay      ;;;; initialising the time limit for secon word detection
0805A                                    ;sta clearing_byte
0805A                           
0805A                                    ;jsr mon_1           ;;;; loading the initial monster again
0805A                           
0805A                                    ;lda #0
0805A                                    ;sta key
0805A 60                                 RTS
0805B                           
0805B                           ;               ---------------------------------------------------------------------
0805B                           
0805B                           
0805B                           loading_letters_end:              ;;;; loading the first letter
0805B                           
0805B                           
0805B                           
0805B AD 27 01                                  lda trigger
0805E C9 01                                     cmp #1
08060 F0 01                                     beq @start
08062 60                                        rts
08063                           
08063                           @start:
08063 A0 00                                     ldy #00
08065 A2 00                                     ldx #00
08067 A9 00                                     lda #%00000000             ;off the screen
08069 8D 01 20                                  sta $2001
0806C                           
0806C AD 02 20                                  LDA $2002             ; read PPU status to reset the high/low latch
0806F A9 23                                     LDA #$23
08071 8D 06 20                                  STA $2006             ; write the high byte of $2000 address
08074 A9 63                                     LDA #$63
08076 8D 06 20                                  STA $2006
08079                           
08079                                                       ; write the low byte of $2000 address
08079                           @start1:
08079 AE 29 01                                  ldx total_letters
0807C BD 4F 82                                  lda word_end,x
0807F 8D 07 20                                  sta $2007             ;we are stoaring a character in address 0595+y
08082 EE 2B 01                                  inc ttempx
08085 EE 29 01                                  inc total_letters
08088 E8                                        inx
08089 B9 4E 82                                  lda NumberofLetters_end,y  ;loading length of the word in accumulator
0808C CD 2B 01                                  cmp ttempx                ;comparing the value of x with the value stored in accumulator
0808F D0 E8                                     bne @start1
08091                           
08091 A9 1E                                     lda #%00011110
08093 8D 01 20                                  sta $2001
08096 AD 04 01                                  lda PPUCRTL
08099 8D 00 20                                  sta $2000
0809C A5 A3                                     lda $A3
0809E 8D 05 20                                  sta $2005
080A1 A5 A4                                     lda $A4
080A3 8D 05 20                                  sta $2005
080A6                           
080A6 A9 00                                     lda #0
080A8 8D 2B 01                                  sta ttempx
080AB 8D 27 01                                  sta trigger
080AE                                           ;lda #1
080AE                                           ;sta trigger0
080AE 20 66 82                                  jsr LoadSprites98
080B1 A9 04                                     lda #4
080B3 8D 5B 01                                  sta level_change
080B6 A9 02                                     lda #2
080B8 8D 5E 01                                  sta game_no
080BB                                ;  jsr kishan_chal
080BB                           
080BB 60                                        RTS
080BC                           ;               --------------------------------------------------------------------
080BC                           update_spritespp:
080BC                           
080BC A9 00                             LDA #$00
080BE 8D 03 20                          STA $2003 ; set the low byte (00) of the RAM address
080C1 A9 05                             LDA #$05
080C3 8D 14 40                          STA $4014 ; set the high byte (05) of the RAM address, start the transfer
080C6 60                                RTS
080C7                           ;               --------------------------------------------------------------------
080C7                           ClearSprites12:
080C7 A9 00                           lda #0
080C9 A2 00                           ldx #0
080CB                           @loop:
080CB 9D 00 05                        STA $500, x
080CE E8                              INX
080CF D0 FA                           BNE @loop
080D1 60                              rts
080D2                           ;               --------------------------------------------------------------------
080D2                           typ_end_loading_underlines:                       ;;;;;;;;loading underline for the second word
080D2 AD 3E 01                                     lda under1
080D5 C9 01                                        cmp #1
080D7 F0 01                                        beq @under_jmp1
080D9 60                                           rts
080DA                           @under_jmp1:
080DA AD 5C 01                            lda clearing_byte
080DD C9 01                               cmp #1
080DF D0 05                               bne @start_under
080E1 A9 00                               lda #0
080E3 8D 3D 01                            sta lower_byte
080E6                           @start_under:
080E6 EE 5C 01                               inc clearing_byte
080E9 AC 3D 01                            ldy lower_byte
080EC A9 A0                               lda #$A0
080EE AD 02 20                            LDA $2002             ; read PPU status to reset the high/low latch
080F1 A9 23                               LDA #$23
080F3 8D 06 20                            STA $2006             ; write the high byte of $2000 address
080F6 B9 EF A3                            LDA Lower_byte_pal2,y
080F9 8D 06 20                            STA $2006
080FC                           
080FC A9 ED                               lda #$ED
080FE 8D 07 20                            sta $2007
08101                           
08101 EE 3D 01                            inc lower_byte
08104                                     ;lda #%00011110
08104                                     ;sta $2001
08104 AD 04 01                            lda PPUCRTL
08107 8D 00 20                        sta $2000
0810A A5 A3                           lda $A3
0810C 8D 05 20                        sta $2005
0810F A5 A4                           lda $A4
08111 8D 05 20                        sta $2005
08114                           
08114 A9 00                               lda #0
08116 8D 3E 01                            sta under1
08119 60                                  rts
0811A                           ;       ---------------------------------------------------
0811A                           typ_end_clearing_underlines:                    ;;;;;;;;;;;clearing underlines
0811A AD 3F 01                                      lda under2
0811D C9 01                                        cmp #1
0811F F0 01                                        beq @under_jmp2
08121 60                                           rts
08122                           @under_jmp2:
08122                                     ;lda #%00000000             ;off the screen
08122                                     ;sta $2001
08122 AC 3D 01                            ldy lower_byte
08125 A9 A0                               lda #$A0
08127 AD 02 20                            LDA $2002             ; read PPU status to reset the high/low latch
0812A A9 23                               LDA #$23
0812C 8D 06 20                            STA $2006             ; write the high byte of $2000 address
0812F A9 8C                               LDA #$8c
08131 8D 06 20                            STA $2006
08134 A2 00                               ldx #0
08136                           
08136                           @loop_under:
08136 A9 FD                               lda #$FD
08138 8D 07 20                            sta $2007
0813B E8                                  inx
0813C E0 14                               cpx #20
0813E D0 F6                               bne @loop_under
08140                           
08140                                     ;lda #%00011110
08140                                     ;sta $2001
08140 AD 04 01                            lda PPUCRTL
08143 8D 00 20                        sta $2000
08146 A5 A3                           lda $A3
08148 8D 05 20                        sta $2005
0814B A5 A4                           lda $A4
0814D 8D 05 20                        sta $2005
08150                           
08150 A9 00                               lda #0
08152 8D 3F 01                            sta under2
08155 8D 3D 01                            sta lower_byte
08158 60                                  rts
08159                           ;       -------------------------------------------------------------------------
08159                           ResetKeyboard_end:
08159 A9 04                       lda #%00000100
0815B 8D 16 40                    sta $4016
0815E A9 05                       lda #%00000101
08160 8D 16 40                    sta $4016        ;;sets keyboard row/column to 0
08163 A9 04                       lda #%00000100
08165 8D 16 40                    sta $4016
08168 60                          rts
08169                           
08169                           ; ----------------------------------------------------------------------------------
08169                             ;;
08169                           ReadKeyboard_end:
08169 A2 00                       ldx #$00                ;;byte counter
0816B                           @ReadKeyboardLoop:
0816B A9 00                       lda #%00000000          ;;set to low column
0816D AD 17 40                    lda $4017
08170 4A                          lsr a                   ;;dont use d0
08171 29 0F                       and #$0F
08173 9D 00 03                    sta $0300, x            ;;get low column 4 bits
08176                           
08176 A9 06                       lda #%00000110          ;;set to high column
08178 8D 16 40                    sta $4016
0817B                           
0817B AD 17 40                    lda $4017
0817E 0A                          asl a
0817F 0A                          asl a
08180 0A                          asl a
08181 29 F0                       and #$F0
08183 1D 00 03                    ora $0300, x            ;;get high column 4 bits
08186 9D 00 03                    sta $0300, x
08189                           
08189 E8                          inx
0818A E0 0D                       cpx #$0D                ;;count 13 rows
0818C F0 08                       beq @ReadKeyboardLoopDone
0818E                           @ReadKeyboardLoopNextRow:
0818E A9 04                       lda #%00000100          ;;set to low column, increments row
08190 8D 16 40                    sta $4016
08193 4C 6B 81                    jmp @ReadKeyboardLoop
08196                           
08196                           @ReadKeyboardLoopDone:
08196                           
08196                           
08196 60                          rts
08197                           
08197                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
08197                           
08197                           
08197                           ParseKeyboard_end:
08197 A2 00                       ldx #$00                  ;;which keyboard byte
08199                           @ParseKeyboardByteLoop:
08199 A0 00                       ldy #$00                  ;;which bit in byte to look at
0819B A9 01                       lda #$01
0819D 8D 05 01                    sta bitmask               ;;start with lowest bit
081A0                           
081A0                           @ParseKeyboardBitLoop:
081A0 BD 00 03                    lda $0300, x              ;;get keyboard byte
081A3 2D 05 01                    and bitmask               ;;mask off all but 1 bit
081A6 F0 10                       beq @ParseKeyboardFound    ;;if bit CLEAR, button is DOWN
081A8                           
081A8                           @ParseKeyboardNextBit:
081A8 0E 05 01                    asl bitmask               ;;go to next bit
081AB C8                          iny                       ;;look at all 8 bits
081AC C0 08                       cpy #$08
081AE D0 F0                       bne @ParseKeyboardBitLoop
081B0                           
081B0                           @ParseKeyboardNextByte:
081B0 E8                          inx                       ;;go to next byte
081B1 E0 0D                       cpx #$0D                  ;;13 rows
081B3 D0 E4                       bne @ParseKeyboardByteLoop
081B5                           
081B5                           @ParseKeyboardNotFound:      ;;no keys down were found
081B5                           
081B5                           
081B5 A9 30                       lda #'\0'
081B7                           ;  sta $0501                 ;;set tile to empty
081B7 60                          rts
081B8                           
081B8                           @ParseKeyboardFound:
081B8                           
081B8                           
081B8 8A                          txa
081B9 0A                          asl a
081BA 0A                          asl a
081BB 0A                          asl a
081BC 8D 06 01                    sta temp                  ;;shift byte counter up  xxxxx000
081BF                           
081BF 98                          tya
081C0 0D 06 01                    ora temp                  ;;add in bit counter     xxxxxyyy
081C3 AA                          tax
081C4                            ;;;;;;;;;;
081C4 A5 29                      lda $29
081C6                           
081C6                           
081C6                           
081C6 C9 01                      cmp #$01
081C8                           
081C8                           
081C8 F0 06                      BEQ over1234
081CA                           
081CA                             ;;;;;;
081CA BD E6 81                    lda keyboard_end, x           ;;load that character
081CD                             ;;;;;;;;;;;;;;
081CD                           
081CD                             ;;;;;;;;;
081CD 8D 0D 01                    sta Current                 ;;store into sprite tile
081D0                           
081D0                           
081D0                           
081D0                           
081D0                             over1234:
081D0 60                          rts
081D1                             
081D1                             
081D1                           
081D1                             kishan_chal:
081D1 A9 43                       lda #$43
081D3 8D 01 05                    sta $501
081D6                           
081D6 8D 05 05                    sta $505
081D9                           
081D9 8D 09 05                    sta $509
081DC 8D 0D 05                    sta $50D
081DF 8D 11 05                    sta $511
081E2 8D 15 05                    sta $515
081E5                           
081E5 60                          rts
081E6                           ; ------------------------------------------------------------------------------------
081E6                           keyboard_end:
081E6                             ; SUBOR compatible layout
081E6 34 47 46 43 32 45 35 56     .db '4', 'G', 'F', 'C', '2', 'E', '5', 'V'
081EE 32 44 53 45 31 57 33 58     .db '2', 'D', 'S', 'E', '1', 'W', '3', 'X'
081F6 49 42 4E 52 38 50 44 48     .db 'I', 'B', 'N', 'R', '8', 'P', 'D', 'H'
081FE 39 49 4C 2C 35 4F 30 2E     .db '9', 'I', 'L', ',', '5', 'O', '0', '.'
08206 5B 52 55 4C 37 30 30 44     .db '[', 'R', 'U', 'L', '7', '0', '0', 'D'
0820E 51 43 5A 54 45 41 31 43     .db 'Q', 'C', 'Z', 'T', 'E', 'A', '1', 'C'
08216 37 59 4B 4D 34 55 38 4A     .db '7', 'Y', 'K', 'M', '4', 'U', '8', 'J'
0821E 30 30 30 30 36 50 30 53     .db '0', '0', '0', '0', '6', 'P', '0', 'S'
08226 54 48 4E 20 33 52 36 42     .db 'T', 'H', 'N', ' ', '3', 'R', '6', 'B'
0822E 00 00 00 00 00 00 00 00     .dB  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0
08236 4D 34 37 31 32 31 32 38     .dB 'M', '4', '7', '1', '2', '1', '2', '8'
0823E 2D 2B 2A 39 30 35 2F 4E     .dB '-', '+', '*', '9', '0', '5', '/', 'N'
08246 60 36 50 20 39 33 2E 30     .dB '`', '6', 'P', ' ', '9', '3', '.', '0'
0824E                             ;   ---------------------------------------------------------------------
0824E                             NumberofLetters_end:
0824E 17                        .db #23
0824F                           
0824F                           word_end:
0824F 54 52 55 54 48 20 57 49.. .db 'T','R','U','T','H',' ','W','I','N','S',' ','A','G','A','I','N','S','T',' ','E','V','I','L'
08266                           
08266                           
08266                           
08266                           ;   -----------------------------------------------------------------------------
08266                           LoadSprites98:
08266 A2 00                           LDX #$00
08268                           @LoadSpritesLoop:
08268 BD 74 82                        LDA sprites_snow_end, x            ; load data from address (sprites + x)
0826B 9D 00 05                        STA $0500, x              ; store into RAM address ($0200 + x)
0826E E8                              INX                       ; X = X + 1
0826F E0 20                           CPX #32
08271                                                   ; Compare X to # of values (divide by 4 for total # of sprites)
08271 D0 F5                           BNE @LoadSpritesLoop
08273 60                              rts
08274                           ;     --------------------------------------------------------------------------------------
08274                                 
08274                            sprites_snow_end:     
08274 A0 1F 02 D0               .db $A0, $1f, $02, $D0 ;sprite 6
08278 A0 C3 02 D8               .db $A0, $c3, $02, $D8 ;sprite 7
0827C A0 C4 02 E0               .db $A0, $c4, $02, $E0 ;sprite 8
08280 A0 C5 02 E8               .db $A0, $c5, $02, $E8 ;sprite 8
08284                           
08284 A8 1F 02 D0               .db $A8, $1f, $02, $D0 ;sprite 9
08288 A8 D3 02 D8               .db $A8, $d3, $02, $D8 ;sprite 10
0828C A8 D4 02 E0               .db $A8, $d4, $02, $E0 ;sprite 11
08290 A8 D5 02 E8               .db $A8, $d5, $02, $E8 ;sprite 1108294 00 00 00 00 00 00 00 00.. .org $c000
0C000                           
0C000                           .base $8000
08000 00 00 00 00 00 00 00 00.. .org $c000
0C000                           
0C000                           .base  $c000
0C000                           Reset:                          ; reset routine
0C000 78                                SEI
0C001 D8                                CLD
0C002 A2 00                     	LDX #$00
0C004 8E 00 20                  	STX $2000
0C007 8E 01 20                  	STX $2001
0C00A CA                        	DEX
0C00B 9A                        	TXS
0C00C A2 00                       	LDX #0
0C00E 8A                          	TXA
0C00F                           ClearMemory:
0C00F 95 00                     	STA 0, X
0C011 9D 00 01                  	STA $100, X
0C014 9D 00 02                  	STA $200, X
0C017 9D 00 03                  	STA $300, X
0C01A 9D 00 04                  	STA $400, X
0C01D 9D 00 05                  	STA $500, X
0C020 9D 00 06                  	STA $600, X
0C023 9D 00 07                  	STA $700, X
0C026 9D 00 08                          STA $800, X
0C029 9D 00 09                          STA $900, X
0C02C E8                                INX
0C02D D0 E0                     	BNE ClearMemory
0C02F                           
0C02F                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C02F                           
0C02F A2 1F                             LDX #%00011111
0C031 20 D7 C1                          jsr initMMC1Mapper
0C034                           
0C034                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C034                           
0C034 A9 0A                             lda #10
0C036 85 11                             sta select_var
0C038 8D 00 01                          sta screen_start6
0C03B                           
0C03B A9 13                             lda #19
0C03D 85 86                             sta count2
0C03F 8D 8C 01                          sta stop_start
0C042                           
0C042 A9 0F                             lda #$0f
0C044 85 26                             sta $26
0C046                           
0C046 A9 06                             lda #6
0C048 85 27                             sta $27
0C04A A9 50                             lda #80
0C04C 85 97                             sta delay
0C04E                           
0C04E A9 06                             lda #6
0C050 85 BC                             sta time_hundreds
0C052 85 B5                             sta $b5
0C054                                   
0C054 A9 01                             lda #1
0C056 85 2C                             sta ps2
0C058                           
0C058                           
0C058                           
0C058                           ;       ----------------------------------------------------
0C058                           
0C058 A2 02                     	LDX #$02                ; warm up
0C05A                           WarmUp:
0C05A 2C 02 20                  	bit $2002
0C05D 10 FB                     	bpl WarmUp
0C05F CA                        	dex
0C060 D0 F8                     	BNE WarmUp
0C062                           
0C062 A9 3F                            	LDA #$3F
0C064 8D 06 20                  	STA $2006
0C067 A9 00                     	LDA #$00
0C069 8D 06 20                  	STA $2006
0C06C                           load_pal:                       ; load palette
0C06C BD 22 E8                          LDA palette,x
0C06F 8D 07 20                          sta $2007
0C072 E8                                inx
0C073 E0 20                             cpx #$20
0C075 D0 F5                             bne load_pal
0C077                           
0C077 A9 20                     	LDA #$20
0C079 8D 06 20                  	STA $2006
0C07C A9 00                     	LDA #$00
0C07E 8D 06 20                  	STA $2006
0C081                           
0C081 A0 04                     	ldy #$04                ; clear nametables
0C083                           ClearName:
0C083 A2 00                     	LDX #$00
0C085 A9 00                     	LDA #$00
0C087                           PPULoop
0C087 8D 07 20                  	STA $2007
0C08A CA                        	DEX
0C08B D0 FA                     	BNE PPULoop
0C08D                           
0C08D 88                        	DEY
0C08E D0 F3                     	BNE ClearName
0C090                           
0C090                           ;       ----------------------------------------------------
0C090 A9 0A                             lda #10
0C092 85 B0                             sta $B0
0C094 A9 20                           	LDA #$20                ; draw screen
0C096 8D 06 20                      	STA $2006
0C099 A9 00                         	LDA #$00
0C09B 8D 06 20                      	STA $2006
0C09E                           
0C09E A0 00                             ldy #$00
0C0A0 A2 04                             ldx #$04
0C0A2                           
0C0A2 A9 BA                             lda #<start_2in1
0C0A4 85 10                             sta $10
0C0A6 A9 EE                             lda #>start_2in1
0C0A8 85 11                             sta $11
0C0AA                           
0C0AA                           NameLoop:
0C0AA B1 10                             lda ($10),y
0C0AC 8D 07 20                          sta $2007
0C0AF C8                                iny
0C0B0 D0 F8                             bne NameLoop
0C0B2 E6 11                             inc $11
0C0B4 CA                                dex
0C0B5 D0 F3                             bne NameLoop
0C0B7                           
0C0B7                           ;----------------------------------
0C0B7 A9 28                     	LDA #$28                ; draw screen
0C0B9 8D 06 20                      	STA $2006
0C0BC A9 00                         	LDA #$00
0C0BE 8D 06 20                      	STA $2006
0C0C1                           
0C0C1 A0 00                             ldy #$00
0C0C3 A2 04                             ldx #$04
0C0C5                           
0C0C5 A9 3B                             lda #<screen2
0C0C7 85 10                             sta $10
0C0C9 A9 9B                             lda #>screen2
0C0CB 85 11                             sta $11
0C0CD                           
0C0CD                           NameLoop1:
0C0CD B1 10                             lda ($10),y
0C0CF 8D 07 20                          sta $2007
0C0D2 C8                                iny
0C0D3 D0 F8                             bne NameLoop1
0C0D5 E6 11                             inc $11
0C0D7 CA                                dex
0C0D8 D0 F3                             bne NameLoop1
0C0DA                           
0C0DA                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C0DA                           
0C0DA                           InitSprites:
0C0DA                                 ;CLEAR ALL OF SPRITE MEMORY TO AVOID GARBAGE SPRITES!
0C0DA A9 00                           LDA #$00
0C0DC A2 00                           LDX #$00
0C0DE A0 00                           LDY #$00
0C0E0 86 28                           stx $28
0C0E2 86 37                           stx $37
0C0E4 86 52                           stx $52
0C0E6 86 53                           stx $53
0C0E8 86 68                           stx $68
0C0EA 86 67                           stx $67
0C0EC 86 55                           stx $55
0C0EE 86 56                           stx $56
0C0F0 86 57                           stx $57
0C0F2 86 58                           stx $58
0C0F4 86 59                           stx $59
0C0F6 86 61                           stx $61
0C0F8 86 6A                           stx $6A
0C0FA 86 98                           stx L
0C0FC 86 99                           stx countl
0C0FE 86 9A                           stx countr
0C100 86 9B                           stx waitt
0C102 86 9C                           stx h1
0C104 86 9D                           stx h2
0C106 86 9E                           stx h3
0C108                           
0C108 86 60                           stx $60
0C10A                               ;  stx random4
0C10A A9 F0                           lda #240
0C10C 85 54                           sta $54
0C10E A9 01                           LDA #1
0C110 85 29                           sta $29
0C112 85 30                           sta $30
0C114 85 31                           sta $31
0C116 85 32                           sta $32
0C118 85 33                           sta $33
0C11A 85 34                           sta $34
0C11C 85 35                           sta $35
0C11E 85 36                           sta $36
0C120 8D 98 01                        sta trig_m8
0C123                           
0C123 85 CF                           sta trig_controller1
0C125                           
0C125 85 F8                           sta ps
0C127                           
0C127                           
0C127                                 ;;;;;;;;;;
0C127                           
0C127 A9 00                           lda #$00
0C129                           
0C129 85 38                           sta $38
0C12B 85 39                           sta $39
0C12D 85 40                           sta $40
0C12F 85 41                           sta $41
0C131 85 42                           sta $42
0C133 85 43                           sta $43
0C135 85 44                           sta $44
0C137 8D 95 01                        sta random8
0C13A 85 45                           sta $45
0C13C 85 46                           sta $46
0C13E 85 47                           sta $47
0C140 85 48                           sta $48
0C142 85 49                           sta $49
0C144 85 50                           sta $50
0C146 85 51                           sta $51
0C148 8D 96 01                        sta loc8
0C14B 85 8D                           sta varY1
0C14D                           
0C14D                           
0C14D A9 00                           lda #0
0C14F 85 69                           sta $69
0C151                           
0C151                           
0C151                                 ;;;;;;;;;;
0C151                           
0C151                           
0C151                           
0C151                           
0C151                           ClearSprites:
0C151 9D 00 05                        STA $500, x
0C154 E8                              INX
0C155 D0 FA                           BNE ClearSprites
0C157                           
0C157                           LoadSprites:
0C157 A2 00                           LDX #$00
0C159                           @LoadSpritesLoop:
0C159 BD 50 E7                        LDA sprites_2in1, x            ; load data from address (sprites + x)
0C15C 9D 00 05                        STA $0500, x              ; store into RAM address ($0200 + x)
0C15F E8                              INX                       ; X = X + 1
0C160 E0 04                           CPX #4
0C162                                                   ; Compare X to # of values (divide by 4 for total # of sprites)
0C162 D0 F5                           BNE @LoadSpritesLoop       ; Branch to LoadSpritesLoop if compare was Not Equal to zero
0C164                                                          ; if compare was equal to 32, keep going down
0C164                           ;;;;;;;;;;;;;;;;;;;;;;;
0C164                           
0C164                           
0C164                           ;LoadSprites1:
0C164                           ;      LDX #$00
0C164                           ;LoadSpritesLoop1:
0C164                           ;      LDA sprites_level, x            ; load data from address (sprites + x)
0C164                           ;      STA $0700, x              ; store into RAM address ($0200 + x)
0C164                           ;      INX                       ; X = X + 1
0C164                           ;      CPX #24
0C164                                                   ; Compare X to # of values (divide by 4 for total # of sprites)
0C164                           ;      BNE LoadSpritesLoop1       ; Branch to LoadSpritesLoop if compare was Not Equal to zero
0C164                                                          ; if compare was equal to 32, keep going down
0C164                           
0C164                           ;-------------------------------------
0C164                           
0C164                           
0C164                           ;       ----------------------------------------------------
0C164                           
0C164 A9 01                             lda #%00000001          ; (0: disable; 1: enable)
0C166                           ;                |||||
0C166                           ;                ||||+- Square 1
0C166                           ;                |||+-- Square 2
0C166                           ;                ||+--- Triangle
0C166                           ;                |+---- Noise
0C166                           ;                +----- DMC
0C166 8D 15 40                          sta $4015               ; enable / disable sound channels
0C169                           
0C169                           ;       ----------------------------------------------------
0C169                           
0C169                           Vblank:                         ; turn on the screen and start the party
0C169 2C 02 20                  	bit $2002
0C16C 10 FB                     	bpl Vblank
0C16E                           
0C16E A9 8A                     	LDA #%10001010
0C170 8D 00 20                  	STA $2000
0C173 85 A5                     	sta $A5
0C175 A9 1E                             LDA #%00011110
0C177 8D 01 20                  	STA $2001
0C17A                           
0C17A A2 00                             ldx #$00
0C17C 8E 05 20                          stx $2005
0C17F A2 EF                             LDX #239
0C181 86 A4                             stX $A4
0C183 8E 05 20                          stx $2005
0C186                           
0C186 20 8C C1                  jsr InitMusic
0C189                           
0C189                           ;       ----------------------------------------------------
0C189                           
0C189                           InfLoop:                        ; loop forever
0C189 4C 89 C1                          JMP InfLoop
0C18C                           
0C18C                           ;       ----------------------------------------------------
0C18C                           
0C18C                           InitMusic:
0C18C                           
0C18C A9 00                     	lda #$00
0C18E A2 00                     	ldx #$00
0C190                           Clear_Sound:
0C190 9D 00 40                  	sta $4000,x
0C193 E8                        	inx
0C194 E0 0F                     	cpx #$0F
0C196 D0 F8                     	bne Clear_Sound
0C198                           
0C198                           
0C198                           
0C198 A9 0F                     	lda #%00001111
0C19A 8D 15 40                   	STA $4015
0C19D A9 C0                     	lda #$C0
0C19F 8D 17 40                  	STA $4017
0C1A2                           
0C1A2 A5 F6                            LDA SongNumber		; song number
0C1A4 A2 00                           ldx #$0		; 00 for NTSC or $01 for PAL
0C1A6 20 50 AB                  	jsr InitAddy		; init address
0C1A9 60                               rts
0C1AA                           
0C1AA                           update_spr_2in1:
0C1AA A9 00                             LDA #$00
0C1AC 8D 03 20                          STA $2003 ; set the low byte (00) of the RAM address
0C1AF A9 05                             LDA #$05
0C1B1 8D 14 40                          STA $4014 ; set the high byte (05) of the RAM address, start the transfer
0C1B4 60                                RTS
0C1B5                           
0C1B5                           
0C1B5                           update_sprites:
0C1B5 A5 CF                                    LDA trig_controller1
0C1B7 C9 01                                    cmp #1
0C1B9 D0 1B                                    bne up_sprit_end
0C1BB                           
0C1BB A9 00                             LDA #$00
0C1BD 8D 03 20                          STA $2003 ; set the low byte (00) of the RAM address
0C1C0 A9 05                             LDA #$05
0C1C2 8D 14 40                          STA $4014 ; set the high byte (05) of the RAM address, start the transfer
0C1C5 60                                RTS
0C1C6                           
0C1C6                           
0C1C6                           update_sprites1:
0C1C6 A5 7A                             LDA control
0C1C8 C9 05                             cmp #5
0C1CA D0 0A                             bne up_sprit_end
0C1CC                           update_sprites11:
0C1CC A9 00                             LDA #$00
0C1CE 8D 03 20                          STA $2003 ; set the low byte (00) of the RAM address
0C1D1 A9 06                             LDA #$06
0C1D3 8D 14 40                          STA $4014 ; set the high byte (05) of the RAM address, start the transfer
0C1D6                           up_sprit_end:
0C1D6 60                                RTS
0C1D7                           
0C1D7                           
0C1D7                           initMMC1Mapper:
0C1D7 A9 80                       LDA #$80
0C1D9 8D 00 80                    STA $8000
0C1DC                           
0C1DC 8A                          TXA
0C1DD 20 F0 C1                    JSR setMMC1ControlMode
0C1E0                           
0C1E0 A9 04                       LDA #$04
0C1E2 20 04 C2                    JSR setCHRPage0000
0C1E5                           
0C1E5 A9 05                       LDA #$05
0C1E7 20 18 C2                    JSR setCHRPage1000
0C1EA                           
0C1EA                           
0C1EA A9 00                       LDA #$00
0C1EC 20 2C C2                    JSR setPRGBank
0C1EF                           
0C1EF 60                          RTS
0C1F0                           
0C1F0                           ;       ----------------------------------------------------
0C1F0                           setMMC1ControlMode:
0C1F0                                  ; lda var
0C1F0                                 ;  and %01111111
0C1F0                                ;   sta $8000
0C1F0 8D 00 80                          STA $8000
0C1F3 4A                                LSR A
0C1F4 8D 00 80                          STA $8000
0C1F7 4A                                LSR A
0C1F8 8D 00 80                          STA $8000
0C1FB 4A                                LSR A
0C1FC 8D 00 80                          STA $8000
0C1FF 4A                                LSR A
0C200 8D 00 80                          STA $8000
0C203 60                          RTS
0C204                           
0C204                           setCHRPage0000:
0C204                                   ;lda var
0C204                                  ; and %01111111
0C204                                  ; sta $a000
0C204 8D 00 A0                          STA $A000
0C207 4A                                LSR A
0C208 8D 00 A0                          STA $A000
0C20B 4A                                LSR A
0C20C 8D 00 A0                          STA $A000
0C20F 4A                                LSR A
0C210 8D 00 A0                          STA $A000
0C213 4A                                LSR A
0C214 8D 00 A0                          STA $A000
0C217 60                          RTS
0C218                           
0C218                           setCHRPage1000:
0C218                                   ;lda var
0C218                                   ;and %01111111
0C218                                   ;sta $c000
0C218 8D 00 C0                          STA $C000
0C21B 4A                                LSR A
0C21C 8D 00 C0                          STA $C000
0C21F 4A                                LSR A
0C220 8D 00 C0                          STA $C000
0C223 4A                                LSR A
0C224 8D 00 C0                          STA $C000
0C227 4A                                LSR A
0C228 8D 00 C0                          STA $C000
0C22B 60                          RTS
0C22C                           
0C22C                           setPRGBank:
0C22C                                   ;lda var
0C22C                                   ;and %01111111
0C22C                                   ;sta $e000
0C22C 8D 00 E0                          STA $E000
0C22F 4A                                LSR A
0C230 8D 00 E0                          STA $E000
0C233 4A                                LSR A
0C234 8D 00 E0                          STA $E000
0C237 4A                                LSR A
0C238 8D 00 E0                          STA $E000
0C23B 4A                                LSR A
0C23C 8D 00 E0                          STA $E000
0C23F 60                          RTS
0C240                           
0C240                           
0C240                           
0C240                           
0C240                           
0C240                           update_srr1:
0C240                           
0C240                           
0C240                           sprites:
0C240                           ;   vert tile attr horiz
0C240                           ;neg obj
0C240 FF 15 01 80               .db $ff, $15, $01, $80 ;sprite 0    1                          ;
0C244 FF 21 02 DD               .db $ff, $21, $02, $DD ;sprite 0    2
0C248 FF 14 03 C8               .db $ff, $14, $03, $C8 ;sprite 0    3
0C24C FF 02 01 B0               .db $ff, $02, $01, $B0 ;sprite 0    4
0C250                           
0C250                           ;ques obj
0C250 FF 02 01 60               .db $ff, $02, $01, $60 ;sprite 0     5
0C254                           
0C254                           ;gud obj
0C254 FF 13 00 98               .db $ff, $13, $00, $98 ;sprite 0     6
0C258 FF 3B 03 20               .db $ff, $3B, $03, $20 ;sprite 0     7
0C25C                           
0C25C                           ;hanuman sprites
0C25C 98 68 00 30               .db $98, $68, $00, $30 ;sprite 0      8
0C260 98 69 00 38               .db $98, $69, $00, $38 ;1             9
0C264 98 6A 00 40               .db $98, $6A, $00, $40 ;2             10
0C268 98 6B 00 48               .db $98, $6B, $00, $48  ;               11
0C26C A0 78 00 30               .db $A0, $78, $00, $30  ;              12
0C270 A0 79 00 38               .db $A0, $79, $00, $38  ;               13
0C274 A0 7A 00 40               .db $A0, $7A, $00, $40  ;               14
0C278 A0 7B 00 48               .db $A0, $7B, $00, $48  ;               15
0C27C A8 88 00 30               .db $A8, $88, $00, $30  ;               16
0C280 A8 89 00 38               .db $A8, $89, $00, $38  ;               17
0C284 A8 8A 00 40               .db $A8, $8A, $00, $40  ;               18
0C288 A8 8B 00 48               .db $A8, $8B, $00, $48   ;              19
0C28C B0 98 00 30               .db $B0, $98, $00, $30  ;               20
0C290 B0 99 00 38               .db $B0, $99, $00, $38  ;               21
0C294 B0 9A 00 40               .db $B0, $9A, $00, $40  ;               22
0C298 B0 9B 00 48               .db $B0, $9B, $00, $48   ;14           23
0C29C                           
0C29C                           ; level sprites
0C29C 00 00 00 00               .db $00, $00, $00, $00   ;14           24
0C2A0 00 00 00 00               .db $00, $00, $00, $00   ;14           25
0C2A4 00 00 00 00               .db $00, $00, $00, $00   ;14           26
0C2A8 00 00 00 00               .db $00, $00, $00, $00   ;14           27
0C2AC 00 00 00 00               .db $00, $00, $00, $00   ;14           28
0C2B0 00 00 00 00               .db $00, $00, $00, $00   ;14           29
0C2B4                           
0C2B4                           ; bag
0C2B4 98 00 00 80               .db $98, $00, $00, $80   ;              30
0C2B8 A0 00 00 80               .db $A0, $00, $00, $80   ;              31
0C2BC                           
0C2BC                           ; timer
0C2BC 14 88 02 20               .db $14, $88, $02, $20   ;              32
0C2C0 14 89 02 28               .db $14, $89, $02, $28  ;               33
0C2C4 14 8A 02 30               .db $14, $8A, $02, $30  ;               34
0C2C8                           
0C2C8                           ;sprites for press start
0C2C8 C8 00 00 70               .db $c8, $00, $00, $70 ;sprite 0       35                    ;
0C2CC C8 00 00 78               .db $c8, $00, $00, $78 ;sprite 0       36
0C2D0 C8 00 00 80               .db $c8, $00, $00, $80 ;sprite 0       37
0C2D4 C8 00 00 88               .db $c8, $00, $00, $88 ;sprite 0       38                    ;
0C2D8 C8 00 00 90               .db $c8, $00, $00, $90 ;sprite 0       39
0C2DC C8 00 00 98               .db $c8, $00, $00, $98 ;sprite 0       40
0C2E0                           
0C2E0                           ;   vert tile attr horiz
0C2E0                           
0C2E0                            ;sprites for level1
0C2E0 60 00 02 70               .db $60, $00, $02, $70 ;sprite 0       41                    ;
0C2E4 60 00 02 78               .db $60, $00, $02, $78 ;sprite 0       42
0C2E8 60 00 02 80               .db $60, $00, $02, $80 ;sprite 0       43
0C2EC 60 00 02 88               .db $60, $00, $02, $88 ;sprite 0       44                    ;
0C2F0 60 00 02 90               .db $60, $00, $02, $90 ;sprite 0       45
0C2F4 60 00 02 A0               .db $60, $00, $02, $A0 ;sprite 0       46
0C2F8                           
0C2F8                           ;;to display time
0C2F8 0C F3 02 20               .db $0c, $F3, $02, $20 ;sprite 0       47
0C2FC 0C F7 02 28               .db $0c, $F7, $02, $28 ;sprite 0       48                    ;
0C300 0C F8 02 30               .db $0c, $F8, $02, $30 ;sprite 0       49
0C304 0C 1A 02 38               .db $0c, $1A, $02, $38 ;sprite 0       50
0C308                           
0C308 FF 90 02 A0               .db $ff, $90, $02, $A0 ;                51
0C30C                           
0C30C                           
0C30C                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C30C                           LoadSprites1:         ;to load all sprites again
0C30C A2 00                           LDX #$00
0C30E                           LoadSpritesLoop1:
0C30E BD 40 C2                        LDA sprites, x            ; load data from address (sprites + x)
0C311 9D 00 05                        STA $0500, x              ; store into RAM address ($0200 + x)
0C314 E8                              INX                       ; X = X + 1
0C315 E0 CC                           CPX #204
0C317                                                   ; Compare X to # of values (divide by 4 for total # of sprites)
0C317 D0 F5                           BNE LoadSpritesLoop1
0C319 60                              rts
0C31A                           
0C31A                           
0C31A                           ;;;;;;;;;;;;
0C31A                           ;;;press1-press2 :to load "press start" continuesly
0C31A                           press1:
0C31A A9 00                            lda #$00
0C31C 8D 89 05                         sta $589
0C31F 8D 8D 05                         sta $58D
0C322 8D 91 05                         sta $591
0C325 8D 95 05                         sta $595
0C328 8D 99 05                         sta $599
0C32B 8D 9D 05                         sta $59D
0C32E 60                               rts
0C32F                           press2:
0C32F A9 06                            lda #$06
0C331 8D 89 05                         sta $589
0C334 A9 07                            lda #$07
0C336 8D 8D 05                         sta $58D
0C339 A9 08                            lda #$08
0C33B 8D 91 05                         sta $591
0C33E A9 09                            lda #$09
0C340 8D 95 05                         sta $595
0C343 A9 0A                            lda #$0A
0C345 8D 99 05                         sta $599
0C348 A9 0B                            lda #$0B
0C34A 8D 9D 05                         sta $59D
0C34D 60                               rts
0C34E                           
0C34E                           
0C34E                           ;-------------------------------
0C34E                           ;;press_start-jsr to load "press start" continuesly
0C34E                            press_start:
0C34E                           
0C34E A5 F8                                 lda ps
0C350 C9 01                                 cmp #1
0C352 D0 21                                 bne avv
0C354                           
0C354 E6 DA                                 INC varch1
0C356 A5 DA                                  lda varch1
0C358 C9 0A                                  CMP #10
0C35A D0 19                                  BNE avv
0C35C A9 00                                  lda #0
0C35E 85 DA                                  sta varch1
0C360                           
0C360 A5 F9                                 lda ps1
0C362 C9 00                                 cmp #0
0C364 D0 08                                 bne ffg
0C366 20 2F C3                              jsr press2
0C369 A9 01                                 lda #1
0C36B 85 F9                                 sta ps1
0C36D 60                                    rts
0C36E                           
0C36E 20 1A C3                       ffg:  jsr press1
0C371 A9 00                                lda #0
0C373 85 F9                                sta ps1
0C375                           
0C375                           
0C375 60                               avv: rts
0C376                           
0C376                           
0C376                           
0C376                           ;-------------------------------
0C376                           ; change1 ;
0C376                           ; change2 ;to move two frames of badobjects
0C376                           ; change3 ;
0C376                           ;
0C376                           change1:
0C376                           
0C376 E6 DA                              INC varch1
0C378 A5 DA                              lda varch1
0C37A C9 0F                              CMP #15
0C37C D0 13                              BNE ech1
0C37E A9 00                              lda #0
0C380 85 DA                              sta varch1
0C382                           
0C382                           
0C382 A5 D7                              lda ch1
0C384 C9 01                              cmp #1
0C386 D0 0A                              bne kp
0C388 A9 20                              lda #$20
0C38A 8D 01 05                           sta $501
0C38D A9 00                              lda #0
0C38F 85 D7                              sta ch1
0C391 60                           ech1: rts
0C392 A9 15                        kp:  lda #$15
0C394 8D 01 05                          sta $501
0C397 A9 01                              lda #1
0C399 85 D7                              sta ch1
0C39B 60                                 rts
0C39C                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C39C                            change2:
0C39C                           
0C39C E6 DB                              INC varch2
0C39E A5 DB                              lda varch2
0C3A0 C9 0F                              CMP #15
0C3A2 D0 13                              BNE ech2
0C3A4 A9 00                              lda #0
0C3A6 85 DB                              sta varch2
0C3A8                           
0C3A8 A5 D8                              lda ch2
0C3AA C9 01                              cmp #1
0C3AC D0 0A                              bne kp1
0C3AE A9 21                              lda #$21
0C3B0 8D 05 05                           sta $505
0C3B3 A9 00                              lda #0
0C3B5 85 D8                              sta ch2
0C3B7 60                           ech2: rts
0C3B8 A9 1B                        kp1:  lda #$1B
0C3BA 8D 05 05                          sta $505
0C3BD A9 01                              lda #1
0C3BF 85 D8                              sta ch2
0C3C1 60                                 rts
0C3C2                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C3C2                            change3:
0C3C2 E6 DC                              INC varch3
0C3C4 A5 DC                              lda varch3
0C3C6 C9 0F                              CMP #15
0C3C8 D0 13                              BNE ech3
0C3CA A9 00                              lda #0
0C3CC 85 DC                              sta varch3
0C3CE                           
0C3CE A5 D9                              lda ch3
0C3D0 C9 01                              cmp #1
0C3D2 D0 0A                              bne kp2
0C3D4 A9 26                              lda #$26
0C3D6 8D 09 05                           sta $509
0C3D9 A9 00                              lda #0
0C3DB 85 D9                              sta ch3
0C3DD 60                           ech3: rts
0C3DE A9 14                        kp2:  lda #$14
0C3E0 8D 09 05                          sta $509
0C3E3 A9 01                              lda #1
0C3E5 85 D9                              sta ch3
0C3E7 60                                 rts
0C3E8                           
0C3E8                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C3E8                            change4:
0C3E8 EE 9E 01                           INC varch4
0C3EB AD 9E 01                           lda varch4
0C3EE C9 0F                              CMP #15
0C3F0 D0 16                              BNE ech4
0C3F2 A9 00                              lda #0
0C3F4 8D 9E 01                           sta varch4
0C3F7                           
0C3F7 AD 9F 01                           lda ch4
0C3FA C9 01                              cmp #1
0C3FC D0 0B                              bne kp33
0C3FE A9 13                              lda #$13
0C400 8D 15 05                           sta $515
0C403 A9 00                              lda #0
0C405 8D 9F 01                           sta ch4
0C408 60                           ech4: rts
0C409 A9 47                        kp33:  lda #$47
0C40B 8D 15 05                          sta $515
0C40E A9 01                              lda #1
0C410 8D 9F 01                           sta ch4
0C413 60                                 rts
0C414                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C414                           
0C414                           change5:
0C414 EE 9C 01                           INC varch5
0C417 AD 9C 01                           lda varch5
0C41A C9 0F                              CMP #15
0C41C D0 16                              BNE ech5
0C41E A9 00                              lda #0
0C420 8D 9C 01                           sta varch5
0C423                           
0C423 AD 9D 01                           lda ch5
0C426 C9 00                              cmp #0
0C428 D0 0B                              bne kp5
0C42A A9 02                              lda #$02
0C42C 8D 11 05                           sta $511
0C42F A9 01                              lda #1
0C431 8D 9D 01                           sta ch5
0C434 60                           ech5: rts
0C435 AD 9D 01                     kp5:  lda ch5
0C438 C9 01                              cmp #1
0C43A D0 0B                              bne kp6
0C43C A9 CA                              lda #$ca
0C43E 8D 11 05                          sta $511
0C441 A9 02                              lda #2
0C443 8D 9D 01                           sta ch5
0C446 60                                 rts
0C447                           
0C447                              kp6:
0C447 A9 DA                              lda #$da
0C449 8D 11 05                          sta $511
0C44C A9 00                              lda #0
0C44E 8D 9D 01                           sta ch5
0C451 60                                 rts
0C452                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C452                           change7:
0C452 E6 2B                              INC varch7
0C454 A5 2B                              lda varch7
0C456 C9 0F                              CMP #15
0C458 D0 13                              BNE @ech5
0C45A A9 00                              lda #0
0C45C 85 2B                              sta varch7
0C45E                           
0C45E A5 2A                              lda ch7
0C460 C9 00                              cmp #0
0C462 D0 0A                              bne @kp5
0C464 A9 02                              lda #$02
0C466 8D 0D 05                           sta $50D
0C469 A9 01                              lda #1
0C46B 85 2A                              sta ch7
0C46D 60                           @ech5: rts
0C46E A5 2A                        @kp5:  lda ch7
0C470 C9 01                              cmp #1
0C472 D0 0A                              bne @kp6
0C474 A9 CA                              lda #$ca
0C476 8D 0D 05                          sta $50d
0C479 A9 02                              lda #2
0C47B 85 2A                              sta ch7
0C47D 60                                 rts
0C47E                           
0C47E                              @kp6:
0C47E A9 DA                              lda #$da
0C480 8D 0D 05                          sta $50d
0C483 A9 00                              lda #0
0C485 85 2A                              sta ch7
0C487 60                                 rts
0C488                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C488                            change6:
0C488 EE 9A 01                           INC varch6
0C48B AD 9A 01                           lda varch6
0C48E C9 0F                              CMP #15
0C490 D0 16                              BNE ech6
0C492 A9 00                              lda #0
0C494 8D 9A 01                           sta varch6
0C497                           
0C497 AD 9B 01                           lda ch6
0C49A C9 00                              cmp #0
0C49C D0 0B                              bne kp7
0C49E A9 90                              lda #$90
0C4A0 8D C9 05                           sta $5c9
0C4A3 A9 01                              lda #1
0C4A5 8D 9B 01                           sta ch6
0C4A8 60                           ech6: rts
0C4A9 AD 9B 01                     kp7:  lda ch6
0C4AC C9 01                              cmp #1
0C4AE D0 0B                              bne kp8
0C4B0 A9 EB                              lda #$eb
0C4B2 8D C9 05                          sta $5c9
0C4B5 A9 02                              lda #2
0C4B7 8D 9B 01                           sta ch6
0C4BA 60                                 rts
0C4BB                           
0C4BB                              kp8:
0C4BB A9 BA                              lda #$ba
0C4BD 8D C9 05                           sta $5c9
0C4C0 A9 00                              lda #0
0C4C2 8D 9B 01                           sta ch6
0C4C5 60                                 rts
0C4C6                           
0C4C6                           
0C4C6                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C4C6                           ;;m1---  to drop bad objects from the top of the screen randomly
0C4C6                           ;;m2---
0C4C6                           ;;m3---
0C4C6                           ;;m4---
0C4C6                           
0C4C6                           ;;m5--- to drop question object from the top of the screen randomly
0C4C6                           
0C4C6                           ;;m6--- to drop good objects from the top of the screen randomly
0C4C6                           ;;m7---
0C4C6                           
0C4C6 60                           ppp0:rts
0C4C7                           
0C4C7                             
0C4C7 A5 8B                       m1:          lda vv1
0C4C9 C9 01                                   cmp #1
0C4CB D0 17                                    bne one1
0C4CD A9 F0                                    lda #240
0C4CF 8D 00 05                                 sta $500
0C4D2                                      ;    sta $501
0C4D2 A9 00                                    lda #0
0C4D4 85 8B                                    sta vv1
0C4D6                                      ;    sta $502
0C4D6                                      ;    sta $503
0C4D6                           
0C4D6                           
0C4D6 E6 8D                                     INC varY1
0C4D8 A5 8D                                      lda varY1
0C4DA C9 78                                      CMP #120
0C4DC D0 E8                                      BNE ppp0
0C4DE A9 00                                     lda #0
0C4E0 85 8D                                     sta varY1
0C4E2 85 8B                                     sta vv1
0C4E4                           
0C4E4                                       one1:
0C4E4 A5 29                                 lda $29
0C4E6 C9 00                                     cmp #$00
0C4E8 F0 0C                                     beq mm1
0C4EA                           
0C4EA E6 29                                     INC $29
0C4EC A5 29                                     lda $29
0C4EE C5 38                                     cmp $38
0C4F0 D0 20                                     BNE p1
0C4F2                           
0C4F2 A9 00                                     LDA #$00
0C4F4 85 29                                     STA $29
0C4F6                           
0C4F6                           
0C4F6 EE 00 05                        mm1:  inc #$500
0C4F9 20 76 C3                              jsr change1
0C4FC                                     ;  dec #$500
0C4FC                                     ;  inc #$500
0C4FC                           
0C4FC AD 00 05                              lda #$500
0C4FF C9 FF                                 cmp #$ff
0C501 D0 0E                                 bne mmm1
0C503                                           ;;;;;
0C503                                    ;       lda $42
0C503                                    ;       sta $501
0C503                                          ;;;;;;;
0C503 A9 01                                     lda #1
0C505 85 29                                     sta $29
0C507 20 F9 C7                                  jsr load
0C50A A5 45                                     lda $45
0C50C                                         ;  inc random44
0C50C                                         ; jsr random_gen
0C50C 8D 03 05                                  sta #$503
0C50F                                        ;
0C50F A9 00                                     lda #0
0C511                                        ;   sta k
0C511                           
0C511                           
0C511                           
0C511 60                                mmm1:    rts
0C512                           
0C512                           
0C512 E6 29                           p1:    inc $29
0C514 60                              ppp1:       RTS
0C515                           
0C515                             m2:
0C515 A5 8C                                    lda vv2
0C517 C9 01                                    cmp #1
0C519 D0 17                                    bne one2
0C51B A9 F0                                    lda #240
0C51D 8D 04 05                                 sta $504
0C520                                     ;     sta $505
0C520 A9 00                                    lda #0
0C522 85 8C                                    sta vv2
0C524                                     ;     sta $506
0C524                                     ;     sta $507
0C524                           
0C524                           
0C524 E6 8E                                     INC varY2
0C526 A5 8E                                      lda varY2
0C528 C9 78                                      CMP #120
0C52A D0 E8                                      BNE ppp1
0C52C A9 00                                     lda #0
0C52E 85 8E                                     sta varY2
0C530 85 8C                                     sta vv2
0C532                           
0C532                           
0C532                           
0C532                           
0C532                                   one2:
0C532 A5 30                                     lda $30
0C534 C9 00                                     cmp #$00
0C536 F0 0C                                     beq mm2
0C538                           
0C538 E6 30                                     INC $30
0C53A A5 30                                     lda $30
0C53C C5 39                                       cmp $39
0C53E D0 1E                                       BNE p2
0C540                           
0C540                           
0C540 A9 00                                 LDA #$00
0C542 85 30                                 STA $30
0C544 EE 04 05                        mm2:  inc #$504
0C547 20 9C C3                              jsr change2
0C54A                                     ;  inc $504
0C54A AD 04 05                             lda #$504
0C54D C9 FF                                 cmp #$ff
0C54F D0 0C                                 bne mmm2
0C551                           
0C551                                     ;       lda $42
0C551                                     ;     sta $505
0C551                           
0C551 A9 01                                     lda #1
0C553 85 30                                     sta $30
0C555                                     ;       jsr inc_k
0C555 20 F9 C7                                   jsr load
0C558 A5 46                                      lda $46
0C55A 8D 07 05                                  sta #$507
0C55D                                          ; lda #0
0C55D                                          ; sta k
0C55D                           
0C55D                           
0C55D 60                                mmm2 :  rts
0C55E                           
0C55E                           
0C55E E6 30                           p2:inc $30
0C560 60                              ppp2:    RTS
0C561                           
0C561                           
0C561                             m3:
0C561 A5 3A                             lda vv3
0C563 C9 01                                    cmp #1
0C565 D0 17                                    bne one3
0C567 A9 F0                                    lda #240
0C569 8D 08 05                                 sta $508
0C56C                                     ;     sta $509
0C56C A9 00                                    lda #0
0C56E 85 3A                                    sta vv3
0C570                                     ;     sta $50A
0C570                                     ;     sta $50B
0C570                           
0C570                           
0C570 E6 8F                                     INC varY3
0C572 A5 8F                                      lda varY3
0C574 C9 78                                      CMP #120
0C576 D0 E8                                      BNE ppp2
0C578 A9 00                                     lda #0
0C57A 85 8F                                     sta varY3
0C57C 85 3A                                     sta vv3
0C57E                           
0C57E                           
0C57E                           
0C57E                                        one3:
0C57E A5 31                                    lda $31
0C580 C9 00                                     cmp #$00
0C582 F0 0C                                     beq mm3
0C584                           
0C584 E6 31                                     INC $31
0C586 A5 31                                     lda $31
0C588                                          ;  CMP #180
0C588 C5 40                                       cmp $40
0C58A D0 1B                                          BNE p3
0C58C                           
0C58C                           
0C58C                           
0C58C A9 00                                 LDA #$00
0C58E 85 31                                 STA $31
0C590 EE 08 05                        mm3:  inc #$508
0C593 20 C2 C3                              jsr change3
0C596                                       ;inc #$508
0C596 AD 08 05                              lda #$508
0C599 C9 FF                                 cmp #$ff
0C59B D0 09                                 bne mmm3
0C59D                           
0C59D                                     ;      lda $42
0C59D                                    ;       sta $509
0C59D                                      ;
0C59D A9 01                                     lda #1
0C59F 85 31                                     sta $31
0C5A1                                          ;  jsr load
0C5A1 A5 47                                      lda $47
0C5A3                                         ;  inc random44
0C5A3                                         ;  jsr random_gen
0C5A3 8D 0B 05                                  sta #$50B
0C5A6                           
0C5A6 60                                mmm3 :  rts
0C5A7                           
0C5A7                           
0C5A7 E6 31                           p3:inc $31
0C5A9 60                              ppp3:    RTS
0C5AA                           
0C5AA                           
0C5AA                           
0C5AA                             m4:
0C5AA                           
0C5AA A5 3B                                  lda vv4
0C5AC C9 01                                    cmp #1
0C5AE D0 17                                    bne one4
0C5B0 A9 F0                                    lda #240
0C5B2 8D 0C 05                                 sta $50C
0C5B5                                    ;      sta $50D
0C5B5                                      ;    sta $50E
0C5B5                                      ;    sta $50F
0C5B5 A9 00                                     lda #0
0C5B7 85 3B                                     sta vv4
0C5B9                           
0C5B9 E6 90                                     INC varY4
0C5BB A5 90                                      lda varY4
0C5BD C9 78                                      CMP #120
0C5BF D0 E8                                      BNE ppp3
0C5C1 A9 00                                     lda #0
0C5C3 85 90                                     sta varY4
0C5C5 85 3B                                     sta vv4
0C5C7                           
0C5C7                           
0C5C7                             one4:
0C5C7 A5 32                                 lda $32
0C5C9 C9 00                                     cmp #$00
0C5CB F0 0C                                     beq mm4
0C5CD                           
0C5CD E6 32                                     INC $32
0C5CF A5 32                                     lda $32
0C5D1 C5 41                                     cmp $41
0C5D3 D0 27                                      BNE p4
0C5D5                           
0C5D5                           
0C5D5                           
0C5D5 A9 00                                 LDA #$00
0C5D7 85 32                                 STA $32
0C5D9 EE 0C 05                        mm4:  inc #$50c
0C5DC                                 
0C5DC                                       ;jsr change7
0C5DC E6 DD                                 inc sp1
0C5DE A5 DD                                 lda sp1
0C5E0 C9 02                                 cmp #2
0C5E2 D0 07                                 bne ip1
0C5E4 A9 00                                 lda #0
0C5E6 85 DD                                 sta sp1
0C5E8 EE 0C 05                              inc #$50c
0C5EB AD 0C 05                       ip1:   lda #$50c
0C5EE C9 FF                                 cmp #$ff
0C5F0 D0 09                                 bne mmm4
0C5F2                           
0C5F2                                   ;        lda $42
0C5F2                                    ;       sta $50D
0C5F2                           
0C5F2 A9 01                                     lda #1
0C5F4 85 32                                     sta $32
0C5F6                           
0C5F6 A5 48                                      lda $48
0C5F8 8D 0F 05                                  sta #$50F
0C5FB                           
0C5FB 60                                mmm4 :  rts
0C5FC                           
0C5FC                           
0C5FC                           
0C5FC E6 32                           p4:inc $32
0C5FE 60                              ppp4:    RTS
0C5FF                           
0C5FF                             m5:
0C5FF                           
0C5FF A5 3C                                  lda vv5
0C601 C9 01                                    cmp #1
0C603 D0 17                                    bne one5
0C605 A9 F0                                    lda #240
0C607 8D 10 05                                 sta $510
0C60A                                      ;    sta $511
0C60A A9 00                                    lda #0
0C60C 85 3C                                    sta vv5
0C60E                           
0C60E E6 91                                    INC varY5
0C610 A5 91                                      lda varY5
0C612 C9 78                                      CMP #120
0C614 D0 E8                                      BNE ppp4
0C616 A9 00                                     lda #0
0C618 85 91                                     sta varY5
0C61A 85 3C                                     sta vv5
0C61C                           
0C61C                             one5:
0C61C A5 33                                      lda $33
0C61E C9 00                                     cmp #$00
0C620 F0 0C                                     beq mm5
0C622                           
0C622 E6 33                                     INC $33
0C624 A5 33                                     lda $33
0C626                                           ; CMP #12
0C626 C5 42                                      cmp $42
0C628 D0 18                                       BNE p5
0C62A                           
0C62A A9 00                                 LDA #$00
0C62C 85 33                                 STA $33
0C62E                                 mm5:
0C62E EE 10 05                              inc #$510
0C631                                       ;jsr change5
0C631 AD 10 05                              lda #$510
0C634 C9 FF                                 cmp #$ff
0C636 D0 09                                 bne mmm5
0C638                           
0C638                                      ;      lda $42
0C638                                      ;      sta $511
0C638                           
0C638 A9 01                                     lda #1
0C63A 85 33                                     sta $33
0C63C A5 49                                      lda $49
0C63E                                          ; jsr random_gen
0C63E 8D 13 05                                  sta #$513
0C641                           
0C641                           
0C641 60                                mmm5 :  rts
0C642                           
0C642 E6 33                           p5:inc $33
0C644 60                              ppp5:    RTS
0C645                           
0C645                             m6:
0C645 A5 3E                                   lda vv6
0C647 C9 01                                   cmp #1
0C649 D0 13                                    bne one6
0C64B A9 F0                                    lda #240
0C64D 8D 14 05                                 sta $514
0C650                           
0C650 E6 92                                      INC varY6
0C652 A5 92                                      lda varY6
0C654 C9 78                                      CMP #120
0C656 D0 EC                                      BNE ppp5
0C658 A9 00                                     lda #0
0C65A 85 92                                     sta varY6
0C65C 85 3E                                     sta vv6
0C65E                           
0C65E                             one6:
0C65E                           
0C65E A5 34                                  lda $34
0C660 C9 00                                     cmp #$00
0C662 F0 0C                                     beq mm6
0C664                           
0C664 E6 34                                 INC $34
0C666 A5 34                                     lda $34
0C668                                          ;  CMP #120
0C668 C5 43                                      cmp $43
0C66A D0 70                                      BNE p6
0C66C                           
0C66C                           
0C66C A9 00                                 LDA #$00
0C66E 85 34                                 STA $34
0C670 A5 67                           mm6:   lda $67
0C672 C9 01                                 cmp #1
0C674 F0 2D                                 beq j1
0C676                           
0C676 EE 14 05                              inc #$514
0C679                           
0C679 E6 DE                                 inc sp2
0C67B A5 DE                                 lda sp2
0C67D C9 02                                 cmp #2
0C67F D0 0A                                 bne ip2
0C681 A9 00                                 lda #0
0C683 85 DE                                 sta sp2
0C685 EE 14 05                              inc #$514
0C688 20 E8 C3                              jsr change4
0C68B                                ip2:
0C68B                           
0C68B A9 58                                 lda #$58
0C68D C9 05                                 cmp #5
0C68F D0 12                                 bne j1
0C691 E6 58                                 inc $58
0C693 EE 17 05                              inc $517
0C696 EE 17 05                              inc $517
0C699 EE 17 05                              inc $517
0C69C EE 17 05                              inc $517
0C69F A9 00                                 lda #0
0C6A1 85 58                                 sta $58
0C6A3                           
0C6A3                                   j1:
0C6A3 AD 14 05                              lda #$514
0C6A6 C9 FF                                 cmp #$ff
0C6A8 D0 31                                 bne mmm6
0C6AA                           
0C6AA                           
0C6AA                                  con66:
0C6AA                           
0C6AA                                      ;;;;;;;;;;;;;;;;;;
0C6AA E6 68                                  inc $68
0C6AC                                        ;;;;;;
0C6AC A4 69                                    ldy $69
0C6AE B9 14 E8                                  lda no_of_gudobjects,y
0C6B1 AA                                        tax
0C6B2 CA                                        dex
0C6B3 86 6A                                     stx $6A
0C6B5 A5 68                                     lda $68
0C6B7 C5 6A                                     cmp $6A
0C6B9 D0 0E                                     bne con
0C6BB A9 00                                     lda #$00
0C6BD 8D 14 05                                 sta #$514
0C6C0 8D 15 05                                 sta #$515
0C6C3 8D 16 05                                 sta #$516
0C6C6 8D 17 05                                 sta #$517
0C6C9                                        ;;;;;
0C6C9                           
0C6C9 A4 69                        con:     ldy $69
0C6CB B9 14 E8                              lda no_of_gudobjects,y
0C6CE                           
0C6CE C5 68                                    cmp $68
0C6D0 F0 7E                                    beq ld99
0C6D2                                      ;;;;;;;;;;;;;;;;
0C6D2 A9 01                                     lda #1
0C6D4 85 34                                     sta $34
0C6D6                           
0C6D6 A5 50                                  lda $50
0C6D8                                             ; jsr random_gen
0C6D8                           
0C6D8 8D 17 05                                    sta #$517
0C6DB                           
0C6DB 60                                mmm6 :  rts
0C6DC                           
0C6DC                                   ;;;;;;;;;;
0C6DC                           
0C6DC                           
0C6DC                           ;;;;;;;;;;;
0C6DC                           
0C6DC E6 34                           p6:inc $34
0C6DE 60                                   RTS
0C6DF                           
0C6DF                           
0C6DF                           ;;;;;;;;;;;
0C6DF                             m7:
0C6DF A5 3F                                    lda vv7
0C6E1 C9 01                                    cmp #1
0C6E3 D0 14                                    bne one7
0C6E5 A9 F0                                    lda #240
0C6E7 8D 18 05                                 sta $518
0C6EA                           
0C6EA E6 93                                     INC varY7
0C6EC A5 93                                     lda varY7
0C6EE C9 78                                      CMP #120
0C6F0 F0 01                                      beq ppp7
0C6F2 60                                         rts
0C6F3                           
0C6F3 A9 00                            ppp7:      lda #0
0C6F5 85 3F                                      sta vv7
0C6F7 85 93                                      sta varY7
0C6F9                           
0C6F9                           
0C6F9                           one7:
0C6F9 A5 35                                     lda $35
0C6FB C9 00                                     cmp #$00
0C6FD F0 0C                                     beq mm7
0C6FF                           
0C6FF E6 35                                     INC $35
0C701 A5 35                                     lda $35
0C703                                         ;   CMP #200
0C703 C5 44                                      cmp $44
0C705 D0 46                                        BNE p7
0C707                           
0C707                           
0C707 A9 00                                 LDA #$00
0C709 85 35                                 STA $35
0C70B A5 67                           mm7:  lda $67
0C70D C9 01                                 cmp #1
0C70F F0 03                                 beq j2
0C711                           
0C711 EE 18 05                              inc #$518
0C714 AD 18 05                            j2: lda #$518
0C717 C9 FF                                 cmp #$ff
0C719 D0 31                                 bne mmm7
0C71B                           
0C71B                                    ;    lda v77
0C71B                                    ;   cmp #0
0C71B                                    ;   beq con77
0C71B                                    ;   lda $47
0C71B                                    ;   sta $519
0C71B                                    ;   lda #0
0C71B                                    ;   sta v77
0C71B                                     ;   jsr n77
0C71B                           
0C71B                           
0C71B                                 ; con77:
0C71B                           
0C71B                                       ;;;;;;;;;;;;;;;;;
0C71B E6 68                                  inc $68
0C71D                                        ;;;;;;;
0C71D                                         ;;;;;;;;;
0C71D                           
0C71D A4 69                                   ldy $69
0C71F B9 14 E8                                  lda no_of_gudobjects,y
0C722 AA                                        tax
0C723 CA                                        dex
0C724 86 6A                                     stx $6A
0C726 A5 68                                     lda $68
0C728 C5 6A                                     cmp $6A
0C72A D0 0E                                     bne con1
0C72C A9 00                                    lda #0
0C72E 8D 18 05                                 sta #$518
0C731 8D 19 05                                 sta #$519
0C734 8D 1A 05                                 sta #$51A
0C737 8D 1B 05                                 sta #$51B
0C73A A4 69                            con1:   ldy $69
0C73C B9 14 E8                                  lda no_of_gudobjects,y
0C73F C5 68                                    cmp $68
0C741 F0 0D                                    beq ld99
0C743 A9 01                                     lda #1
0C745 85 35                                     sta $35
0C747                                       ;      lda v77
0C747                                       ;     cmp #1
0C747                                       ;     bne eq7
0C747                                       ;      lda #0
0C747                                       ;      sta v77
0C747                                       ;      jsr random_gen
0C747                                       ;      sta $51B
0C747                                       ;      jmp mmm7
0C747                           
0C747                           
0C747 A5 51                                    lda $51
0C749 8D 1B 05                                  sta #$51B
0C74C                           
0C74C 60                                mmm7 :  rts
0C74D                           ;;;;;;;;
0C74D                               ;     n77:    lda v77
0C74D                               ;        cmp #0
0C74D                               ;        beq con77
0C74D                               ;        lda $47
0C74D                               ;        sta $519
0C74D                               ;        lda #0
0C74D                               ;        sta v77
0C74D                               ;        rts
0C74D                                ;;;;;
0C74D                           
0C74D                           
0C74D E6 35                           p7:inc $35
0C74F 60                                  RTS
0C750                           
0C750 A9 01                           ld99:  lda #1
0C752 85 67                            sta $67
0C754                           
0C754 A9 00                            lda #$00
0C756 8D 14 05                         sta #$514
0C759 8D 15 05                         sta #$515
0C75C 8D 16 05                         sta #$516
0C75F 8D 17 05                         sta #$517
0C762 8D 18 05                         sta #$518
0C765 8D 19 05                         sta #$519
0C768 8D 1A 05                         sta #$51A
0C76B 8D 1B 05                         sta #$51B
0C76E                           
0C76E 60                               rts
0C76F                           
0C76F AD 98 01                  m8:          lda trig_m8
0C772 C9 01                                  cmp #1
0C774 D0 4E                                  bne mmm8
0C776                           
0C776 AD 93 01                                 lda vv8
0C779 C9 01                                    cmp #1
0C77B D0 1D                                    bne one8
0C77D A9 F0                                    lda #240
0C77F 8D C8 05                                 sta $5c8
0C782                                     ;     sta $509
0C782 A9 00                                    lda #0
0C784 8D 93 01                                 sta vv8
0C787                                     ;     sta $50A
0C787                                     ;     sta $50B
0C787                           
0C787                           
0C787 EE 94 01                                  INC varY8
0C78A AD 94 01                                   lda varY8
0C78D CD 70 17                                   CMP #6000
0C790 D0 BA                                      BNE mmm7
0C792 A9 00                                     lda #0
0C794 8D 94 01                                  sta varY8
0C797 8D 93 01                                  sta vv8
0C79A                           
0C79A                           
0C79A                           
0C79A                                        one8:
0C79A A5 36                                    lda $36
0C79C C9 00                                     cmp #$00
0C79E F0 0D                                     beq mm8
0C7A0                           
0C7A0 E6 36                                     INC $36
0C7A2 A5 36                                     lda $36
0C7A4                           
0C7A4 CD 95 01                                    cmp random8
0C7A7 D0 1C                                          BNE p8
0C7A9                           
0C7A9                           
0C7A9                           
0C7A9 A9 00                                 LDA #$00
0C7AB 85 36                                 STA $36
0C7AD EE C8 05                        mm8:  inc #$5c8
0C7B0 20 88 C4                              jsr change6
0C7B3 AD C8 05                              lda #$5c8
0C7B6 C9 FF                                 cmp #$ff
0C7B8 D0 0A                                 bne mmm8
0C7BA                                       
0C7BA A9 01                                     lda #1
0C7BC 85 36                                     sta $36
0C7BE                                          ;  jsr load
0C7BE AD 96 01                                   lda loc8
0C7C1                                         ;  inc random44
0C7C1                                         ;  jsr random_gen
0C7C1 8D CB 05                                   sta #$5cB
0C7C4                                            
0C7C4                                           ; lda #0
0C7C4                                           ; sta trig_m8
0C7C4                                           ; jsr triger_m8
0C7C4                           
0C7C4 60                                mmm8 :  rts
0C7C5                           
0C7C5                           
0C7C5 E6 36                           p8:inc $36
0C7C7 60                              ppp8:    RTS
0C7C8                           
0C7C8                           triger_m8:
0C7C8                                  
0C7C8                                ;  lda enable_m8
0C7C8                                ;  cmp #1
0C7C8                                ;  bne mg1
0C7C8                           
0C7C8 AD 99 01                          LDA varY88
0C7CB C9 07                             CMP #7
0C7CD F0 09                             BEQ lg1
0C7CF EE 99 01                          inc varY88
0C7D2                                  
0C7D2 A9 F0                             lda #240
0C7D4 8D C8 05                          sta $5c8
0C7D7 60                                rts
0C7D8                           
0C7D8 A9 00                        lg1:lda #0
0C7DA 8D 99 01                         sta varY88
0C7DD AD 96 01                         lda loc8
0C7E0 8D CB 05                         sta $5cB
0C7E3                              ;    sta enable_m8
0C7E3                           
0C7E3 60                          mg1:     RTS
0C7E4                           
0C7E4                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C7E4                           
0C7E4                           random_gen:             ;to generate random numbers
0C7E4 A2 0A                             ldx #10          ; generate 4 bytes
0C7E6                           @loop:
0C7E6 A5 8A                             lda $8A     ; random bit generator
0C7E8 2A                                rol             ; written by kevtis
0C7E9 2A                                rol             ; uses user input from joystick for initial values
0C7EA 2A                                rol
0C7EB 2A                                rol
0C7EC 45 8A                             eor $8A     ; this will XOR two bits together and put the answer in bit 7 of the acc
0C7EE 2A                                rol             ; this puts the answer into the carry
0C7EF 66 87                             ror $87
0C7F1 66 88                             ror $88
0C7F3 66 89                             ror $89
0C7F5                                   ;ror random44
0C7F5 CA                                dex
0C7F6 D0 EE                             bne @loop
0C7F8 60                                rts
0C7F9                           
0C7F9                           
0C7F9                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C7F9                            load:
0C7F9 A5 29                            lda $29
0C7FB C9 01                            cmp #1
0C7FD D0 03                            bne ld2
0C7FF 20 72 C8                         jsr delay1
0C802                           
0C802                            ld2:
0C802 A5 30                           lda $30
0C804 C9 01                            cmp #1
0C806 D0 03                            bne ld3
0C808 20 58 C9                         jsr delay2
0C80B                           
0C80B                            ld3:
0C80B A5 31                           lda $31
0C80D C9 01                            cmp #1
0C80F D0 03                            bne ld4
0C811 20 3E CA                         jsr delay3
0C814                           
0C814                            ld4:
0C814 A5 32                             lda $32
0C816 C9 01                            cmp #1
0C818 D0 03                            bne ld5
0C81A 20 07 CB                         jsr delay4
0C81D                           
0C81D                            ld5:
0C81D A5 33                           lda $33
0C81F C9 01                            cmp #1
0C821 D0 03                            bne ld6
0C823 20 D3 CB                         jsr delay5
0C826                           
0C826                            ld6:
0C826 A5 34                           lda $34
0C828 C9 01                            cmp #1
0C82A D0 12                            bne ld7
0C82C                           
0C82C                           
0C82C 20 B9 CC                         jsr delay6
0C82F A5 58                                 lda $58
0C831 C9 01                                 cmp #1
0C833 D0 09                                 bne ld7
0C835 20 E4 C7                             jsr random_gen
0C838 85 50                                 sta $50
0C83A A9 00                                 lda #0
0C83C 85 58                                 sta $58
0C83E                           
0C83E                            ld7:
0C83E                           
0C83E A5 35                           lda $35
0C840 C9 01                            cmp #1
0C842 D0 12                            bne ld8
0C844                           
0C844                           
0C844 20 87 CD                         jsr delay7
0C847                           
0C847 A5 59                                lda $59
0C849 C9 01                                 cmp #1
0C84B D0 09                                 bne ld8
0C84D 20 E4 C7                             jsr random_gen
0C850 85 51                                 sta $51
0C852 A9 00                                 lda #0
0C854 85 59                                 sta $59
0C856                           
0C856                           
0C856 A5 36                      ld8: lda $36
0C858 C9 01                            cmp #1
0C85A D0 15                            bne ld9
0C85C                           
0C85C                           
0C85C 20 52 CE                         jsr delay8
0C85F                           
0C85F AD 97 01                             lda k8
0C862 C9 01                                 cmp #1
0C864 D0 0B                                 bne ld9
0C866 20 E4 C7                             jsr random_gen
0C869 8D 96 01                              sta loc8
0C86C A9 00                                 lda #0
0C86E 8D 97 01                              sta k8
0C871                           
0C871                           
0C871                           
0C871                           
0C871 60                         ld9:rts
0C872                           
0C872                           
0C872                           
0C872                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0C872                           ;; delay1-7--- for random delay of diffrent 7 objects while falling from the top
0C872                           ;;
0C872                           ;;
0C872                           ;;
0C872                           
0C872                           
0C872                            delay1:
0C872                           
0C872 A5 52                             lda $52
0C874 C9 01                             cmp #1
0C876 D0 09                             bne d1_2
0C878 A2 5A                             ldx #90
0C87A 86 38                             stx $38
0C87C                           
0C87C A2 48                             ldx #72
0C87E 86 45                             stx $45
0C880 60                                rts
0C881 A5 52                        d1_2:  lda $52
0C883                           
0C883 C9 02                               cmp #2
0C885 D0 0A                             bne d1_3
0C887 AE 2C 01                          ldx #300
0C88A 86 38                             stx $38
0C88C                           
0C88C A2 0C                              ldx #12
0C88E 86 45                             stx $45
0C890 60                                rts
0C891 A5 52                        d1_3:  lda $52
0C893                           
0C893 C9 03                               cmp #3
0C895 D0 09                             bne d1_4
0C897 A2 05                             ldx #5
0C899 86 38                             stx $38
0C89B A2 EA                              ldx #234
0C89D 86 45                             stx $45
0C89F 60                                rts
0C8A0 A5 52                        d1_4:  lda $52
0C8A2                           
0C8A2 C9 04                               cmp #4
0C8A4 D0 09                             bne d1_5
0C8A6 A2 73                             ldx #115
0C8A8 86 38                             stx $38
0C8AA A2 5A                              ldx #90
0C8AC 86 45                             stx $45
0C8AE 60                                rts
0C8AF A5 52                        d1_5:  lda $52
0C8B1                           
0C8B1 C9 05                               cmp #5
0C8B3 D0 09                             bne d1_6
0C8B5 A2 96                             ldx #150
0C8B7 86 38                             stx $38
0C8B9 A2 38                              ldx #56
0C8BB 86 45                             stx $45
0C8BD 60                                rts
0C8BE A5 52                        d1_6:  lda $52
0C8C0                           
0C8C0 C9 06                               cmp #6
0C8C2 D0 09                             bne d1_7
0C8C4 A2 E1                             ldx #225
0C8C6 86 38                             stx $38
0C8C8 A2 14                              ldx #20
0C8CA 86 45                             stx $45
0C8CC 60                                rts
0C8CD A5 52                        d1_7:  lda $52
0C8CF                           
0C8CF C9 07                               cmp #7
0C8D1 D0 09                             bne d1_8
0C8D3 A2 5F                             ldx #95
0C8D5 86 38                             stx $38
0C8D7 A2 A0                              ldx #160
0C8D9 86 45                             stx $45
0C8DB 60                                rts
0C8DC                           
0C8DC A5 52                        d1_8:  lda $52
0C8DE                           
0C8DE C9 08                               cmp #8
0C8E0 D0 0A                             bne d1_9
0C8E2 AE 48 03                          ldx #840
0C8E5 86 38                             stx $38
0C8E7 A2 6E                              ldx #110
0C8E9 86 45                             stx $45
0C8EB 60                                rts
0C8EC A5 52                        d1_9:   lda $52
0C8EE                           
0C8EE C9 09                                cmp #9
0C8F0 D0 09                             bne d1_10
0C8F2 A2 78                             ldx #120
0C8F4 86 38                             stx $38
0C8F6 A2 C8                              ldx #200
0C8F8 86 45                             stx $45
0C8FA 60                                rts
0C8FB A5 52                        d1_10: lda $52
0C8FD                           
0C8FD C9 0A                               cmp #10
0C8FF D0 0A                             bne d1_11
0C901 AE 54 01                          ldx #340
0C904 86 38                             stx $38
0C906 A2 0F                              ldx #15
0C908 86 45                             stx $45
0C90A 60                                rts
0C90B A5 52                        d1_11: lda $52
0C90D                           
0C90D C9 0B                               cmp #11
0C90F D0 09                             bne d1_12
0C911 A2 BE                             ldx #190
0C913 86 38                             stx $38
0C915 A2 31                              ldx #49
0C917 86 45                             stx $45
0C919 60                                rts
0C91A A5 52                        d1_12: lda $52
0C91C                           
0C91C C9 0C                               cmp #12
0C91E D0 09                             bne d1_13
0C920 A2 19                             ldx #25
0C922 86 38                             stx $38
0C924 A2 8A                              ldx #138
0C926 86 45                             stx $45
0C928 60                                rts
0C929 A5 52                        d1_13: lda $52
0C92B                           
0C92B C9 0D                               cmp #13
0C92D D0 0A                             bne d1_14
0C92F AE D0 02                          ldx #720
0C932 86 38                             stx $38
0C934 A2 DC                              ldx #220
0C936 86 45                             stx $45
0C938 60                                rts
0C939 A5 52                        d1_14: lda $52
0C93B                           
0C93B C9 0E                               cmp #14
0C93D D0 09                             bne d1_15
0C93F A2 46                             ldx #70
0C941 86 38                             stx $38
0C943 A2 50                              ldx #80
0C945 86 45                             stx $45
0C947 60                                rts
0C948 A5 52                        d1_15: lda $52
0C94A                           
0C94A C9 0F                               cmp #15
0C94C D0 09                             bne d1_16
0C94E AE FE 01                          ldx #510
0C951 86 38                             stx $38
0C953 A2 D2                              ldx #210
0C955 86 45                             stx $45
0C957                             d1_16:
0C957 60                                rts
0C958                           ;;;;;;;;;;;;;;;;;
0C958                           
0C958                            delay2:
0C958 A5 52                             lda $52
0C95A                           
0C95A C9 01                             cmp #1
0C95C D0 09                             bne d2_2
0C95E A2 0A                             ldx #10
0C960 86 39                             stx $39
0C962                           
0C962 A2 17                             ldx #23
0C964 86 46                             stx $46
0C966 60                                rts
0C967 A5 52                        d2_2:lda $52
0C969                           
0C969 C9 02                             cmp #2
0C96B D0 0A                             bne d2_3
0C96D AE 58 02                          ldx #600
0C970 86 39                             stx $39
0C972 A2 BE                              ldx #190
0C974 86 46                             stx $46
0C976 60                                rts
0C977 A5 52                        d2_3:  lda $52
0C979                           
0C979 C9 03                               cmp #3
0C97B D0 09                             bne d2_4
0C97D A2 33                             ldx #51
0C97F 86 39                             stx $39
0C981 A2 28                              ldx #40
0C983 86 46                             stx $46
0C985 60                                rts
0C986 A5 52                        d2_4:  lda $52
0C988                           
0C988 C9 04                               cmp #4
0C98A D0 0A                             bne d2_5
0C98C AE 9F 01                          ldx #415
0C98F 86 39                             stx $39
0C991 A2 0C                              ldx #12
0C993 86 46                             stx $46
0C995 60                                rts
0C996 A5 52                        d2_5:  lda $52
0C998                           
0C998 C9 05                               cmp #5
0C99A D0 0A                             bne d2_6
0C99C AE 2B 01                          ldx #299
0C99F 86 39                             stx $39
0C9A1 A2 F0                              ldx #240
0C9A3 86 46                             stx $46
0C9A5 60                                rts
0C9A6 A5 52                        d2_6:  lda $52
0C9A8                           
0C9A8 C9 06                               cmp #6
0C9AA D0 09                             bne d2_7
0C9AC A2 19                             ldx #25
0C9AE 86 39                             stx $39
0C9B0 A2 3D                              ldx #61
0C9B2 86 46                             stx $46
0C9B4 60                                rts
0C9B5 A5 52                        d2_7:  lda $52
0C9B7                           
0C9B7 C9 07                               cmp #7
0C9B9 D0 0A                             bne d2_8
0C9BB AE 67 02                          ldx #615
0C9BE 86 39                             stx $39
0C9C0 A2 AE                              ldx #174
0C9C2 86 46                             stx $46
0C9C4 60                                rts
0C9C5                           
0C9C5 A5 52                        d2_8:  lda $52
0C9C7                           
0C9C7 C9 08                               cmp #8
0C9C9 D0 09                             bne d2_9
0C9CB A2 54                             ldx #84
0C9CD 86 39                             stx $39
0C9CF A2 09                              ldx #9
0C9D1 86 46                             stx $46
0C9D3 60                                rts
0C9D4 A5 52                        d2_9:   lda $52
0C9D6                           
0C9D6 C9 09                                cmp #9
0C9D8 D0 09                             bne d2_10
0C9DA A2 DC                             ldx #220
0C9DC 86 39                             stx $39
0C9DE A2 5A                              ldx #90
0C9E0 86 46                             stx $46
0C9E2 60                                rts
0C9E3 A5 52                        d2_10: lda $52
0C9E5                           
0C9E5 C9 0A                               cmp #10
0C9E7 D0 09                             bne d2_11
0C9E9 A2 28                             ldx #40
0C9EB 86 39                             stx $39
0C9ED A2 7B                              ldx #123
0C9EF 86 46                             stx $46
0C9F1 60                                rts
0C9F2 A5 52                        d2_11: lda $52
0C9F4                           
0C9F4 C9 0B                               cmp #11
0C9F6 D0 09                             bne d2_12
0C9F8 A2 8C                             ldx #140
0C9FA 86 39                             stx $39
0C9FC A2 51                              ldx #81
0C9FE 86 46                             stx $46
0CA00 60                                rts
0CA01 A5 52                        d2_12: lda $52
0CA03                           
0CA03 C9 0C                               cmp #12
0CA05 D0 09                             bne d2_13
0CA07 A2 FC                             ldx #252
0CA09 86 39                             stx $39
0CA0B A2 AF                              ldx #175
0CA0D 86 46                             stx $46
0CA0F 60                                rts
0CA10 A5 52                        d2_13: lda $52
0CA12                           
0CA12 C9 0D                               cmp #13
0CA14 D0 09                             bne d2_14
0CA16 A2 48                             ldx #72
0CA18 86 39                             stx $39
0CA1A A2 4C                              ldx #76
0CA1C 86 46                             stx $46
0CA1E 60                                rts
0CA1F A5 52                        d2_14: lda $52
0CA21                           
0CA21 C9 0E                               cmp #14
0CA23 D0 0A                             bne d2_15
0CA25 AE BE 02                          ldx #702
0CA28 86 39                             stx $39
0CA2A A2 18                              ldx #24
0CA2C 86 46                             stx $46
0CA2E 60                                rts
0CA2F A5 52                        d2_15: lda $52
0CA31                           
0CA31 C9 0F                               cmp #15
0CA33 D0 08                             bne d2_16
0CA35 A2 33                             ldx #51
0CA37 86 39                             stx $39
0CA39 A2 E7                              ldx #231
0CA3B 86 46                             stx $46
0CA3D                             d2_16:
0CA3D 60                                rts
0CA3E                           
0CA3E                             ;;;;;;;;;;;;
0CA3E                           
0CA3E                            delay3:
0CA3E A5 52                             lda $52
0CA40                           
0CA40 C9 01                             cmp #1
0CA42 D0 09                             bne d3_2
0CA44 A2 09                             ldx #9
0CA46 86 40                             stx $40
0CA48                           
0CA48 A2 5A                             ldx #90
0CA4A 86 47                             stx $47
0CA4C 60                                rts
0CA4D C9 02                        d3_2:  cmp #2
0CA4F D0 09                             bne d3_3
0CA51 A2 1E                             ldx #30
0CA53 86 40                             stx $40
0CA55 A2 E6                              ldx #230
0CA57 86 47                             stx $47
0CA59 60                                rts
0CA5A C9 03                        d3_3:  cmp #3
0CA5C D0 0A                             bne d3_4
0CA5E AE FF 01                          ldx #511
0CA61 86 40                             stx $40
0CA63 A2 28                              ldx #40
0CA65 86 47                             stx $47
0CA67 60                                rts
0CA68 C9 04                        d3_4:  cmp #4
0CA6A D0 09                             bne d3_5
0CA6C A2 91                             ldx #145
0CA6E 86 40                             stx $40
0CA70 A2 0A                              ldx #10
0CA72 86 47                             stx $47
0CA74 60                                rts
0CA75 C9 05                        d3_5:  cmp #5
0CA77 D0 09                             bne d3_6
0CA79 A2 0F                             ldx #15
0CA7B 86 40                             stx $40
0CA7D A2 63                              ldx #99
0CA7F 86 47                             stx $47
0CA81 60                                rts
0CA82 C9 06                        d3_6:  cmp #6
0CA84 D0 09                             bne d3_7
0CA86 A2 19                             ldx #25
0CA88 86 40                             stx $40
0CA8A A2 94                              ldx #148
0CA8C 86 47                             stx $47
0CA8E 60                                rts
0CA8F C9 07                        d3_7:  cmp #7
0CA91 D0 0A                             bne d3_8
0CA93 AE 9D 03                          ldx #925
0CA96 86 40                             stx $40
0CA98 A2 D3                              ldx #211
0CA9A 86 47                             stx $47
0CA9C 60                                rts
0CA9D                           
0CA9D C9 08                        d3_8:  cmp #8
0CA9F D0 09                             bne d3_9
0CAA1 A2 54                             ldx #84
0CAA3 86 40                             stx $40
0CAA5 A2 18                              ldx #24
0CAA7 86 47                             stx $47
0CAA9 60                                rts
0CAAA C9 09                        d3_9:   cmp #9
0CAAC D0 09                             bne d3_10
0CAAE A2 0C                             ldx #12
0CAB0 86 40                             stx $40
0CAB2 A2 43                              ldx #67
0CAB4 86 47                             stx $47
0CAB6 60                                rts
0CAB7 C9 0A                        d3_10: cmp #10
0CAB9 D0 09                             bne d3_11
0CABB A2 8C                             ldx #140
0CABD 86 40                             stx $40
0CABF A2 78                              ldx #120
0CAC1 86 47                             stx $47
0CAC3 60                                rts
0CAC4 C9 0B                        d3_11: cmp #11
0CAC6 D0 09                             bne d3_12
0CAC8 A2 13                             ldx #19
0CACA 86 40                             stx $40
0CACC A2 1D                              ldx #29
0CACE 86 47                             stx $47
0CAD0 60                                rts
0CAD1 C9 0C                        d3_12: cmp #12
0CAD3 D0 09                             bne d3_13
0CAD5 A2 FF                             ldx #255
0CAD7 86 40                             stx $40
0CAD9 A2 A8                              ldx #168
0CADB 86 47                             stx $47
0CADD 60                                rts
0CADE C9 0D                        d3_13: cmp #13
0CAE0 D0 0A                             bne d3_14
0CAE2 AE 6C 02                          ldx #620
0CAE5 86 40                             stx $40
0CAE7 A2 21                              ldx #33
0CAE9 86 47                             stx $47
0CAEB 60                                rts
0CAEC C9 0E                        d3_14: cmp #14
0CAEE D0 0A                             bne d3_15
0CAF0 AE 3A 02                          ldx #570
0CAF3 86 40                             stx $40
0CAF5 A2 85                              ldx #133
0CAF7 86 47                             stx $47
0CAF9 60                                rts
0CAFA C9 0F                        d3_15: cmp #15
0CAFC D0 08                             bne d3_16
0CAFE A2 0A                             ldx #10
0CB00 86 40                             stx $40
0CB02 A2 05                              ldx #5
0CB04 86 47                             stx $47
0CB06                             d3_16:
0CB06 60                                rts
0CB07                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;3
0CB07                           
0CB07                            delay4:
0CB07 A5 52                             lda $52
0CB09                           
0CB09 C9 01                             cmp #1
0CB0B D0 09                             bne d4_2
0CB0D A2 BE                             ldx #190
0CB0F 86 41                             stx $41
0CB11 A2 02                              ldx #2
0CB13 86 48                             stx $48
0CB15 60                                rts
0CB16 C9 02                        d4_2:  cmp #2
0CB18 D0 09                             bne d4_3
0CB1A A2 2D                             ldx #45
0CB1C 86 41                             stx $41
0CB1E A2 B4                              ldx #180
0CB20 86 48                             stx $48
0CB22 60                                rts
0CB23 C9 03                        d4_3:  cmp #3
0CB25 D0 09                             bne d4_4
0CB27 A2 98                             ldx #152
0CB29 86 41                             stx $41
0CB2B A2 12                             ldx #18
0CB2D 86 48                             stx $48
0CB2F                           
0CB2F 60                                rts
0CB30 C9 04                        d4_4:  cmp #4
0CB32 D0 09                             bne d4_5
0CB34 A2 0F                             ldx #15
0CB36 86 41                             stx $41
0CB38 A2 96                               ldx #150
0CB3A 86 48                             stx $48
0CB3C                           
0CB3C 60                                rts
0CB3D C9 05                        d4_5:  cmp #5
0CB3F D0 09                             bne d4_6
0CB41 A2 5A                             ldx #90
0CB43 86 41                             stx $41
0CB45 A2 DC                               ldx #220
0CB47 86 48                             stx $48
0CB49                           
0CB49 60                                rts
0CB4A C9 06                        d4_6:  cmp #6
0CB4C D0 0A                             bne d4_7
0CB4E AE 71 02                          ldx #625
0CB51 86 41                             stx $41
0CB53 A2 31                             ldx #49
0CB55 86 48                             stx $48
0CB57                           
0CB57 60                                rts
0CB58 C9 07                        d4_7:  cmp #7
0CB5A D0 0A                             bne d4_8
0CB5C AE E3 03                          ldx #995
0CB5F 86 41                             stx $41
0CB61 A2 82                               ldx #130
0CB63 86 48                             stx $48
0CB65                           
0CB65 60                                rts
0CB66                           
0CB66 C9 08                        d4_8:  cmp #8
0CB68 D0 0A                             bne d4_9
0CB6A AE 1C 02                          ldx #540
0CB6D 86 41                             stx $41
0CB6F A2 54                               ldx #84
0CB71 86 48                             stx $48
0CB73                           
0CB73 60                                rts
0CB74 C9 09                        d4_9:   cmp #9
0CB76 D0 0A                             bne d4_10
0CB78 AE 40 01                          ldx #320
0CB7B 86 41                             stx $41
0CB7D A2 03                               ldx #3
0CB7F 86 48                             stx $48
0CB81                           
0CB81 60                                rts
0CB82 C9 0A                        d4_10: cmp #10
0CB84 D0 09                             bne d4_11
0CB86 A2 39                             ldx #57
0CB88 86 41                             stx $41
0CB8A A2 EA                               ldx #234
0CB8C 86 48                             stx $48
0CB8E                           
0CB8E 60                                rts
0CB8F C9 0B                        d4_11: cmp #11
0CB91 D0 09                             bne d4_12
0CB93 A2 0A                             ldx #10
0CB95 86 41                             stx $41
0CB97 A2 D5                               ldx #213
0CB99 86 48                             stx $48
0CB9B                           
0CB9B 60                                rts
0CB9C C9 0C                        d4_12: cmp #12
0CB9E D0 0A                             bne d4_13
0CBA0 AE 9F 01                          ldx #415
0CBA3 86 41                             stx $41
0CBA5 A2 50                               ldx #80
0CBA7 86 48                             stx $48
0CBA9                           
0CBA9 60                                rts
0CBAA C9 0D                        d4_13: cmp #13
0CBAC D0 09                             bne d4_14
0CBAE A2 46                             ldx #70
0CBB0 86 41                             stx $41
0CBB2 A2 3C                               ldx #60
0CBB4 86 48                             stx $48
0CBB6                           
0CBB6 60                                rts
0CBB7 C9 0E                        d4_14: cmp #14
0CBB9 D0 0A                             bne d4_15
0CBBB AE DA 02                          ldx #730
0CBBE 86 41                             stx $41
0CBC0 A2 0A                               ldx #10
0CBC2 86 48                             stx $48
0CBC4                           
0CBC4 60                                rts
0CBC5 C9 0F                        d4_15: cmp #15
0CBC7 D0 09                             bne d4_16
0CBC9 AE 36 01                          ldx #310
0CBCC 86 41                             stx $41
0CBCE A2 4E                               ldx #78
0CBD0 86 48                             stx $48
0CBD2                           
0CBD2                             d4_16:
0CBD2 60                                rts
0CBD3                           
0CBD3                             ;;;;;;;;;;;;;4
0CBD3                           
0CBD3                            delay5:
0CBD3 A5 52                             lda $52
0CBD5                           
0CBD5 C9 01                             cmp #1
0CBD7 D0 0A                             bne d5_2
0CBD9 AE EA 01                          ldx #490
0CBDC 86 42                             stx $42
0CBDE A2 32                             ldx #50
0CBE0 86 49                             stx $49
0CBE2                           
0CBE2 60                                rts
0CBE3 A5 52                        d5_2: lda $52
0CBE5 C9 02                               cmp #2
0CBE7 D0 09                             bne d5_3
0CBE9 A2 03                             ldx #3
0CBEB 86 42                             stx $42
0CBED A2 FA                             ldx #250
0CBEF 86 49                             stx $49
0CBF1                           
0CBF1 60                                rts
0CBF2 A5 52                        d5_3:  lda $52
0CBF4 C9 03                               cmp #3
0CBF6 D0 0A                             bne d5_4
0CBF8 AE 00 02                          ldx #512
0CBFB 86 42                             stx $42
0CBFD A2 14                             ldx #20
0CBFF 86 49                             stx $49
0CC01                           
0CC01 60                                rts
0CC02 A5 52                        d5_4:  lda $52
0CC04 C9 04                               cmp #4
0CC06 D0 09                             bne d5_5
0CC08 A2 0F                             ldx #15
0CC0A 86 42                             stx $42
0CC0C A2 E4                             ldx #228
0CC0E 86 49                             stx $49
0CC10                           
0CC10 60                                rts
0CC11 A5 52                        d5_5:  lda $52
0CC13 C9 05                               cmp #5
0CC15 D0 09                             bne d5_6
0CC17 A2 FA                             ldx #250
0CC19 86 42                             stx $42
0CC1B A2 5A                             ldx #90
0CC1D 86 49                             stx $49
0CC1F                           
0CC1F 60                                rts
0CC20 A5 52                        d5_6:  lda $52
0CC22 C9 06                               cmp #6
0CC24 D0 09                             bne d5_7
0CC26 A2 7D                             ldx #125
0CC28 86 42                             stx $42
0CC2A A2 BE                             ldx #190
0CC2C 86 49                             stx $49
0CC2E                           
0CC2E 60                                rts
0CC2F A5 52                        d5_7:  lda $52
0CC31 C9 07                               cmp #7
0CC33 D0 09                             bne d5_8
0CC35 A2 2D                             ldx #45
0CC37 86 42                             stx $42
0CC39 A2 0A                             ldx #10
0CC3B 86 49                             stx $49
0CC3D                           
0CC3D 60                                rts
0CC3E                           
0CC3E A5 52                        d5_8:  lda $52
0CC40 C9 08                               cmp #8
0CC42 D0 09                             bne d5_9
0CC44 A2 54                             ldx #84
0CC46 86 42                             stx $42
0CC48 A2 AA                             ldx #170
0CC4A 86 49                             stx $49
0CC4C                           
0CC4C 60                                rts
0CC4D A5 52                        d5_9:lda $52
0CC4F C9 09                             cmp #9
0CC51 D0 0A                             bne d5_10
0CC53 AE D0 02                          ldx #720
0CC56 86 42                             stx $42
0CC58 A2 64                             ldx #100
0CC5A 86 49                             stx $49
0CC5C                           
0CC5C 60                                rts
0CC5D                              d5_10:
0CC5D A5 52                               lda $52
0CC5F C9 0A                               cmp #10
0CC61 D0 0A                             bne d5_11
0CC63 AE B8 01                          ldx #440
0CC66 86 42                             stx $42
0CC68 A2 C6                             ldx #198
0CC6A 86 49                             stx $49
0CC6C                           
0CC6C 60                                rts
0CC6D A5 52                        d5_11: lda $52
0CC6F C9 0B                               cmp #11
0CC71 D0 0A                             bne d5_12
0CC73 AE 4E 02                          ldx #590
0CC76 86 42                             stx $42
0CC78 A2 0C                             ldx #12
0CC7A 86 49                             stx $49
0CC7C                           
0CC7C 60                                rts
0CC7D A5 52                        d5_12: lda $52
0CC7F C9 0C                               cmp #12
0CC81 D0 09                             bne d5_13
0CC83 A2 0F                             ldx #15
0CC85 86 42                             stx $42
0CC87 A2 32                             ldx #50
0CC89 86 49                             stx $49
0CC8B                           
0CC8B 60                                rts
0CC8C A5 52                        d5_13: lda $52
0CC8E C9 0D                               cmp #13
0CC90 D0 09                             bne d5_14
0CC92 A2 48                             ldx #72
0CC94 86 42                             stx $42
0CC96 A2 F0                             ldx #240
0CC98 86 49                             stx $49
0CC9A                           
0CC9A 60                                rts
0CC9B A5 52                        d5_14: lda $52
0CC9D C9 0E                               cmp #14
0CC9F D0 09                             bne d5_15
0CCA1 A2 AA                             ldx #170
0CCA3 86 42                             stx $42
0CCA5 A2 B4                             ldx #180
0CCA7 86 49                             stx $49
0CCA9                           
0CCA9 60                                rts
0CCAA A5 52                        d5_15: lda $52
0CCAC C9 0F                               cmp #15
0CCAE D0 08                             bne d5_16
0CCB0 A2 D2                             ldx #210
0CCB2 86 42                             stx $42
0CCB4 A2 D7                             ldx #215
0CCB6 86 49                             stx $49
0CCB8                           
0CCB8                             d5_16:
0CCB8 60                                rts
0CCB9                           
0CCB9                             ;;;;;;;;;;;;;;;;;5
0CCB9                           
0CCB9                            delay6:
0CCB9 A5 52                             lda $52
0CCBB                           
0CCBB C9 01                             cmp #1
0CCBD D0 09                             bne d6_2
0CCBF A2 02                             ldx #2
0CCC1 86 43                             stx $43
0CCC3 A2 07                             ldx #7
0CCC5 86 50                             stx $50
0CCC7                           
0CCC7 60                                rts
0CCC8 C9 02                        d6_2:  cmp #2
0CCCA D0 09                             bne d6_3
0CCCC A2 64                             ldx #100
0CCCE 86 43                             stx $43
0CCD0 A2 48                             ldx #72
0CCD2 86 50                             stx $50
0CCD4                           
0CCD4 60                                rts
0CCD5 C9 03                        d6_3:  cmp #3
0CCD7 D0 0A                             bne d6_4
0CCD9 AE CB 02                          ldx #715
0CCDC 86 43                             stx $43
0CCDE A2 61                             ldx #97
0CCE0 86 50                             stx $50
0CCE2                           
0CCE2 60                                rts
0CCE3 C9 04                        d6_4:  cmp #4
0CCE5 D0 0A                             bne d6_5
0CCE7 AE 63 01                          ldx #355
0CCEA 86 43                             stx $43
0CCEC A2 9D                             ldx #157
0CCEE 86 50                             stx $50
0CCF0                           
0CCF0 60                                rts
0CCF1 C9 05                        d6_5:  cmp #5
0CCF3 D0 0A                             bne d6_6
0CCF5 AE 7A 03                          ldx #890
0CCF8 86 43                             stx $43
0CCFA A2 48                             ldx #72
0CCFC 86 50                             stx $50
0CCFE                           
0CCFE 60                                rts
0CCFF C9 06                        d6_6:  cmp #6
0CD01 D0 09                             bne d6_7
0CD03 A2 7D                             ldx #125
0CD05 86 43                             stx $43
0CD07 A2 C1                             ldx #193
0CD09 86 50                             stx $50
0CD0B                           
0CD0B 60                                rts
0CD0C C9 07                        d6_7:  cmp #7
0CD0E D0 0A                             bne d6_8
0CD10 AE 8B 01                          ldx #395
0CD13 86 43                             stx $43
0CD15 A2 20                             ldx #32
0CD17 86 50                             stx $50
0CD19                           
0CD19 60                                rts
0CD1A                           
0CD1A C9 08                        d6_8:  cmp #8
0CD1C D0 0A                             bne d6_9
0CD1E AE BA 04                          ldx #1210
0CD21 86 43                             stx $43
0CD23 A2 D9                             ldx #217
0CD25 86 50                             stx $50
0CD27                           
0CD27 60                                rts
0CD28 C9 09                        d6_9:   cmp #9
0CD2A D0 0A                             bne d6_10
0CD2C AE 36 01                          ldx #310
0CD2F 86 43                             stx $43
0CD31 A2 11                             ldx #17
0CD33 86 50                             stx $50
0CD35                           
0CD35 60                                rts
0CD36 C9 0A                        d6_10: cmp #10
0CD38 D0 0A                             bne d6_11
0CD3A AE AE 01                          ldx #430
0CD3D 86 43                             stx $43
0CD3F A2 48                             ldx #72
0CD41 86 50                             stx $50
0CD43                           
0CD43 60                                rts
0CD44 C9 0B                        d6_11: cmp #11
0CD46 D0 09                             bne d6_12
0CD48 A2 0C                             ldx #12
0CD4A 86 43                             stx $43
0CD4C A2 EA                             ldx #234
0CD4E 86 50                             stx $50
0CD50                           
0CD50 60                                rts
0CD51 C9 0C                        d6_12: cmp #12
0CD53 D0 09                             bne d6_13
0CD55 A2 86                             ldx #134
0CD57 86 43                             stx $43
0CD59 A2 A3                             ldx #163
0CD5B 86 50                             stx $50
0CD5D                           
0CD5D 60                                rts
0CD5E C9 0D                        d6_13: cmp #13
0CD60 D0 0A                             bne d6_14
0CD62 AE 22 01                          ldx #290
0CD65 86 43                             stx $43
0CD67 A2 D4                             ldx #212
0CD69 86 50                             stx $50
0CD6B                           
0CD6B 60                                rts
0CD6C C9 0E                        d6_14: cmp #14
0CD6E D0 09                             bne d6_15
0CD70 A2 07                             ldx #7
0CD72 86 43                             stx $43
0CD74 A2 86                             ldx #134
0CD76 86 50                             stx $50
0CD78                           
0CD78 60                                rts
0CD79 C9 0F                        d6_15: cmp #15
0CD7B D0 09                             bne d6_16
0CD7D AE 67 02                          ldx #615
0CD80 86 43                             stx $43
0CD82 A2 78                             ldx #120
0CD84 86 50                             stx $50
0CD86                           
0CD86                             d6_16:
0CD86 60                                rts
0CD87                             ;;;;;;;;;;;;;;;;;6
0CD87                           
0CD87                            delay7:
0CD87 A5 52                             lda $52
0CD89                           
0CD89 C9 01                             cmp #1
0CD8B D0 0A                             bne d7_2
0CD8D AE 4E 02                          ldx #590
0CD90 86 44                             stx $44
0CD92 A2 1B                             ldx #27
0CD94 86 51                             stx $51
0CD96                           
0CD96 60                                rts
0CD97 C9 02                        d7_2:  cmp #2
0CD99 D0 0A                             bne d7_3
0CD9B AE 2C 01                          ldx #300
0CD9E 86 44                             stx $44
0CDA0 A2 7E                             ldx #126
0CDA2 86 51                             stx $51
0CDA4                           
0CDA4 60                                rts
0CDA5 C9 03                        d7_3:  cmp #3
0CDA7 D0 09                             bne d7_4
0CDA9 A2 3C                             ldx #60
0CDAB 86 44                             stx $44
0CDAD A2 3F                             ldx #63
0CDAF 86 51                             stx $51
0CDB1                           
0CDB1 60                                rts
0CDB2 C9 04                        d7_4:  cmp #4
0CDB4 D0 09                             bne d7_5
0CDB6 A2 0F                             ldx #15
0CDB8 86 44                             stx $44
0CDBA A2 BA                             ldx #186
0CDBC 86 51                             stx $51
0CDBE                           
0CDBE 60                                rts
0CDBF C9 05                        d7_5:  cmp #5
0CDC1 D0 09                             bne d7_6
0CDC3 A2 A0                             ldx #160
0CDC5 86 44                             stx $44
0CDC7 A2 5C                             ldx #92
0CDC9 86 51                             stx $51
0CDCB                           
0CDCB 60                                rts
0CDCC C9 06                        d7_6:  cmp #6
0CDCE D0 0A                             bne d7_7
0CDD0 AE D5 02                          ldx #725
0CDD3 86 44                             stx $44
0CDD5 A2 D4                             ldx #212
0CDD7 86 51                             stx $51
0CDD9                           
0CDD9 60                                rts
0CDDA C9 07                        d7_7:  cmp #7
0CDDC D0 0A                             bne d7_8
0CDDE AE B1 03                          ldx #945
0CDE1 86 44                             stx $44
0CDE3 A2 7B                             ldx #123
0CDE5 86 51                             stx $51
0CDE7                           
0CDE7 60                                rts
0CDE8                           
0CDE8 C9 08                        d7_8:  cmp #8
0CDEA D0 09                             bne d7_9
0CDEC A2 54                             ldx #84
0CDEE 86 44                             stx $44
0CDF0 A2 49                             ldx #73
0CDF2 86 51                             stx $51
0CDF4                           
0CDF4 60                                rts
0CDF5 C9 09                        d7_9:   cmp #9
0CDF7 D0 09                             bne d7_10
0CDF9 A2 7D                             ldx #125
0CDFB 86 44                             stx $44
0CDFD A2 2A                             ldx #42
0CDFF 86 51                             stx $51
0CE01                           
0CE01 60                                rts
0CE02 C9 0A                        d7_10: cmp #10
0CE04 D0 09                             bne d7_11
0CE06 A2 F0                             ldx #240
0CE08 86 44                             stx $44
0CE0A A2 C0                             ldx #192
0CE0C 86 51                             stx $51
0CE0E                           
0CE0E 60                                rts
0CE0F C9 0B                        d7_11: cmp #11
0CE11 D0 09                             bne d7_12
0CE13 A2 13                             ldx #19
0CE15 86 44                             stx $44
0CE17 A2 31                             ldx #49
0CE19 86 51                             stx $51
0CE1B                           
0CE1B 60                                rts
0CE1C C9 0C                        d7_12: cmp #12
0CE1E D0 0A                             bne d7_13
0CE20 AE A9 01                          ldx #425
0CE23 86 44                             stx $44
0CE25 A2 E5                             ldx #229
0CE27 86 51                             stx $51
0CE29                           
0CE29 60                                rts
0CE2A C9 0D                        d7_13: cmp #13
0CE2C D0 09                             bne d7_14
0CE2E A2 14                             ldx #20
0CE30 86 44                             stx $44
0CE32 A2 27                             ldx #39
0CE34 86 51                             stx $51
0CE36                           
0CE36 60                                rts
0CE37 C9 0E                        d7_14: cmp #14
0CE39 D0 0A                             bne d7_15
0CE3B AE D0 02                          ldx #720
0CE3E 86 44                             stx $44
0CE40 A2 37                             ldx #55
0CE42 86 51                             stx $51
0CE44                           
0CE44 60                                rts
0CE45 C9 0F                        d7_15: cmp #15
0CE47 D0 08                             bne d7_16
0CE49 A2 32                             ldx #50
0CE4B 86 44                             stx $44
0CE4D A2 A6                             ldx #166
0CE4F 86 51                             stx $51
0CE51                           
0CE51                             d7_16:
0CE51 60                               rts
0CE52                           ;;;;;;;;;;;;;;;
0CE52                           delay8:
0CE52 A5 52                             lda $52
0CE54                           
0CE54 C9 01                             cmp #1
0CE56 D0 0C                             bne d8_2
0CE58 AE E8 03                          ldx #1000
0CE5B 8E 95 01                          stx random8
0CE5E A2 50                             ldx #80
0CE60 8E 96 01                          stx loc8
0CE63                           
0CE63 60                                rts
0CE64 C9 02                        d8_2:  cmp #2
0CE66 D0 0C                             bne d8_3
0CE68 AE E8 03                          ldx #1000
0CE6B 8E 95 01                          stx random8
0CE6E A2 C8                             ldx #200
0CE70 8E 96 01                          stx loc8
0CE73                           
0CE73 60                                rts
0CE74 C9 03                        d8_3:  cmp #3
0CE76 D0 0C                             bne d8_4
0CE78 AE E8 03                          ldx #1000
0CE7B 8E 95 01                          stx random8
0CE7E A2 14                             ldx #20
0CE80 8E 96 01                          stx loc8
0CE83                           
0CE83 60                                rts
0CE84 C9 04                        d8_4:  cmp #4
0CE86 D0 0C                             bne d8_5
0CE88 AE E8 03                          ldx #1000
0CE8B 8E 95 01                          stx random8
0CE8E A2 7E                             ldx #126
0CE90 8E 96 01                          stx loc8
0CE93                           
0CE93 60                                rts
0CE94 C9 05                        d8_5:  cmp #5
0CE96 D0 0C                             bne d8_6
0CE98 AE E8 03                          ldx #1000
0CE9B 8E 95 01                          stx random8
0CE9E A2 DC                             ldx #220
0CEA0 8E 96 01                          stx loc8
0CEA3                           
0CEA3 60                                rts
0CEA4 C9 06                        d8_6:  cmp #6
0CEA6 D0 0C                             bne d8_7
0CEA8 AE E8 03                          ldx #1000
0CEAB 8E 95 01                          stx random8
0CEAE A2 70                             ldx #112
0CEB0 8E 96 01                          stx loc8
0CEB3                           
0CEB3 60                                rts
0CEB4 C9 07                        d8_7:  cmp #7
0CEB6 D0 0C                             bne d8_8
0CEB8 AE E8 03                          ldx #1000
0CEBB 8E 95 01                          stx random8
0CEBE A2 0C                             ldx #12
0CEC0 8E 96 01                          stx loc8
0CEC3                           
0CEC3 60                                rts
0CEC4                           
0CEC4 C9 08                        d8_8:  cmp #8
0CEC6 D0 0C                             bne d8_9
0CEC8 AE E8 03                          ldx #1000
0CECB 8E 95 01                          stx random8
0CECE A2 3C                             ldx #60
0CED0 8E 96 01                          stx loc8
0CED3                           
0CED3 60                                rts
0CED4 C9 09                        d8_9:   cmp #9
0CED6 D0 0C                             bne d8_10
0CED8 AE E8 03                          ldx #1000
0CEDB 8E 95 01                          stx random8
0CEDE A2 BE                             ldx #190
0CEE0 8E 96 01                          stx loc8
0CEE3                           
0CEE3 60                                rts
0CEE4 C9 0A                        d8_10: cmp #10
0CEE6 D0 0C                             bne d8_11
0CEE8 AE E8 03                          ldx #1000
0CEEB 8E 95 01                          stx random8
0CEEE A2 78                             ldx #120
0CEF0 8E 96 01                          stx loc8
0CEF3                           
0CEF3 60                                rts
0CEF4 C9 0B                        d8_11: cmp #11
0CEF6 D0 0C                             bne d8_12
0CEF8 AE E8 03                          ldx #1000
0CEFB 8E 95 01                          stx random8
0CEFE A2 63                             ldx #99
0CF00 8E 96 01                          stx loc8
0CF03                           
0CF03 60                                rts
0CF04 C9 0C                        d8_12: cmp #12
0CF06 D0 0C                             bne d8_13
0CF08 AE E8 03                          ldx #1000
0CF0B 8E 95 01                          stx random8
0CF0E A2 1D                             ldx #29
0CF10 8E 96 01                          stx loc8
0CF13                           
0CF13 60                                rts
0CF14 C9 0D                        d8_13: cmp #13
0CF16 D0 0C                             bne d8_14
0CF18 AE E8 03                          ldx #1000
0CF1B 8E 95 01                          stx random8
0CF1E A2 27                             ldx #39
0CF20 8E 96 01                          stx loc8
0CF23                           
0CF23 60                                rts
0CF24 C9 0E                        d8_14: cmp #14
0CF26 D0 0C                             bne d8_15
0CF28 AE E8 03                          ldx #1000
0CF2B 8E 95 01                          stx random8
0CF2E A2 9B                             ldx #155
0CF30 8E 96 01                          stx loc8
0CF33                           
0CF33 60                                rts
0CF34 C9 0F                        d8_15: cmp #15
0CF36 D0 0B                             bne d8_16
0CF38 AE E8 03                          ldx #1000
0CF3B 8E 95 01                          stx random8
0CF3E A2 10                             ldx #16
0CF40 8E 96 01                          stx loc8
0CF43                           
0CF43                             d8_16:
0CF43 60                               rts
0CF44                           ;;;;;;;;;;;;;;;;
0CF44                           ;;upmotion--jsr to load 2 diffrent frames continuesly while moving up
0CF44                           ;;
0CF44                           ;;
0CF44                            upmotion:
0CF44 A5 DF                              lda up_frame
0CF46 C9 00                              cmp #0
0CF48 D0 14                              bne zoo1
0CF4A                                    
0CF4A A5 98                              lda L
0CF4C C9 01                              cmp #1
0CF4E D0 06                              bne wq
0CF50 20 1C D3                           jsr up_left2
0CF53 4C 59 CF                           jmp fbc
0CF56                           
0CF56 20 60 D2                       wq : jsr up_right2
0CF59                           
0CF59 A9 01                         fbc: lda #1
0CF5B 85 DF                              sta up_frame
0CF5D 60                            tata:rts
0CF5E                           
0CF5E A5 DF                        zoo1: lda up_frame
0CF60 C9 01                              cmp #1
0CF62 D0 13                              bne zoo2
0CF64                                    
0CF64 A5 98                              lda L
0CF66 C9 01                              cmp #1
0CF68 D0 06                              bne wq1
0CF6A 20 30 D3                           jsr up_left3
0CF6D 4C 73 CF                           jmp fbc1
0CF70 20 74 D2                    wq1:   jsr up_right3
0CF73 A9 00                       fbc1:  lda #0
0CF75 85 DF                              sta up_frame
0CF77 60                          zoo2:        rts
0CF78                           
0CF78                           
0CF78                           
0CF78                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0CF78                           ;;to load first frame of upmotion
0CF78                           
0CF78                           load_firstmotion:
0CF78                                           ;    lda go
0CF78                                           ;    cmp #1
0CF78                                           ;   bne gk1
0CF78                           
0CF78 A5 E6                             LDA mh2
0CF7A C9 14                             CMP #20
0CF7C F0 10                             BEQ lh1
0CF7E E6 E6                             inc mh2
0CF80                           
0CF80 A5 98                             lda L
0CF82 C9 00                             cmp #0
0CF84 D0 04                             bne gjj1
0CF86 20 4C D2                          jsr up_right1
0CF89 60                                rts
0CF8A 20 08 D3                      gjj1:jsr up_left1
0CF8D 60                                rts
0CF8E                           
0CF8E A9 00                        lh1:lda #0
0CF90 85 E6                            sta mh2
0CF92                           
0CF92                                ;  sta go
0CF92                           
0CF92 60                          gk1:     RTS
0CF93                           ;;;;;;;;;;;;;;;;;;;;;;;
0CF93                           ;;drift1-2--- to move hanuman up & down continuesly
0CF93                           ;;
0CF93                           ;;
0CF93                           ;;
0CF93                           drift1:
0CF93 CE 1C 05                                dec $051C
0CF96 CE 20 05                                dec $0520
0CF99 CE 24 05                                dec $0524
0CF9C CE 28 05                                dec $0528
0CF9F CE 2C 05                                dec $052C
0CFA2 CE 30 05                                dec $0530
0CFA5 CE 34 05                                dec $0534
0CFA8 CE 38 05                                dec $0538
0CFAB CE 3C 05                                dec $053C
0CFAE CE 40 05                                dec $0540
0CFB1 CE 44 05                                dec $0544
0CFB4 CE 48 05                                dec $0548
0CFB7 CE 4C 05                                dec $054C
0CFBA CE 50 05                                dec $0550
0CFBD CE 54 05                                dec $0554
0CFC0 CE 58 05                                dec $0558
0CFC3 CE 1C 05                                dec $051C
0CFC6 CE 20 05                                dec $0520
0CFC9 CE 24 05                                dec $0524
0CFCC CE 28 05                                dec $0528
0CFCF CE 2C 05                                dec $052C
0CFD2 CE 30 05                                dec $0530
0CFD5 CE 34 05                                dec $0534
0CFD8 CE 38 05                                dec $0538
0CFDB CE 3C 05                                dec $053C
0CFDE CE 40 05                                dec $0540
0CFE1 CE 44 05                                dec $0544
0CFE4 CE 48 05                                dec $0548
0CFE7 CE 4C 05                                dec $054C
0CFEA CE 50 05                                dec $0550
0CFED CE 54 05                                dec $0554
0CFF0 CE 58 05                                dec $0558
0CFF3                                         
0CFF3                                       
0CFF3 60                                      rts
0CFF4                           
0CFF4                           drift2:
0CFF4                           
0CFF4 EE 28 05                         inc $0528
0CFF7 EE 24 05                          inc $0524
0CFFA EE 20 05                          inc $0520
0CFFD EE 1C 05                          inc $051C
0D000 EE 2C 05                          inc $052C
0D003 EE 30 05                          inc $0530
0D006 EE 34 05                          inc $0534
0D009 EE 38 05                          inc $0538
0D00C EE 3C 05                          inc $053C
0D00F EE 40 05                          inc $0540
0D012 EE 44 05                          inc $0544
0D015 EE 48 05                          inc $0548
0D018 EE 4C 05                          inc $054C
0D01B EE 50 05                          inc $0550
0D01E EE 54 05                          inc $0554
0D021 EE 58 05                          inc $0558
0D024 EE 28 05                          inc $0528
0D027 EE 24 05                          inc $0524
0D02A EE 20 05                          inc $0520
0D02D EE 1C 05                          inc $051C
0D030 EE 2C 05                          inc $052C
0D033 EE 30 05                          inc $0530
0D036 EE 34 05                          inc $0534
0D039 EE 38 05                          inc $0538
0D03C EE 3C 05                          inc $053C
0D03F EE 40 05                          inc $0540
0D042 EE 44 05                          inc $0544
0D045 EE 48 05                          inc $0548
0D048 EE 4C 05                          inc $054C
0D04B EE 50 05                          inc $0550
0D04E EE 54 05                          inc $0554
0D051 EE 58 05                          inc $0558
0D054 60                        chu1:    rts
0D055                           
0D055                           
0D055                           
0D055                           ;;;;;;;;;;;;;;;;;;;;
0D055                           
0D055                           ;;;;;;;;;;;;;;;;;;;;;
0D055                           controller_test:
0D055 A5 A3                                     lda $A3
0D057 8D 05 20                                  sta $2005
0D05A A5 A4                                     lda $A4
0D05C 8D 05 20                                  sta $2005
0D05F                           
0D05F A5 CF                                     lda trig_controller1
0D061 C9 01                                     cmp #1
0D063 D0 EF                                     bne chu1
0D065 A5 CD                            lda oover123
0D067 C9 01                            cmp #1
0D069 F0 E9                           beq chu1
0D06B                           
0D06B A5 E1                           lda trig_endmotion
0D06D C9 01                           cmp #1
0D06F F0 E3                           beq chu1
0D071                           
0D071 A5 E2                           lda trig_startmotion
0D073 C9 01                           cmp #1
0D075 F0 DD                           beq chu1
0D077                           
0D077 A5 6B                            lda go
0D079 C9 01                            cmp #1
0D07B F0 1B                            beq ahh
0D07D A5 6C                            lda bo
0D07F C9 01                            cmp #1
0D081 F0 15                            beq ahh
0D083                           
0D083 A5 98                            lda L
0D085 C9 00                              cmp #0
0D087 D0 09                              bne jf
0D089                           
0D089 20 8F D1                          jsr trig_updown1
0D08C 20 CA D4                          jsr load_NR1
0D08F 4C 98 D0                          jmp ahh
0D092                             jf:
0D092                           
0D092                           
0D092 20 B1 D1                     ggt1: jsr trig_updown2
0D095 20 7C D4                           jsr load_NL1
0D098                                  ;;;;;;;;;;;
0D098 A5 7A                      ahh:   lda control
0D09A D0 B8                             bne chu1
0D09C                           
0D09C A5 20                             LDA $20
0D09E 85 22                     	sta $22
0D0A0                           
0D0A0 A2 00                             ldx #$00
0D0A2                           
0D0A2 A9 01                             LDA #$01		; strobe joypad
0D0A4 8D 16 40                  	STA $4016
0D0A7 A9 00                     	LDA #$00
0D0A9 8D 16 40                  	STA $4016
0D0AC                           con_loop:
0D0AC AD 16 40                  	LDA $4016		; check the state of each button
0D0AF 4A                        	LSR
0D0B0 66 20                     	ROR $20
0D0B2 E8                                INX
0D0B3 E0 08                             CPX #$08
0D0B5 D0 F5                             bne con_loop
0D0B7                           
0D0B7 A5 22                     	LDA $22
0D0B9 49 FF                     	EOR #$FF
0D0BB 25 20                     	AND $20
0D0BD 85 24                     	STA $24
0D0BF 4C C3 D0                  	  jmp CheckUp
0D0C2                                   back50 :
0D0C2 60                                rts
0D0C3                           
0D0C3                           
0D0C3                           
0D0C3                           ; Now we are moving 4 sprites together. so now the horizontal position of sprite 0,1,2,3 are stored in 503,507,50B and 50F respectively
0D0C3                           ; The vertical position is stored in 500,504,508 and 50C respectively. So now we simltaneously increase or decrease the position of all 4 sprites.
0D0C3                           ; This in done in code. For Check up - we have decresed the vertical position of all 4 sprites in order. For check down, we have increased the
0D0C3                           ; the vertical position in order.now each tile has 8 pixel. So for check left and check right, we have put boundary and accordingly adjusted its
0D0C3                           ; value with the position. Remember the the position difference should be 8.
0D0C3                           CheckUp:
0D0C3 A9 10                     	LDA #%00010000
0D0C5                           	;AND justpressed
0D0C5 25 20                     	AND $20
0D0C7 F0 0F                             BEQ CheckDown1
0D0C9                                   ;lda #100
0D0C9                                   ;sta scroll_step
0D0C9                                   ;lda #10
0D0C9                                   ;sta scrollup_act
0D0C9 A5 98                             lda L
0D0CB C9 00                             cmp #0
0D0CD D0 0C                             bne up1
0D0CF                                  ; jsr loadR_up
0D0CF                           
0D0CF 20 78 CF                         jsr load_firstmotion
0D0D2 20 44 CF                         jsr upmotion           ;to change the frames when hanuman moves up with left side face
0D0D5 4C DE D0                          jmp upp
0D0D8                                   CheckDown1:
0D0D8 4C 01 D1                                     jmp CheckDown
0D0DB                               up1:;jsr loadL_up
0D0DB 20 44 CF                           jsr upmotion          ;to change the frames when hanuman moves up with left side face
0D0DE                               upp:
0D0DE                           
0D0DE A9 01                              lda #$01
0D0E0 85 28                             sta $28
0D0E2 AD 1C 05                          lda $051c
0D0E5 C9 46                             cmp #70
0D0E7 F0 18                             beq CheckDown
0D0E9 C9 4D                             cmp #77
0D0EB F0 14                             beq CheckDown
0D0ED C9 4B                             cmp #75
0D0EF F0 10                             beq CheckDown
0D0F1 C9 49                             cmp #73
0D0F3 F0 0C                             beq CheckDown
0D0F5 20 21 E2                          jsr dec_hanuman
0D0F8                           
0D0F8 A9 02                             LDA #%00000010
0D0FA                           	;AND justpressed
0D0FA 25 20                     	AND $20
0D0FC F0 03                             BEQ CheckDown
0D0FE 20 21 E2                          jsr dec_hanuman
0D101                                 ;lda #10
0D101                                   ;sta scrollup_act
0D101                           
0D101                           
0D101                           
0D101                           CheckDown:
0D101 A9 20                     	LDA #%00100000
0D103                           	;AND justpressed
0D103 25 20                     	AND $20
0D105 F0 0C                     	BEQ CheckLeft1
0D107                                   ;lda #100
0D107                                   ;sta scroll_step
0D107                                   ;lda #10
0D107                                   ;sta scrolldown_act
0D107 A5 98                              lda L
0D109 C9 00                             cmp #0
0D10B D0 09                             bne cp1
0D10D 20 CA D2                          jsr loadR_down            ;to change the frames when hanuman moves down with right side face
0D110 4C 19 D1                          jmp cpp
0D113                                   CheckLeft1:
0D113 4C 3C D1                                     jmp CheckLeft
0D116 20 B4 D2                      cp1:jsr loadL_down            ;to change the frames when hanuman moves down with left side face
0D119                               cpp:
0D119                           
0D119 A9 01                             lda #$01
0D11B 85 28                             sta $28
0D11D AD 58 05                          lda $558
0D120 C9 E1                             cmp #225
0D122 F0 18                             beq CheckLeft
0D124 C9 E3                             cmp #227
0D126 F0 14                             beq CheckLeft
0D128 C9 E5                             cmp #229
0D12A F0 10                             beq CheckLeft
0D12C C9 E7                             cmp #231
0D12E F0 0C                             beq CheckLeft
0D130 20 52 E2                          jsr inc_hanuman
0D133                           
0D133 A9 02                             LDA #%00000010
0D135                           	;AND justpressed
0D135 25 20                     	AND $20
0D137 F0 03                     	BEQ CheckLeft
0D139 20 52 E2                  	jsr inc_hanuman
0D13C                                	;lda #10
0D13C                                   ;sta scrolldown_act
0D13C                           
0D13C                           
0D13C                           CheckLeft:
0D13C A9 40                     	LDA #%01000000
0D13E                           	;AND justpressed
0D13E 25 20                     	AND $20
0D140 F0 17                     	BEQ CheckRight
0D142                           
0D142 A9 01                             lda #1
0D144 85 98                             sta L
0D146 20 6C D3                          jsr loadL               ;to change the frames when hanuman moves left
0D149                                 ;  lda scroll_h
0D149                                  ; sta scroll_h_temp
0D149                                  ; lda scroll_v
0D149                                  ; sta scroll_v_temp
0D149                                  ; lda #0
0D149                                  ; sta scroll_h
0D149                                  ; sta scroll_v
0D149                           ;        jsr update_sprites1
0D149                             ; 	LDA #%10001000
0D149                           ;	STA $2000
0D149                           
0D149                           
0D149                           ;        lda ppucntl
0D149                            ;       sta $2000
0D149                                   ;;;;;;;
0D149 A9 01                             lda #$01
0D14B 85 28                             sta $28
0D14D 20 83 E2                          jsr dec_hanuman_left
0D150                           
0D150 A9 02                             LDA #%00000010
0D152                           	;AND justpressed
0D152 25 20                     	AND $20
0D154 F0 03                     	BEQ CheckRight
0D156 20 83 E2                          jsr dec_hanuman_left
0D159                           
0D159                           CheckRight:
0D159 A9 80                     	LDA #%10000000
0D15B                           	;AND justpressed
0D15B 25 20                     	AND $20
0D15D F0 17                     	BEQ CheckSel
0D15F                           
0D15F A9 00                     	lda #0
0D161 85 98                     	sta L
0D163                           
0D163 20 A4 D3                         jsr loadR      ;to change the frames when hanuman moves right
0D166                           
0D166 A9 01                             lda #$01
0D168 85 28                             sta $28
0D16A 20 B4 E2                          jsr inc_hanuman_right
0D16D                           
0D16D A9 02                             LDA #%00000010
0D16F                           	;AND justpressed
0D16F 25 20                     	AND $20
0D171 F0 03                     	BEQ CheckSel
0D173 20 B4 E2                  	jsr inc_hanuman_right
0D176                           
0D176                           
0D176                           CheckSel:
0D176 A9 04                     	LDA #%00000100
0D178 25 24                     	AND $24
0D17A F0 00                     	BEQ CheckStart
0D17C                                ;   lda #47
0D17C                                ;   sta level1_complete
0D17C                           CheckStart
0D17C A9 08                     	LDA #%00001000
0D17E 25 24                     	AND $24
0D180 F0 00                     	BEQ CheckB
0D182                           
0D182                           
0D182                           CheckB:
0D182 A9 02                     	LDA #%00000010
0D184 25 24                     	AND $24
0D186 F0 00                     	BEQ CheckA
0D188                           
0D188                           ;          lda fast_speed
0D188                           ;        cmp #1
0D188                           ;        bne change
0D188                           ;        lda #0
0D188                           ;        sta fast_speed
0D188                           ;        jmp CheckA
0D188                           ;change:
0D188                           ;       lda #1
0D188                           ;       sta fast_speed
0D188                           
0D188                           
0D188                           CheckA:
0D188 A9 01                     	LDA #%00000001
0D18A 25 24                     	AND $24
0D18C F0 00                     	BEQ CheckOver
0D18E                           
0D18E                           
0D18E                           CheckOver:
0D18E 60                          back5:        RTS
0D18F                           ;;;;;;;;;;;;;;;;;;;;;;;;
0D18F                           ;;
0D18F                           ;;trig updown1-2--- to move hanuman up & down continuesly
0D18F                           ;;
0D18F                           ;;
0D18F                           ;;
0D18F                           
0D18F                           trig_updown1:
0D18F                           
0D18F E6 14                                  INC tpp
0D191 A5 14                                   lda tpp
0D193 C9 12                                  CMP #18
0D195 D0 19                                  BNE taa
0D197 A9 00                                  lda #0
0D199 85 14                                  sta tpp
0D19B                           
0D19B A5 16                                 lda updown1
0D19D C9 00                                 cmp #0
0D19F D0 08                                 bne cct
0D1A1 20 93 CF                              jsr drift1
0D1A4 A9 01                                 lda #1
0D1A6 85 16                                 sta updown1
0D1A8 60                                    rts
0D1A9 20 F4 CF                          cct:jsr drift2
0D1AC A9 00                                  lda #0
0D1AE 85 16                                  sta updown1
0D1B0 60                            taa:      rts
0D1B1                           
0D1B1                           ;;;;;;;;;;;;;;;;;;;
0D1B1                           trig_updown2:
0D1B1                           
0D1B1 E6 14                                  INC tpp
0D1B3 A5 14                                   lda tpp
0D1B5 C9 12                                  CMP #18
0D1B7 D0 F7                                  BNE taa
0D1B9 A9 00                                  lda #0
0D1BB 85 14                                  sta tpp
0D1BD                           
0D1BD A5 15                             lda updown2
0D1BF C9 00                             cmp #0
0D1C1 D0 08                             bne cct1
0D1C3 20 93 CF                          jsr drift1
0D1C6 A9 01                             lda #1
0D1C8 85 15                             sta updown2
0D1CA 60                                rts
0D1CB 20 F4 CF                      cct1:jsr drift2
0D1CE A9 00                              lda #0
0D1D0 85 15                              sta updown2
0D1D2 60                                 rts
0D1D3                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D1D3                           ;;endmotion---to enable endmotion of hanuman when level completes
0D1D3                           ;;
0D1D3                           ;;
0D1D3                           ;;
0D1D3                           endmotion:
0D1D3                           
0D1D3 A5 E1                               lda trig_endmotion
0D1D5 C9 01                               cmp #1
0D1D7 D0 47                               bne hoo
0D1D9                                 
0D1D9                           
0D1D9 AD 1C 05                          lda $051c
0D1DC C9 00                             cmp #$00
0D1DE D0 41                             bne jjm
0D1E0                           
0D1E0 A9 00                             lda #$00
0D1E2 8D 1D 05                          sta $51D
0D1E5 8D 21 05                          sta $521
0D1E8 8D 25 05                          sta $525
0D1EB 8D 29 05                          sta $529
0D1EE 8D 2D 05                          sta $52D
0D1F1 8D 31 05                          sta $531
0D1F4 8D 35 05                          sta $535
0D1F7 8D 39 05                          sta $539
0D1FA 8D 3D 05                          sta $53D
0D1FD 8D 41 05                          sta $541
0D200 8D 45 05                          sta $545
0D203 8D 49 05                          sta $549
0D206 8D 4D 05                          sta $54D
0D209 8D 51 05                          sta $551
0D20C 8D 55 05                          sta $555
0D20F 8D 59 05                          sta $559
0D212                           
0D212 A9 00                             lda #0
0D214 85 E1                             sta trig_endmotion
0D216                                ;   lda #10
0D216                                ;   sta level1_complete
0D216 20 51 DB                        jsr blank_load
0D219 20 77 D9                        jsr clear_hanuman
0D21C                           
0D21C                           
0D21C A9 01                           lda #1
0D21E 85 EC                           sta trig_disp_level1
0D220                           
0D220 60                          hoo:      rts
0D221                           
0D221                             jjm :
0D221 20 44 CF                          jsr upmotion           ;to change the frames when hanuman moves up with left side face
0D224 20 21 E2                          jsr dec_hanuman
0D227 60                           koo: rts
0D228                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D228                           
0D228                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D228                           ;;startmotion---to enable start motion of hanuman when level begins
0D228                           ;;
0D228                           ;;
0D228                           ;;
0D228                           startmotion:
0D228                           
0D228 A5 E2                              lda trig_startmotion
0D22A C9 01                               cmp #1
0D22C D0 16                               bne hoo1
0D22E                           
0D22E                           
0D22E                           
0D22E AD 1C 05                          lda $051c
0D231 C9 A0                             cmp #160
0D233 10 10                             bpl jjb
0D235 A9 00                               lda #0
0D237 85 E2                               sta trig_startmotion
0D239 20 0C C3                                jsr LoadSprites1
0D23C A9 00                                   lda #0
0D23E 85 EA                                   sta trig_gud
0D240 85 EB                                   sta trig_bad
0D242 85 E8                                   sta trig_que
0D244                                         
0D244                                        
0D244                           
0D244                           
0D244 60                          hoo1:      rts
0D245                                   
0D245                             jjb :
0D245 20 44 CF                          jsr upmotion           ;to change the frames when hanuman moves up with left side face
0D248 20 21 E2                          jsr dec_hanuman
0D24B 60                                rts
0D24C                           
0D24C                           
0D24C                           ;;;;;;;;;;;;;;;;;;;;;;;;
0D24C                           up_right1:
0D24C A2 00                                     ldx #0
0D24E A0 00                                     ldy #0
0D250                           
0D250                           upr1:
0D250 BD FA E8                                  lda up_r1,x
0D253 99 1D 05                                  sta $51D,y
0D256 C8                                        iny
0D257 C8                                        iny
0D258 C8                                        iny
0D259 C8                                        iny
0D25A E8                                        inx
0D25B E0 10                                     cpx #16
0D25D D0 F1                                     bne upr1
0D25F 60                                        RTS
0D260                           
0D260                           
0D260                           ;;;;;;;;;;;;;;;;;;;;;;;;;;
0D260                           up_right2:
0D260                           
0D260 A2 00                                     ldx #0
0D262 A0 00                                     ldy #0
0D264                           
0D264                           upr2:
0D264 BD 0A E9                                  lda up_r2,x
0D267 99 1D 05                                  sta $51D,y
0D26A C8                                        iny
0D26B C8                                        iny
0D26C C8                                        iny
0D26D C8                                        iny
0D26E E8                                        inx
0D26F E0 10                                     cpx #16
0D271 D0 F1                                     bne upr2
0D273 60                                        RTS
0D274                                           
0D274                           
0D274                           up_right3:
0D274                           
0D274 A2 00                                     ldx #0
0D276 A0 00                                     ldy #0
0D278                           
0D278                           upr3:
0D278 BD 1A E9                                  lda up_r3,x
0D27B 99 1D 05                                  sta $51D,y
0D27E C8                                        iny
0D27F C8                                        iny
0D280 C8                                        iny
0D281 C8                                        iny
0D282 E8                                        inx
0D283 E0 10                                     cpx #16
0D285 D0 F1                                     bne upr3
0D287 60                                        RTS
0D288                           
0D288                           
0D288                           
0D288                           
0D288                           ;;;;;;;;;;;;;;;;;;;;;;;;
0D288                           ;;;jsr to change the frames while moving up(leftside face)
0D288                           loadL_up:
0D288                           
0D288 A5 C1                             LDA $c1
0D28A C9 00                             cmp #0
0D28C D0 08                             bne sd
0D28E 20 08 D3                          jsr up_left1
0D291 A9 01                             lda #1
0D293 85 C1                             sta $c1
0D295 60                                rts
0D296                           
0D296 20 1C D3                  sd :   jsr up_left2
0D299 A9 00                            lda #0
0D29B 85 C1                            sta $c1
0D29D 60                               rts
0D29E                           ;;;;;;;;;;;;;;;;;;;;;;;;;
0D29E                           ;;;jsr to change the frames while moving up(rightside face)
0D29E                            loadR_up:
0D29E                           
0D29E A5 C2                             LDA $c2
0D2A0 C9 00                             cmp #0
0D2A2 D0 08                             bne sd1
0D2A4 20 4C D2                          jsr up_right1
0D2A7 A9 01                             lda #1
0D2A9 85 C2                             sta $c2
0D2AB 60                                rts
0D2AC                           
0D2AC 20 60 D2                  sd1 :   jsr up_right2
0D2AF A9 00                            lda #0
0D2B1 85 C2                            sta $c2
0D2B3 60                               rts
0D2B4                            ;;;;;;;;;;;;;;;;;;;;;;;;
0D2B4                             ;;;jsr to change the frames while moving down(leftside face)
0D2B4                            loadL_down:
0D2B4                           
0D2B4 A5 C3                             LDA $c3
0D2B6 C9 00                             cmp #0
0D2B8 D0 08                             bne sd3
0D2BA 20 44 D3                          jsr down_left1
0D2BD A9 01                             lda #1
0D2BF 85 C3                             sta $c3
0D2C1 60                                rts
0D2C2                           
0D2C2 20 58 D3                  sd3 :   jsr down_left2
0D2C5 A9 00                            lda #0
0D2C7 85 C3                            sta $c3
0D2C9 60                               rts
0D2CA                           ;;;;;;;;;;;;;;;;;;;;;;;;;
0D2CA                           ;;;jsr to change the frames while moving down(rightside face)
0D2CA                            loadR_down:
0D2CA                           
0D2CA A5 C4                             LDA $c4
0D2CC C9 00                             cmp #0
0D2CE D0 08                             bne sd4
0D2D0 20 E0 D2                          jsr down_right1
0D2D3 A9 01                             lda #1
0D2D5 85 C4                             sta $c4
0D2D7 60                                rts
0D2D8                           
0D2D8 20 F4 D2                  sd4 :   jsr down_right2
0D2DB A9 00                            lda #0
0D2DD 85 C4                            sta $c4
0D2DF 60                               rts
0D2E0                           ;;;;;;;;;;;;;;;;;;;;;;;;
0D2E0                           
0D2E0                           ;;;;;;;;;;;;;;;;;;;;;;;;;
0D2E0                           
0D2E0                           down_right1:
0D2E0 A2 00                                     ldx #0
0D2E2 A0 00                                     ldy #0
0D2E4                           
0D2E4                           dnr1:
0D2E4 BD 2A E9                                  lda dn_r1,x
0D2E7 99 1D 05                                  sta $51D,y
0D2EA C8                                        iny
0D2EB C8                                        iny
0D2EC C8                                        iny
0D2ED C8                                        iny
0D2EE E8                                        inx
0D2EF E0 10                                     cpx #16
0D2F1 D0 F1                                     bne dnr1
0D2F3 60                                        RTS
0D2F4                           ;;;;;;;;;;;;;;;;;;;;;;;;
0D2F4                           down_right2:
0D2F4 A2 00                                     ldx #0
0D2F6 A0 00                                     ldy #0
0D2F8                           
0D2F8                           dnr2:
0D2F8 BD 3A E9                                  lda dn_r2,x
0D2FB 99 1D 05                                  sta $51D,y
0D2FE C8                                        iny
0D2FF C8                                        iny
0D300 C8                                        iny
0D301 C8                                        iny
0D302 E8                                        inx
0D303 E0 10                                     cpx #16
0D305 D0 F1                                     bne dnr2
0D307 60                                        RTS
0D308                           ;;;;;;;;;;;;;;;;;;;;;;;
0D308                           
0D308                           
0D308                           up_left1:
0D308 A2 00                                     ldx #0
0D30A A0 00                                     ldy #0
0D30C                           
0D30C                           upl1:
0D30C BD 4A E9                                  lda up_l1,x
0D30F 99 1D 05                                  sta $51D,y
0D312 C8                                        iny
0D313 C8                                        iny
0D314 C8                                        iny
0D315 C8                                        iny
0D316 E8                                        inx
0D317 E0 10                                     cpx #16
0D319 D0 F1                                     bne upl1
0D31B 60                                        RTS
0D31C                           
0D31C                           
0D31C                           ;;;;;;;;;;;;;;;;;;;;;;;;;;
0D31C                           up_left2:
0D31C A2 00                                     ldx #0
0D31E A0 00                                     ldy #0
0D320                           
0D320                           upl2:
0D320 BD 5A E9                                  lda up_l2,x
0D323 99 1D 05                                  sta $51D,y
0D326 C8                                        iny
0D327 C8                                        iny
0D328 C8                                        iny
0D329 C8                                        iny
0D32A E8                                        inx
0D32B E0 10                                     cpx #16
0D32D D0 F1                                     bne upl2
0D32F 60                                        RTS
0D330                           ;;;;;;;;;;;;;;;;;;;;;;;;;
0D330                           up_left3:
0D330 A2 00                                     ldx #0
0D332 A0 00                                     ldy #0
0D334                           
0D334                           upl3:
0D334 BD 6A E9                                  lda up_l3,x
0D337 99 1D 05                                  sta $51D,y
0D33A C8                                        iny
0D33B C8                                        iny
0D33C C8                                        iny
0D33D C8                                        iny
0D33E E8                                        inx
0D33F E0 10                                     cpx #16
0D341 D0 F1                                     bne upl3
0D343 60                                        RTS
0D344                           ;;;;;;;;;;;;;;;;;;;;;;;;;
0D344                           
0D344                           
0D344                           down_left1:
0D344 A2 00                                     ldx #0
0D346 A0 00                                     ldy #0
0D348                           
0D348                           dnl1:
0D348 BD 7A E9                                  lda dn_l1,x
0D34B 99 1D 05                                  sta $51D,y
0D34E C8                                        iny
0D34F C8                                        iny
0D350 C8                                        iny
0D351 C8                                        iny
0D352 E8                                        inx
0D353 E0 10                                     cpx #16
0D355 D0 F1                                     bne dnl1
0D357 60                                        RTS
0D358                           ;;;;;;;;;;;;;;;;;;;;;;;;
0D358                           down_left2:
0D358 A2 00                                     ldx #0
0D35A A0 00                                     ldy #0
0D35C                           
0D35C                           dnl2:
0D35C BD 8A E9                                  lda dn_l2,x
0D35F 99 1D 05                                  sta $51D,y
0D362 C8                                        iny
0D363 C8                                        iny
0D364 C8                                        iny
0D365 C8                                        iny
0D366 E8                                        inx
0D367 E0 10                                     cpx #16
0D369 D0 F1                                     bne dnl2
0D36B 60                                        RTS
0D36C                           ;;;;;;;;;;;;;;;;;;;;;;;;
0D36C                           ;;to load frames while moving left
0D36C                           ;;
0D36C                           ;;
0D36C                           loadL:
0D36C A5 99                             LDA countl
0D36E C9 01                             cmp #$01
0D370 F0 1A                             beq L2
0D372 A5 99                             LDA countl
0D374                           
0D374 C9 02                             cmp #$02
0D376 F0 1C                             beq L3
0D378 A5 99                             LDA countl
0D37A                           
0D37A C9 03                             cmp #$03
0D37C F0 1E                             beq L4
0D37E A5 99                             LDA countl
0D380                           
0D380 C9 00                             CMP #$00
0D382 F0 00                             beq L1
0D384                           
0D384                           L1:
0D384 20 2C D4                          jsr load_L1
0D387                           
0D387 A9 01                             LDA #$01
0D389 85 99                             STA countl
0D38B 60                                RTS
0D38C                           
0D38C 20 54 D4                  L2:    jsr load_L3
0D38F A9 02                             LDA #$02
0D391 85 99                             STA countl
0D393 60                                RTS
0D394                           
0D394                           
0D394 20 40 D4                  L3:jsr load_L2
0D397 A9 03                             LDA #$03
0D399 85 99                             STA countl
0D39B 60                                RTS
0D39C                           
0D39C 20 68 D4                  L4:jsr load_L4
0D39F A9 00                             LDA #$00
0D3A1 85 99                             STA countl
0D3A3 60                                RTS
0D3A4                           
0D3A4                           ;;;;;;;;;;;;;;;;;;;;;;;;
0D3A4                           ;;to load frames while moving right
0D3A4                           ;;
0D3A4                           ;;
0D3A4                           loadR:
0D3A4 A5 9A                             LDA countr
0D3A6 C9 01                             cmp #$01
0D3A8 F0 1A                             beq L2r
0D3AA A5 9A                             LDA countr
0D3AC                           
0D3AC C9 02                             cmp #$02
0D3AE F0 1C                             beq L3r
0D3B0 A5 9A                             LDA countr
0D3B2                           
0D3B2 C9 03                             cmp #$03
0D3B4 F0 1E                             beq L4r
0D3B6 A5 9A                             LDA countr
0D3B8                           
0D3B8 C9 00                             CMP #$00
0D3BA F0 00                             beq L1r
0D3BC                           
0D3BC                           L1r:
0D3BC 20 DC D3                          jsr load_R1
0D3BF                           
0D3BF A9 01                             LDA #$01
0D3C1 85 9A                             STA countr
0D3C3 60                                RTS
0D3C4                           
0D3C4 20 04 D4                  L2r:    jsr load_R3
0D3C7 A9 02                             LDA #$02
0D3C9 85 9A                             STA countr
0D3CB 60                                RTS
0D3CC                           
0D3CC                           
0D3CC 20 F0 D3                  L3r:jsr load_R2
0D3CF A9 03                             LDA #$03
0D3D1 85 9A                             STA countr
0D3D3 60                                RTS
0D3D4                           
0D3D4 20 18 D4                  L4r:jsr load_R4
0D3D7 A9 00                             LDA #$00
0D3D9 85 9A                             STA countr
0D3DB 60                                RTS
0D3DC                           
0D3DC                           
0D3DC                           
0D3DC                           
0D3DC                           
0D3DC                           ;;;;;;;;;;;;;;;;;;;;;;;;
0D3DC                           load_R1:
0D3DC A2 00                                     ldx #0
0D3DE A0 00                                     ldy #0
0D3E0                           
0D3E0                           ldr1:
0D3E0 BD 9A E9                                  lda ld_r1,x
0D3E3 99 1D 05                                  sta $51D,y
0D3E6 C8                                        iny
0D3E7 C8                                        iny
0D3E8 C8                                        iny
0D3E9 C8                                        iny
0D3EA E8                                        inx
0D3EB E0 10                                     cpx #16
0D3ED D0 F1                                     bne ldr1
0D3EF 60                                        RTS
0D3F0                           
0D3F0                           load_R2:
0D3F0 A2 00                                     ldx #0
0D3F2 A0 00                                     ldy #0
0D3F4                           
0D3F4                           ldr2:
0D3F4 BD AA E9                                  lda ld_r2,x
0D3F7 99 1D 05                                  sta $51D,y
0D3FA C8                                        iny
0D3FB C8                                        iny
0D3FC C8                                        iny
0D3FD C8                                        iny
0D3FE E8                                        inx
0D3FF E0 10                                     cpx #16
0D401 D0 F1                                     bne ldr2
0D403 60                                        RTS
0D404                           
0D404                           load_R3:
0D404 A2 00                                     ldx #0
0D406 A0 00                                     ldy #0
0D408                           
0D408                           ldr3:
0D408 BD BA E9                                  lda ld_r3,x
0D40B 99 1D 05                                  sta $51D,y
0D40E C8                                        iny
0D40F C8                                        iny
0D410 C8                                        iny
0D411 C8                                        iny
0D412 E8                                        inx
0D413 E0 10                                     cpx #16
0D415 D0 F1                                     bne ldr3
0D417 60                                        RTS
0D418                           load_R4:
0D418 A2 00                                     ldx #0
0D41A A0 00                                     ldy #0
0D41C                           
0D41C                           ldr4:
0D41C BD CA E9                                  lda ld_r4,x
0D41F 99 1D 05                                  sta $51D,y
0D422 C8                                        iny
0D423 C8                                        iny
0D424 C8                                        iny
0D425 C8                                        iny
0D426 E8                                        inx
0D427 E0 10                                     cpx #16
0D429 D0 F1                                     bne ldr4
0D42B 60                                        RTS
0D42C                           
0D42C                            ;;;;;;;;;;;;;;;;;;;
0D42C                           
0D42C                           load_L1:
0D42C A2 00                                     ldx #0
0D42E A0 00                                     ldy #0
0D430                           
0D430                           ldl1:
0D430 BD DA E9                                  lda ld_l1,x
0D433 99 1D 05                                  sta $51D,y
0D436 C8                                        iny
0D437 C8                                        iny
0D438 C8                                        iny
0D439 C8                                        iny
0D43A E8                                        inx
0D43B E0 10                                     cpx #16
0D43D D0 F1                                     bne ldl1
0D43F 60                                        RTS
0D440                           
0D440                           load_L2:
0D440 A2 00                                     ldx #0
0D442 A0 00                                     ldy #0
0D444                           
0D444                           ldl2:
0D444 BD EA E9                                  lda ld_l2,x
0D447 99 1D 05                                  sta $51D,y
0D44A C8                                        iny
0D44B C8                                        iny
0D44C C8                                        iny
0D44D C8                                        iny
0D44E E8                                        inx
0D44F E0 10                                     cpx #16
0D451 D0 F1                                     bne ldl2
0D453 60                                        RTS
0D454                           
0D454                           load_L3:
0D454 A2 00                                     ldx #0
0D456 A0 00                                     ldy #0
0D458                           
0D458                           ldl3:
0D458 BD FA E9                                  lda ld_l3,x
0D45B 99 1D 05                                  sta $51D,y
0D45E C8                                        iny
0D45F C8                                        iny
0D460 C8                                        iny
0D461 C8                                        iny
0D462 E8                                        inx
0D463 E0 10                                     cpx #16
0D465 D0 F1                                     bne ldl3
0D467 60                                        RTS
0D468                           
0D468                           load_L4:
0D468 A2 00                                     ldx #0
0D46A A0 00                                     ldy #0
0D46C                           
0D46C                           ldl4:
0D46C BD 0A EA                                  lda ld_l4,x
0D46F 99 1D 05                                  sta $51D,y
0D472 C8                                        iny
0D473 C8                                        iny
0D474 C8                                        iny
0D475 C8                                        iny
0D476 E8                                        inx
0D477 E0 10                                     cpx #16
0D479 D0 F1                                     bne ldl4
0D47B 60                                        RTS
0D47C                           
0D47C                           
0D47C                           
0D47C                           
0D47C                            ;;;;;;;;;;;;;;;
0D47C                            load_NL1:
0D47C A5 98                                     lda L
0D47E C9 00                                     cmp #0
0D480 F0 13                                     beq l1
0D482 A2 00                                     ldx #0
0D484 A0 00                                     ldy #0
0D486                           
0D486                           lnl1:
0D486 BD 1A EA                                  lda ln_l1,x
0D489 99 1D 05                                  sta $51D,y
0D48C C8                                        iny
0D48D C8                                        iny
0D48E C8                                        iny
0D48F C8                                        iny
0D490 E8                                        inx
0D491 E0 10                                     cpx #16
0D493 D0 F1                                     bne lnl1
0D495 60                        l1:             RTS
0D496                           
0D496                           load_NL2:
0D496 A5 98                                     lda L
0D498 C9 00                                     cmp #0
0D49A F0 13                                     beq l2
0D49C A2 00                                     ldx #0
0D49E A0 00                                     ldy #0
0D4A0                           
0D4A0                           lnl2:
0D4A0 BD 2A EA                                  lda ln_l2,x
0D4A3 99 1D 05                                  sta $51D,y
0D4A6 C8                                        iny
0D4A7 C8                                        iny
0D4A8 C8                                        iny
0D4A9 C8                                        iny
0D4AA E8                                        inx
0D4AB E0 10                                     cpx #16
0D4AD D0 F1                                     bne lnl2
0D4AF 60                        l2:             RTS
0D4B0                           
0D4B0                           load_NL3:             ;;for bad obj only
0D4B0 A5 98                                     lda L
0D4B2 C9 00                                     cmp #0
0D4B4 F0 13                                     beq l3
0D4B6 A2 00                                     ldx #0
0D4B8 A0 00                                     ldy #0
0D4BA                           
0D4BA                           lnl3:
0D4BA BD 3A EA                                  lda ln_l3,x
0D4BD 99 1D 05                                  sta $51D,y
0D4C0 C8                                        iny
0D4C1 C8                                        iny
0D4C2 C8                                        iny
0D4C3 C8                                        iny
0D4C4 E8                                        inx
0D4C5 E0 10                                     cpx #16
0D4C7 D0 F1                                     bne lnl3
0D4C9 60                        l3:             RTS
0D4CA                           
0D4CA                            ;;;;;;;;;;
0D4CA                           
0D4CA                           load_NR1:
0D4CA A5 98                                     lda L
0D4CC C9 01                                     cmp #1
0D4CE F0 13                                     beq r1
0D4D0 A2 00                                     ldx #0
0D4D2 A0 00                                     ldy #0
0D4D4                           
0D4D4                           lnr1:
0D4D4 BD 4A EA                                  lda ln_r1,x
0D4D7 99 1D 05                                  sta $51D,y
0D4DA C8                                        iny
0D4DB C8                                        iny
0D4DC C8                                        iny
0D4DD C8                                        iny
0D4DE E8                                        inx
0D4DF E0 10                                     cpx #16
0D4E1 D0 F1                                     bne lnr1
0D4E3 60                        r1:             RTS
0D4E4                           
0D4E4                           load_NR2:
0D4E4 A5 98                                     lda L
0D4E6 C9 01                                     cmp #1
0D4E8 F0 13                                     beq r2
0D4EA A2 00                                     ldx #0
0D4EC A0 00                                     ldy #0
0D4EE                           
0D4EE                           lnr2:
0D4EE BD 5A EA                                  lda ln_r2,x
0D4F1 99 1D 05                                  sta $51D,y
0D4F4 C8                                        iny
0D4F5 C8                                        iny
0D4F6 C8                                        iny
0D4F7 C8                                        iny
0D4F8 E8                                        inx
0D4F9 E0 10                                     cpx #16
0D4FB D0 F1                                     bne lnr2
0D4FD 60                        r2:             RTS
0D4FE                           
0D4FE                           load_NR3:              ;;for bad object only
0D4FE A5 98                                     lda L
0D500 C9 01                                     cmp #1
0D502 F0 13                                     beq r3
0D504 A2 00                                     ldx #0
0D506 A0 00                                     ldy #0
0D508                           
0D508                           lnr3:
0D508 BD 6A EA                                  lda ln_r3,x
0D50B 99 1D 05                                  sta $51D,y
0D50E C8                                        iny
0D50F C8                                        iny
0D510 C8                                        iny
0D511 C8                                        iny
0D512 E8                                        inx
0D513 E0 10                                     cpx #16
0D515 D0 F1                                     bne lnr3
0D517 60                        r3:             RTS
0D518                           
0D518                           
0D518                           
0D518                           
0D518                            ;;;;;;;;;;
0D518                           
0D518 E6 52                     inc_k:  inc $52
0D51A A5 52                             lda $52
0D51C C9 0F                             cmp #15
0D51E D0 04                             bne rr1
0D520 A9 01                              lda #1
0D522 85 52                              sta $52
0D524 60                            rr1: rts
0D525                           
0D525                           
0D525                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D525 E6 61                     timepass: INC $61
0D527 A5 61                                     lda $61
0D529 C9 01                                      CMP #1
0D52B D0 07                                 BNE TP1
0D52D                           
0D52D 20 18 D5                              jsr inc_k
0D530 A9 00                                 LDA #$00
0D532 85 37                                 STA $37
0D534                           
0D534 60                                 TP1:rts
0D535                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D535                            newgd_touch:
0D535 A5 CF                            lda trig_controller1
0D537 C9 01                            cmp #1
0D539 D0 28                            bne @TP2
0D53B AD 2C 05                         lda $52C
0D53E 8D 8E 01                         sta head
0D541 CE 8E 01                         dec head
0D544 CE 8E 01                         dec head
0D547 A0 00                             ldy #0
0D549 A2 00                             ldx #0
0D54B                           @touch_loop:
0D54B AD C8 05                             lda $5c8
0D54E CD 8E 01                             cmp head                ; comparing the y position of the bag
0D551 F0 11                                beq @obj
0D553 EE 8E 01                             inc head
0D556 CD 8E 01                             cmp head                ; comparing the y position of the bag
0D559 F0 09                                beq @obj
0D55B EE 8E 01                             inc head
0D55E CD 8E 01                             cmp head                ; comparing the y position of the bag
0D561 F0 01                                beq @obj
0D563                           
0D563                           @TP2:
0D563 60                                   rts
0D564                           
0D564                           ;------------------------------------------------
0D564                           @obj:
0D564 AD CB 05                  lda $5cb                 ;loading the x position of corresponding tiles
0D567 8D 8F 01                  sta bad                ; loading x position of corresponding object in varyjsr
0D56A                           
0D56A A5 98                     lda L
0D56C C9 00                     cmp #0
0D56E F0 09                     beq @right6
0D570 AD 2F 05                  lda $52f
0D573 8D 8D 01                  sta hanu                  ; loading x position of bag when hanuman is moving left
0D576 4C 7F D5                  jmp @loopin6
0D579                           
0D579                           @right6:
0D579 AD 37 05                  lda $537                  ; loading x position of bag when hanuman is moving right
0D57C 8D 8D 01                  sta hanu
0D57F                           
0D57F                           @loopin6:
0D57F AD 8F 01                  lda bad
0D582 85 D0                     sta temp_varyjsr
0D584 A9 08                     lda #8
0D586 85 D1                     sta loop_var1
0D588                           ;lda #7
0D588 85 D2                     sta loop_var2
0D58A                           @touch_loop1:
0D58A AD 8D 01                              lda hanu
0D58D CD 8F 01                              cmp bad
0D590 F0 20                                 beq @detected
0D592 EE 8F 01                              inc bad
0D595 C6 D1                                 dec loop_var1
0D597 A5 D1                                 lda loop_var1
0D599 C9 00                                 cmp #0
0D59B D0 ED                                 bne @touch_loop1
0D59D A5 D0                                 lda temp_varyjsr
0D59F 8D 8F 01                              sta bad
0D5A2 C6 D2                                 dec loop_var2
0D5A4 EE 8D 01                              inc hanu
0D5A7 A9 07                                 lda #7
0D5A9 85 D1                                 sta loop_var1
0D5AB A5 D2                                 lda loop_var2
0D5AD C9 00                                 cmp #0
0D5AF D0 D9                                 bne @touch_loop1
0D5B1 60                                    rts
0D5B2                           
0D5B2                           @detected:
0D5B2 A9 FF                               lda #$ff
0D5B4 8D CB 05                            sta $5cb
0D5B7 A9 01                               lda #1
0D5B9 85 6B                               sta go
0D5BB 85 B5                               sta go0
0D5BD A9 50                               lda #80
0D5BF 85 18                               sta scro
0D5C1                           @TP1:
0D5C1 60                                  rts
0D5C2                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D5C2                             touch:
0D5C2 A5 12                            lda touch_trig
0D5C4 C9 01                            cmp #1
0D5C6 D0 2D                            bne TP11
0D5C8 AD 2C 05                         lda $52C
0D5CB 85 D3                            sta bag_vertical
0D5CD C6 D3                            dec bag_vertical
0D5CF C6 D3                            dec bag_vertical
0D5D1 A0 00                             ldy #0
0D5D3 A2 00                             ldx #0
0D5D5                           touch_loop:
0D5D5 B9 00 05                             lda $500,y
0D5D8 C5 D3                                cmp bag_vertical                ; comparing the y position of the bag
0D5DA F0 1A                                beq obj
0D5DC E6 D3                                inc bag_vertical
0D5DE C5 D3                                cmp bag_vertical                ; comparing the y position of the bag
0D5E0 F0 14                                beq obj
0D5E2 E6 D3                                inc bag_vertical
0D5E4 C5 D3                                cmp bag_vertical                ; comparing the y position of the bag
0D5E6 F0 0E                                beq obj
0D5E8 C8                                   iny
0D5E9 C8                                   iny
0D5EA C8                                   iny
0D5EB C8                                   iny
0D5EC E8                                   inx
0D5ED C6 D3                                dec bag_vertical
0D5EF C6 D3                                dec bag_vertical
0D5F1 E0 07                                cpx #7
0D5F3 D0 E0                                bne touch_loop
0D5F5                           TP11:
0D5F5 60                                   rts
0D5F6                           
0D5F6                           ;------------------------------------------------
0D5F6                           obj:
0D5F6 C8                        iny
0D5F7 C8                        iny
0D5F8 C8                        iny
0D5F9 B9 00 05                  lda $500,y                 ;loading the x position of corresponding tiles
0D5FC 85 63                     sta varyjsr                ; loading x position of corresponding object in varyjsr
0D5FE                           
0D5FE                           
0D5FE                           
0D5FE A5 98                     lda L
0D600 C9 00                     cmp #0
0D602 F0 08                     beq right6
0D604 AD 2F 05                  lda $52F
0D607 85 62                     sta vary                  ; loading x position of bag when hanuman is moving left
0D609 4C 11 D6                  jmp loopin6
0D60C                           
0D60C                           right6:
0D60C AD 37 05                  lda $537                  ; loading x position of bag when hanuman is moving right
0D60F 85 62                     sta vary
0D611                           
0D611                           loopin6:
0D611 A5 63                     lda varyjsr
0D613 85 D0                     sta temp_varyjsr
0D615 A9 07                     lda #7
0D617 85 D1                     sta loop_var1
0D619 85 D2                     sta loop_var2
0D61B                           touch_loop1:
0D61B A5 62                                 lda vary
0D61D C5 63                                 cmp varyjsr
0D61F F0 20                                 beq detected
0D621 E6 63                                 inc varyjsr
0D623 C6 D1                                 dec loop_var1
0D625 A5 D1                                 lda loop_var1
0D627 C9 00                                 cmp #0
0D629 D0 F0                                 bne touch_loop1
0D62B A5 D0                                 lda temp_varyjsr
0D62D 85 63                                 sta varyjsr
0D62F C6 D2                                 dec loop_var2
0D631 E6 62                                 inc vary
0D633 A9 07                                 lda #7
0D635 85 D1                                 sta loop_var1
0D637 A5 D2                                 lda loop_var2
0D639 C9 00                                 cmp #0
0D63B D0 DE                                 bne touch_loop1
0D63D 60                                    rts
0D63E                           
0D63E 4C C2 D6                  amj:jmp circle
0D641                           
0D641                           
0D641                           detected:
0D641 88                                 dey
0D642 88                                 dey
0D643 B9 00 05                           lda $500,y
0D646 C9 02                              cmp #$02
0D648                           
0D648 F0 F4                              beq amj
0D64A C9 CA                              cmp #$ca
0D64C F0 F0                              beq amj
0D64E C9 DA                              cmp #$da
0D650 F0 EC                              beq amj
0D652                           
0D652                           detected_loop:
0D652 C9 13                                   cmp #$13
0D654 F0 0B                                   beq arrow1
0D656 C9 47                                   cmp #$47
0D658 F0 07                                   beq arrow1
0D65A C9 3B                                   cmp #$3B
0D65C F0 03                                   beq arrow1
0D65E 4C 64 D6                                jmp square
0D661                           
0D661                           ;-----------------------------------------------
0D661                           arrow1:
0D661 4C F4 D6                  jmp arrow
0D664                           
0D664                           square:
0D664                                 ; iny
0D664                                 ; iny
0D664                           
0D664 84 F7                        sty bad_temp
0D666 A6 F7                        ldx bad_temp
0D668                           
0D668 C8                           iny
0D669 C8                           iny
0D66A A9 FF                        lda #$ff
0D66C 99 00 05                     sta $500,y
0D66F                           
0D66F A9 01                        lda #1
0D671 85 6C                        sta bo
0D673 85 B6                        sta bo0
0D675                           
0D675                           
0D675 BD 00 05                    lda $500,x
0D678 C9 15                        cmp #$15
0D67A F0 26                        beq skull
0D67C                           
0D67C BD 00 05                     lda $500,x
0D67F C9 20                       cmp #$20
0D681 F0 1F                       beq skull
0D683                           
0D683 BD 00 05                     lda $500,x
0D686 C9 21                       cmp #$21
0D688 F0 1D                       beq cross
0D68A                           
0D68A BD 00 05                     lda $500,x
0D68D C9 14                        cmp #$14
0D68F F0 1B                        beq fire
0D691                           
0D691 BD 00 05                    lda $500,x
0D694 C9 26                       cmp #$26
0D696 F0 14                       beq fire
0D698                           
0D698                           
0D698 BD 00 05                    lda $500,x
0D69B C9 05                       cmp #$05
0D69D F0 12                       beq poison
0D69F                           
0D69F                           
0D69F 4C 17 D7                        jmp conti
0D6A2                           
0D6A2                           skull:
0D6A2 A9 F0                     lda #240
0D6A4 85 18                     sta scro
0D6A6 60                        rts
0D6A7                           
0D6A7                           cross:
0D6A7 A9 1E                     lda #30
0D6A9 85 18                     sta scro
0D6AB 60                        rts
0D6AC                           
0D6AC                           fire:
0D6AC A9 14                     lda #20
0D6AE 85 18                     sta scro
0D6B0 60                        rts
0D6B1                           
0D6B1                           poison:
0D6B1 A9 00                     lda #0
0D6B3 85 6C                     sta bo
0D6B5 85 B6                     sta bo0
0D6B7 A9 01                     lda #1
0D6B9 85 6B                     sta go
0D6BB 85 B5                     sta go0
0D6BD A9 0A                     lda #10
0D6BF 85 18                     sta scro
0D6C1 60                        rts
0D6C2                           
0D6C2                            ;;;;THis is the place where the program executes when a question is taken....
0D6C2                           circle:
0D6C2 C8                               iny
0D6C3 C8                               iny
0D6C4 A9 FF                            lda #$ff
0D6C6 99 00 05                         sta $500,y
0D6C9 A5 CE                            lda gamelevel
0D6CB C9 00                            cmp #0
0D6CD D0 0F                            bne skip_qs
0D6CF D0 20                             bne skip_qs1
0D6D1 A9 02                             LDA #$02
0D6D3 20 04 C2                          JSR setCHRPage0000
0D6D6 A9 03                             LDA #$03
0D6D8 20 23 DB                          jsr pal_changeforquestion
0D6DB 20 B7 80                         jsr Questionscreen
0D6DE                           skip_qs:
0D6DE C9 01                             cmp #1
0D6E0 D0 0F                             bne skip_qs1
0D6E2 D0 0D                              bne skip_qs1
0D6E4 A9 02                             LDA #$02
0D6E6 20 04 C2                          JSR setCHRPage0000
0D6E9 A9 03                             LDA #$03
0D6EB 20 23 DB                          jsr pal_changeforquestion
0D6EE 20 B7 80                          jsr Questionscreen_1
0D6F1                           skip_qs1:
0D6F1                           
0D6F1 4C 17 D7                         jmp conti
0D6F4                           
0D6F4                           arrow:
0D6F4                           
0D6F4 84 F7                     sty bad_temp
0D6F6 A6 F7                        ldx bad_temp
0D6F8                           
0D6F8 C8                        iny
0D6F9 C8                        iny
0D6FA A9 FF                     lda #$ff
0D6FC 99 00 05                  sta $500,y
0D6FF A9 01                     lda #1
0D701 85 6B                     sta go
0D703 85 B5                     sta go0       ;inc points
0D705                           
0D705                           
0D705 BD 00 05                   lda $500,x
0D708 C9 13                        cmp #$13
0D70A F0 0C                        beq banana
0D70C C9 47                        cmp #$47
0D70E F0 08                        beq banana
0D710                           
0D710 BD 00 05                  lda $500,x
0D713 C9 3B                        cmp #$3B
0D715 F0 06                        beq mango
0D717                           
0D717                           
0D717                           conti:
0D717 60                              RTS
0D718                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D718                           banana:
0D718 A9 14                     lda #20
0D71A 85 18                     sta scro
0D71C 60                        rts
0D71D                           
0D71D                           mango:
0D71D A9 28                     lda #40
0D71F 85 18                     sta scro
0D721 60                        rts
0D722                           
0D722                           conti23:
0D722 60                        rts
0D723                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D723                           
0D723                           
0D723                           endscreen:
0D723                           
0D723 A5 C5                     lda oover
0D725 C9 01                     cmp #1
0D727 F0 01                     beq endscccr
0D729 60                        rts
0D72A                           
0D72A                           endscccr:
0D72A A9 01                     lda #1
0D72C 85 CD                     sta oover123
0D72E                           
0D72E A9 00                     lda #$00
0D730 8D 1D 05                  sta $51D
0D733 8D 21 05                  sta $521
0D736 8D 25 05                  sta $525
0D739 8D 29 05                  sta $529
0D73C 8D 2D 05                  sta $52D
0D73F 8D 31 05                  sta $531
0D742 8D 35 05                  sta $535
0D745 8D 39 05                  sta $539
0D748 8D 3D 05                  sta $53D
0D74B 8D 41 05                  sta $541
0D74E 8D 45 05                  sta $545
0D751 8D 49 05                  sta $549
0D754 8D 4D 05                  sta $54D
0D757 8D 51 05                  sta $551
0D75A 8D 55 05                  sta $555
0D75D 8D 59 05                  sta $559
0D760                           
0D760                           endscrr:
0D760                           
0D760 E6 CB                     inc timend
0D762 A5 CB                     lda timend
0D764 C9 64                     cmp #100            ; time for entry after screen is clear
0D766 F0 01                     beq conti3
0D768 60                        rts
0D769                           
0D769                           conti3:
0D769 A9 00                     lda #0
0D76B 85 C5                     sta oover
0D76D 85 21                     sta levelnum
0D76F A2 00                     ldx #0
0D771                           
0D771                           ;clearing the falling objects
0D771                           ; ask ankit to disable his code of falling objs.
0D771 A2 00                      ldx #$0
0D773                              @cls3:
0D773 9D 00 05                        STA $500, x
0D776 E8                              INX
0D777 E0 1C                           CPX #28
0D779 D0 F8                           BNE @cls3
0D77B                           
0D77B A9 01                     lda #1
0D77D 85 76                     sta random_enable
0D77F                           ; hanuman position y
0D77F                           
0D77F A2 00                       ldx #0
0D781 A0 00                            ldy #0
0D783                           
0D783                           ypos:
0D783 BD AA EA                                  lda ypost,x
0D786 99 1C 05                                  sta $51C,y
0D789 C8                                        iny
0D78A C8                                        iny
0D78B C8                                        iny
0D78C C8                                        iny
0D78D E8                                        inx
0D78E E0 10                                     cpx #16
0D790 D0 F1                                     bne ypos
0D792                           
0D792                           ; x pos
0D792                           
0D792                           
0D792 A2 00                            ldx #0
0D794 A0 00                            ldy #0
0D796                           
0D796                           xpos:
0D796 BD 9A EA                                  lda xpost,x
0D799 99 1F 05                                  sta $51F,y
0D79C C8                                        iny
0D79D C8                                        iny
0D79E C8                                        iny
0D79F C8                                        iny
0D7A0 E8                                        inx
0D7A1 E0 10                                     cpx #16
0D7A3 D0 F1                                     bne xpos
0D7A5                           ;; tiles
0D7A5                           
0D7A5 A2 00                            ldx #0
0D7A7 A0 00                            ldy #0
0D7A9                           
0D7A9                           til:
0D7A9 BD 8A EA                                  lda hanutile,x
0D7AC 99 1D 05                                  sta $51D,y
0D7AF C8                                        iny
0D7B0 C8                                        iny
0D7B1 C8                                        iny
0D7B2 C8                                        iny
0D7B3 E8                                        inx
0D7B4 E0 10                                     cpx #16
0D7B6 D0 F1                                     bne til
0D7B8                           
0D7B8                           
0D7B8 A9 01                      lda #1
0D7BA 85 C6                      sta moveendtrig
0D7BC 20 C0 D7                   jsr moveend
0D7BF                           
0D7BF                           
0D7BF 60                        rts
0D7C0                           
0D7C0                           
0D7C0                           moveend:
0D7C0                           
0D7C0 A5 C6                             lda moveendtrig
0D7C2 C9 01                             cmp #1
0D7C4 D0 13                             bne conti4
0D7C6                           
0D7C6                                   lda#0
0D7C6 85 98                     	sta L
0D7C8                           
0D7C8 20 A4 D3                         jsr loadR
0D7CB                           
0D7CB A9 01                             lda #$01
0D7CD 85 28                             sta $28
0D7CF 20 B4 E2                          jsr inc_hanuman_right
0D7D2                           
0D7D2 AD 23 05                          lda $523
0D7D5 C9 80                             cmp #$80
0D7D7 F0 01                             beq throwbag
0D7D9                           
0D7D9                           
0D7D9                           ;;; now moving
0D7D9                           conti4:
0D7D9                           
0D7D9 60                        rts
0D7DA                           
0D7DA                           throwbag:
0D7DA                           
0D7DA A9 00                     lda #0
0D7DC 85 C6                     sta moveendtrig
0D7DE                           
0D7DE A9 01                     lda #$01
0D7E0 85 C9                     sta sadface
0D7E2 A9 00                     lda #0
0D7E4 85 CA                     sta cntr
0D7E6                           
0D7E6 60                        rts
0D7E7                           
0D7E7                           face:
0D7E7 A5 C9                     lda sadface
0D7E9 C9 01                     cmp #01
0D7EB D0 EC                     bne conti4
0D7ED                           
0D7ED                           face1:
0D7ED A2 00                                  ldx #0
0D7EF A0 00                            ldy #0
0D7F1                           
0D7F1                           sadf:
0D7F1 BD 7A EA                                  lda sadfac,x
0D7F4 99 1D 05                                  sta $51D,y
0D7F7 C8                                        iny
0D7F8 C8                                        iny
0D7F9 C8                                        iny
0D7FA C8                                        iny
0D7FB E8                                        inx
0D7FC E0 10                                     cpx #16
0D7FE D0 F1                                     bne sadf
0D800                           
0D800 20 B5 C1                  jsr update_sprites
0D803                           
0D803 E6 CA                     inc cntr
0D805 A5 CA                     lda cntr
0D807 C9 78                     cmp #120   ;; waiting time for sad face
0D809 D0 CE                     bne conti4
0D80B                           
0D80B                           
0D80B                           ;jsr update_sprites
0D80B                           
0D80B A9 00                     lda #0
0D80D 85 C9                     sta sadface
0D80F                           
0D80F A9 01                     lda #1
0D811 85 C8                     sta downbagtrig
0D813                           
0D813                           
0D813 A9 48                     lda #$48
0D815 8D 75 05                  sta $575
0D818 A9 58                     lda #$58
0D81A 8D 79 05                  sta $579
0D81D                           
0D81D AD 79 05                  lda $579
0D820 85 CC                     sta bagpos
0D822                           
0D822 20 B5 C1                  jsr update_sprites
0D825                           
0D825 A9 01                     lda #1
0D827 85 C7                     sta moveawaytrig
0D829                           
0D829 60                        rts
0D82A                           
0D82A                           baggoingdown:
0D82A                           
0D82A A5 C8                     lda downbagtrig
0D82C C9 01                     cmp #1
0D82E D0 0D                     bne conti43
0D830                           
0D830 EE 78 05                  inc $578
0D833 EE 74 05                  inc $574
0D836                           
0D836 AD 78 05                  lda $578
0D839 C9 FF                     cmp #$FF   ; compare position end point
0D83B F0 01                     beq erasebag
0D83D                           
0D83D                           conti43:
0D83D 60                        rts
0D83E                           
0D83E                           erasebag:
0D83E A9 00                     lda #00
0D840 8D 75 05                  sta $575
0D843 8D 79 05                  sta $579
0D846 60                        rts
0D847                           
0D847                           moveaway:
0D847                           
0D847 A5 C7                     lda moveawaytrig
0D849 C9 01                     cmp #1
0D84B D0 F0                     bne conti43
0D84D                           
0D84D                           
0D84D A9 01                     lda #1
0D84F 85 98                             sta L
0D851 20 6C D3                          jsr loadL
0D854                           
0D854                           
0D854                                   ;;;;;;;
0D854 A9 01                             lda #$01
0D856 85 28                             sta $28
0D858 20 83 E2                          jsr dec_hanuman_left
0D85B                           
0D85B AD 1F 05                          lda $51F
0D85E C9 00                             cmp #$00
0D860 F0 01                             beq theend
0D862                           
0D862 60                        rts
0D863                           
0D863                           theend:
0D863 A9 00                     lda #0
0D865 85 C7                     sta moveawaytrig
0D867                           
0D867 A9 00                     lda #$00
0D869 8D 1D 05                  sta $51D
0D86C 8D 21 05                  sta $521
0D86F 8D 25 05                  sta $525
0D872 8D 29 05                  sta $529
0D875 8D 2D 05                  sta $52D
0D878 8D 31 05                  sta $531
0D87B 8D 35 05                  sta $535
0D87E 8D 39 05                  sta $539
0D881 8D 3D 05                  sta $53D
0D884 8D 41 05                  sta $541
0D887 8D 45 05                  sta $545
0D88A 8D 49 05                  sta $549
0D88D 8D 4D 05                  sta $54D
0D890 8D 51 05                  sta $551
0D893 8D 55 05                  sta $555
0D896 8D 59 05                  sta $559
0D899                           
0D899                           
0D899                           ;ldx #$0
0D899                           ;   cls:
0D899                           ;      STA $51C, x
0D899                           ;      INX
0D899                           ;      CPX #64
0D899                           ;      BNE cls
0D899                           ;; credit screen
0D899 60                        rts
0D89A                           
0D89A                           
0D89A                           
0D89A                           
0D89A                           
0D89A                           
0D89A                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D89A                            gud_exp:              ;to change the expression when one takes gud object
0D89A A5 6B                            lda go
0D89C C9 01                            cmp #1
0D89E D0 1C                            bne gg1
0D8A0                           
0D8A0 A5 BE                             LDA $be
0D8A2 C9 1E                             CMP #30
0D8A4 F0 10                             BEQ lv1_1
0D8A6 E6 BE                             inc $be
0D8A8 A5 98                             lda L
0D8AA C9 00                             cmp #0
0D8AC D0 04                             bne ge1
0D8AE 20 E4 D4                          jsr load_NR2
0D8B1 60                                rts
0D8B2 20 96 D4                      ge1:jsr load_NL2
0D8B5 60                                rts
0D8B6                           
0D8B6 A9 00                        lv1_1:lda #0
0D8B8 85 BE                            sta $be
0D8BA 85 6B                            sta go
0D8BC                           
0D8BC 60                          gg1:     RTS
0D8BD                           
0D8BD                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  right
0D8BD                           old_pal:
0D8BD 8D 1E 05                          sta $51E
0D8C0 8D 22 05                          sta $522
0D8C3 8D 26 05                          sta $526
0D8C6 8D 2A 05                          sta $52A
0D8C9                           
0D8C9 8D 2E 05                          sta $52E
0D8CC 8D 32 05                          sta $532
0D8CF 8D 36 05                          sta $536
0D8D2 8D 3A 05                          sta $53A
0D8D5                           
0D8D5 8D 3E 05                          sta $53E
0D8D8 8D 42 05                          sta $542
0D8DB 8D 46 05                          sta $546
0D8DE 8D 4A 05                          sta $54A
0D8E1                           
0D8E1 8D 4E 05                          sta $54E
0D8E4 8D 52 05                          sta $552
0D8E7 8D 56 05                          sta $556
0D8EA 8D 5A 05                          sta $55A
0D8ED 60                                rts
0D8EE                           
0D8EE                           
0D8EE                           
0D8EE                           
0D8EE                           
0D8EE                           
0D8EE                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D8EE                           ;;;to change the pallete of hanuman when one takes bad objects
0D8EE                           ;;;
0D8EE                           pal_change:
0D8EE                           
0D8EE A5 6C                            lda bo
0D8F0 C9 01                            cmp #1
0D8F2 D0 57                            bne gj2
0D8F4                           
0D8F4 A5 E3                             LDA mx4
0D8F6 C9 1E                             CMP #30
0D8F8 F0 3C                             BEQ lj2
0D8FA E6 E3                             inc mx4
0D8FC                           
0D8FC A5 98                             lda L
0D8FE C9 00                             cmp #0
0D900 D0 1A                             bne gm2
0D902                           
0D902 A5 E4                             lda color_right
0D904 C9 00                             cmp #0
0D906 D0 0A                             bne fhh
0D908 A9 00                             lda #0
0D90A 20 BD D8                          jsr old_pal
0D90D A9 01                             lda #1
0D90F 85 E4                             sta color_right
0D911 60                                rts
0D912                           
0D912                            fhh:
0D912 A9 02                             lda #2
0D914 20 BD D8                          jsr old_pal
0D917 A9 00                             lda #0
0D919 85 E4                             sta color_right
0D91B 60                                rts
0D91C                           
0D91C                           
0D91C                           gm2:
0D91C A5 E5                            lda color_left
0D91E C9 00                             cmp #0
0D920 D0 0A                             bne fhh1
0D922 A9 00                             lda #0
0D924 20 BD D8                          jsr old_pal
0D927 A9 01                             lda #1
0D929 85 E5                             sta color_left
0D92B 60                                rts
0D92C                           
0D92C                            fhh1:
0D92C A9 02                             lda #2
0D92E 20 BD D8                          jsr old_pal
0D931 A9 00                             lda #0
0D933 85 E5                             sta color_left
0D935 60                                rts
0D936                           
0D936                           
0D936 A9 00                        lj2:lda #0
0D938 85 E3                            sta mx4
0D93A A5 98                            lda L
0D93C C9 00                            cmp #0
0D93E D0 06                            bne hjk
0D940 A9 00                            lda #0
0D942 20 BD D8                         jsr old_pal
0D945                           
0D945 60                               rts
0D946                                hjk:
0D946 A9 00                               lda #0
0D948 20 BD D8                            jsr old_pal
0D94B                           
0D94B                           
0D94B                           
0D94B                           
0D94B 60                          gj2:     RTS
0D94C                           
0D94C                           
0D94C                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D94C                           bad_exp:             ;to change the expression when one takes bad object
0D94C A5 6C                             lda bo
0D94E C9 01                            cmp #1
0D950 D0 24                            bne gg2
0D952                           
0D952                           
0D952 A5 C0                             LDA $c0
0D954 C9 1E                             CMP #30
0D956 F0 10                             BEQ lv2
0D958 E6 C0                             inc $c0
0D95A A5 98                             lda L
0D95C C9 00                             cmp #0
0D95E D0 04                             bne ge2
0D960 20 FE D4                          jsr load_NR3
0D963 60                                rts
0D964 20 B0 D4                      ge2:jsr load_NL3
0D967 60                                rts
0D968                           
0D968 A9 00                        lv2:lda #0
0D96A 85 C0                            sta $c0
0D96C 85 6C                            sta bo
0D96E A9 00                            lda #0
0D970 20 BD D8                         jsr old_pal
0D973 20 BD D8                         jsr old_pal
0D976                           
0D976 60                          gg2:     RTS
0D977                           
0D977                           
0D977                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D977                           ;;;to clear all sprites including hanuman
0D977                           ;;;
0D977                           ;;;
0D977                           clear_hanuman:
0D977                           
0D977 A9 00                                   lda #$00
0D979                           
0D979 8D 01 05                                sta $501
0D97C 8D 05 05                                sta $505
0D97F 8D 09 05                                sta $509
0D982 8D 0D 05                                sta $50D
0D985 8D 11 05                                sta $511
0D988 8D 15 05                                sta $515
0D98B 8D 19 05                                sta $519
0D98E 8D C9 05                                sta $5c9
0D991                           
0D991 8D 1D 05                                sta $51D
0D994 8D 21 05                                sta $521
0D997 8D 25 05                                sta $525
0D99A 8D 29 05                                sta $529
0D99D 8D 2D 05                                sta $52D
0D9A0 8D 31 05                                sta $531
0D9A3 8D 35 05                                sta $535
0D9A6 8D 39 05                                sta $539
0D9A9 8D 3D 05                                sta $53D
0D9AC 8D 41 05                                sta $541
0D9AF 8D 45 05                                sta $545
0D9B2 8D 49 05                                sta $549
0D9B5 8D 4D 05                                sta $54D
0D9B8 8D 51 05                                sta $551
0D9BB 8D 55 05                                sta $555
0D9BE 8D 59 05                                sta $559
0D9C1 8D 5D 05                                sta $55D
0D9C4 8D 61 05                                sta $561
0D9C7 8D 65 05                                sta $565
0D9CA 8D 69 05                                sta $569
0D9CD 8D 6D 05                                sta $56D
0D9D0 8D 71 05                                sta $571
0D9D3 8D 7D 05                                sta $57D
0D9D6 8D 81 05                                sta $581
0D9D9 8D 85 05                                sta $585
0D9DC 8D B9 05                                sta $5b9
0D9DF 8D BD 05                                sta $5bd
0D9E2 8D C1 05                                sta $5c1
0D9E5 8D C5 05                                sta $5c5
0D9E8                           
0D9E8 60                                      rts
0D9E9                           
0D9E9                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D9E9                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0D9E9                           
0D9E9                           
0D9E9                           ;;;;start screen controller and is specific to LEVEL1 ; this code will be triggerred by variable screen_start when set to 10
0D9E9                           ;;;; when start button is pressed screen will load the screen one in $2000 memory and set the value of screen_start to zero.....
0D9E9                           ;;;;only used in Level1
0D9E9                           controller_test_start:
0D9E9                           
0D9E9                           
0D9E9                           
0D9E9                           
0D9E9 A5 B0                             lda $B0
0D9EB C9 0A                             cmp #10
0D9ED D0 16                             bne gg2_1
0D9EF                           
0D9EF A9 1E                             lda #30
0D9F1 8D 01 20                          sta $2001
0D9F4 A9 01                             lda #1
0D9F6 85 76                             sta random_enable
0D9F8 20 77 D9                          jsr clear_hanuman
0D9FB AD 8C 01                          lda stop_start
0D9FE C9 00                             cmp #0
0DA00 F0 06                             beq gameenter
0DA02 CE 8C 01                          dec stop_start
0DA05 60                        gg2_1   rts
0DA06 A5 B2                     	LDA $b2
0DA08 85 B3                     gameenter sta $b3
0DA0A                           
0DA0A A2 00                             ldx #$00
0DA0C                           
0DA0C A9 01                             LDA #$01		; strobe joypad
0DA0E 8D 16 40                  	STA $4016
0DA11 A9 00                     	LDA #$00
0DA13 8D 16 40                  	STA $4016
0DA16                           con_loop_s:
0DA16 AD 16 40                  	LDA $4016		; check the state of each button
0DA19 4A                        	LSR
0DA1A 66 B2                     	ROR $b2
0DA1C E8                                INX
0DA1D E0 08                             CPX #$08
0DA1F D0 F5                             bne con_loop_s
0DA21                           
0DA21 A5 B3                     	LDA $b3
0DA23 49 FF                     	EOR #$FF
0DA25 25 B2                     	AND $b2
0DA27 85 B4                     	STA $b4
0DA29                           
0DA29                           CheckUp_s:
0DA29 A9 10                     	LDA #%00010000
0DA2B                           	;AND justpressed
0DA2B 25 B2                     	AND $b2
0DA2D F0 00                             BEQ CheckDown_s
0DA2F                           
0DA2F                           CheckDown_s:
0DA2F A9 20                     	LDA #%00100000
0DA31                           	;AND justpressed
0DA31 25 20                     	AND $20
0DA33 F0 00                             Beq CheckLeft_s
0DA35                           
0DA35                           CheckLeft_s:
0DA35 A9 40                     	LDA #%01000000
0DA37                           	;AND justpressed
0DA37 25 B2                     	AND $b2
0DA39 F0 00                     	BEQ CheckRight_s
0DA3B                           
0DA3B                           
0DA3B                           CheckRight_s:
0DA3B A9 80                     	LDA #%10000000
0DA3D                           	;AND justpressed
0DA3D 25 B2                     	AND $b2
0DA3F F0 00                     	BEQ CheckSel_s
0DA41                           
0DA41                           CheckSel_s:
0DA41 A9 04                     	LDA #%00000100
0DA43                           ;	AND justpressed
0DA43 25 B2                             and $b2
0DA45 F0 00                     	BEQ CheckStart_s
0DA47                           
0DA47                           
0DA47                           CheckStart_s:
0DA47 A9 08                             LDA #%00001000
0DA49                           ;	AND justpressed
0DA49 25 B2                             and $b2
0DA4B F0 31                     	BEQ CheckB_s
0DA4D                           
0DA4D A9 00                             lda #0
0DA4F 85 76                             sta random_enable
0DA51 A9 00                             lda #0
0DA53 85 F8                     	sta ps
0DA55 20 1A C3                  	jsr press1
0DA58                                  ; jsr LoadSprites1
0DA58                           
0DA58 A9 01                     	lda #1
0DA5A 85 BD                     	sta pp
0DA5C                           ;	lda #0
0DA5C                           ;	sta screen_start
0DA5C A9 64                             lda #100
0DA5E 85 FC                             sta desparate
0DA60 20 D0 DC                          jsr pal_level
0DA63 A9 01                              LDA #$01
0DA65 20 04 C2                    JSR setCHRPage0000
0DA68 A9 03                       LDA #$03
0DA6A 20 18 C2                    JSR setCHRPage1000
0DA6D                           
0DA6D A9 00                     	lda #0
0DA6F 8D 01 20                  	sta $2001
0DA72 20 81 8C                  	jsr mainscreen1
0DA75 A9 1E                     	lda #30
0DA77 8D 01 20                  	sta $2001
0DA7A A9 01                             lda #1
0DA7C 85 CF                             sta trig_controller1
0DA7E                           
0DA7E                           CheckB_s:
0DA7E A9 02                     	LDA #%00000010
0DA80                           ;	AND justpressed
0DA80 25 B2                             and $b2
0DA82 F0 00                     	BEQ CheckA_s
0DA84                           CheckA_s:
0DA84 A9 01                     	LDA #%00000001
0DA86 25 24                     	AND $24
0DA88 25 B2                     	and $b2
0DA8A F0 01                     	BEQ CheckOver_s
0DA8C                           
0DA8C                           nex14:
0DA8C 60                         rts
0DA8D                           CheckOver_s:
0DA8D 60                                RTS
0DA8E                           load_timer:
0DA8E                                      ;lda time_display
0DA8E                                      ;cmp #1
0DA8E                                      ;bne dis_time_jmp
0DA8E A6 BC                                ldx time_hundreds
0DA90 BD F5 DA                             lda time_palette, x
0DA93 8D 7D 05                             sta $57D
0DA96 A6 BB                                ldx time_tens
0DA98 BD F5 DA                             lda time_palette, x
0DA9B 8D 81 05                             sta $581
0DA9E A6 BA                                ldx time_ones
0DAA0 BD F5 DA                             lda time_palette, x
0DAA3 8D 85 05                             sta $585
0DAA6                           dis_time_jmp:
0DAA6 60                                   rts
0DAA7                           ;       ----------------------------------------------------
0DAA7                           
0DAA7                           ;       ----------------------------------------------------
0DAA7                           delay_1_sec:
0DAA7 A5 BC                                 lda time_hundreds
0DAA9 C9 00                                 cmp #0
0DAAB D0 0C                                 bne timecontinue
0DAAD A5 BB                                 lda time_tens
0DAAF C9 00                                 cmp #0
0DAB1 D0 06                                 bne timecontinue
0DAB3 A5 BA                                 lda time_ones
0DAB5 C9 00                                 cmp #0
0DAB7 F0 2D                                 beq timeover
0DAB9                           
0DAB9                                       timecontinue:
0DAB9                           
0DAB9 A5 BD                                 lda pp
0DABB C9 01                                 cmp #1
0DABD D0 26                                 bne delay_1_jmp
0DABF E6 B9                                 inc sec_count
0DAC1 A5 B9                                 lda sec_count
0DAC3 C9 3C                                 cmp #60
0DAC5 D0 1E                                 bne delay_1_jmp
0DAC7 A9 01                                 lda #1
0DAC9 85 B9                                 sta sec_count
0DACB                                       ;sta dec_time
0DACB C6 BA                                 dec time_ones
0DACD A5 BA                                 lda time_ones
0DACF C9 FF                                 cmp #255
0DAD1 D0 12                                 bne delay_1_jmp
0DAD3 A9 09                                 lda #9
0DAD5 85 BA                                 sta time_ones
0DAD7 C6 BB                                 dec time_tens
0DAD9 A5 BB                                 lda time_tens
0DADB C9 FF                                 cmp #255
0DADD D0 06                                 bne delay_1_jmp
0DADF A9 09                                 lda #9
0DAE1 85 BB                                 sta time_tens
0DAE3 C6 BC                                 dec time_hundreds
0DAE5                           delay_1_jmp:
0DAE5 60                                    rts
0DAE6                           
0DAE6                           timeover:
0DAE6 A5 CD                     lda oover123
0DAE8 C9 01                     cmp #1
0DAEA F0 08                     beq abc
0DAEC A9 01                     lda #1
0DAEE 85 C5                     sta oover
0DAF0 A9 00                     lda #0
0DAF2 85 BD                     sta pp
0DAF4                           
0DAF4                           abc:
0DAF4 60                        rts
0DAF5                           ;--------------------------------------------------------
0DAF5                           ;         .db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0DAF5                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0DAF5                           time_palette:
0DAF5 30 31 32 33 34 35 36 37..              .db '0','1','2','3','4','5','6','7','8','9'
0DAFF                           ;      -----------------------------------------------------------------------
0DAFF                           
0DAFF                           
0DAFF                           
0DAFF                           
0DAFF                             ;;;pallete change for the quiz game main screen....
0DAFF                           palchange:
0DAFF A9 00                             lda #0
0DB01 8D 01 20                          sta $2001
0DB04 A2 00                             ldx #0
0DB06 A0 00                             ldy #0
0DB08                           
0DB08 A9 3F                            	LDA #$3F
0DB0A 8D 06 20                  	STA $2006
0DB0D A9 00                     	LDA #$00
0DB0F 8D 06 20                  	STA $2006
0DB12                           load_pal12:                       ; load palette
0DB12 BD 74 E7                          LDA palette_new,x
0DB15 8D 07 20                          sta $2007
0DB18 E8                                inx
0DB19 E0 20                             cpx #$20
0DB1B D0 F5                             bne load_pal12
0DB1D A9 1E                             lda #30
0DB1F 8D 01 20                          sta $2001
0DB22                           
0DB22 60                        brk2rts2  rts
0DB23                           
0DB23                           
0DB23                           
0DB23                            ;;pallete change for question screen
0DB23                            pal_changeforquestion:
0DB23 A9 00                              lda #0
0DB25 8D 01 20                          sta $2001
0DB28 A2 00                             ldx #0
0DB2A A0 00                             ldy #0
0DB2C                           
0DB2C A9 3F                            	LDA #$3F
0DB2E 8D 06 20                  	STA $2006
0DB31 A9 00                     	LDA #$00
0DB33 8D 06 20                  	STA $2006
0DB36                           load_pal123:                       ; load palette
0DB36 BD D4 E7                          LDA palette_question,x
0DB39 8D 07 20                          sta $2007
0DB3C E8                                inx
0DB3D E0 20                             cpx #$20
0DB3F D0 F5                             bne load_pal123
0DB41 A9 1E                             lda #30
0DB43 8D 01 20                          sta $2001
0DB46 60                                rts
0DB47                           
0DB47                           
0DB47                           
0DB47                           ;; this is the place where the program executes when the whole scrolling of 8 screens in level1 are completed and it gives the animation of "LEVEL2"...and then 
0DB47                           ;; triggers the subroutine prgchange
0DB47                            level1to2:
0DB47 A5 B5                                lda $b5
0DB49 C9 0A                                cmp #10
0DB4B D0 03                                bne dfx
0DB4D 20 34 DC                             jsr init_endmotion
0DB50                           
0DB50                                    ;  lda #40
0DB50                                    ;  sta level1_complete
0DB50                           
0DB50 60                        dfx           rts
0DB51                           blank_load:
0DB51 A9 00                                lda #0
0DB53 8D 01 20                             sta $2001
0DB56 A9 20                                LDA #$20                ; draw screen
0DB58 8D 06 20                      	STA $2006
0DB5B A9 00                         	LDA #$00
0DB5D 8D 06 20                      	STA $2006
0DB60                           
0DB60 A0 00                             ldy #$00
0DB62 A2 04                             ldx #$04
0DB64                           
0DB64                           
0DB64                           @NameLoop:
0DB64 A9 60                             lda #$60
0DB66 8D 07 20                          sta $2007
0DB69 C8                                iny
0DB6A D0 F8                             bne @NameLoop
0DB6C E6 11                             inc $11
0DB6E CA                                dex
0DB6F D0 F3                             bne @NameLoop
0DB71 20 D0 DC                           jsr pal_level
0DB74 A9 1E                             lda #30
0DB76 8D 01 20                          sta $2001
0DB79                           
0DB79                             ;      jsr palchangeforlevel
0DB79 60                                rts
0DB7A                           
0DB7A                           lev1_screen1load:
0DB7A A5 B5                             lda $b5
0DB7C C9 2F                             cmp #47
0DB7E D0 64                             bne dn2rts
0DB80 A9 01                     LDA #$01
0DB82 20 2C C2                  JSR setPRGBank
0DB85 A9 01                     lda #1
0DB87 85 CE                     sta gamelevel
0DB89                           
0DB89 A9 05                       LDA #$05
0DB8B 20 04 C2                    JSR setCHRPage0000
0DB8E                           
0DB8E 20 09 E3                  jsr palchange_galaxy
0DB91 A9 00                             lda #0
0DB93 8D 01 20                          sta $2001
0DB96 A9 20                            	LDA #$20                ; set to beginning of first nametable
0DB98 8D 06 20                      	STA $2006
0DB9B A9 00                         	LDA #$00
0DB9D 8D 06 20                      	STA $2006
0DBA0 A9 87                             LDA #<screen1_1              ; load low byte of first picture
0DBA2 85 10                             STA $10
0DBA4 A9 9A                             LDA #>screen1_1              ; load high byte of first picture
0DBA6 85 11                             STA $11
0DBA8 A0 00                             LDY #$00
0DBAA A2 04                             LDX #$04
0DBAC B1 10                     @NameLoop22:    LDA ($10),y
0DBAE 8D 07 20                                STA $2007
0DBB1 C8                                      INY
0DBB2 D0 F8                                   BNE @NameLoop22
0DBB4 E6 11                                   INC $11
0DBB6 CA                                      DEX
0DBB7 D0 F3                                   BNE @NameLoop22
0DBB9                                ;         jsr palchange
0DBB9 A9 1E                                   lda #30
0DBBB 8D 01 20                                sta $2001
0DBBE A9 63                                   lda #99                            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0DBC0 85 B5                                   sta $b5                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0DBC2 A9 8A                                   lda #%10001010
0DBC4 85 A5                                   sta $A5
0DBC6 8D 00 20                                sta $2000
0DBC9 A9 EF                                   lda #239
0DBCB 85 A4                                   sta $A4
0DBCD A9 00                                   lda #0
0DBCF 85 85                                   sta question_no
0DBD1 85 77                                   sta question_count
0DBD3 85 A8                                   sta $A8
0DBD5 85 A7                                   sta $A7
0DBD7 85 A6                                   sta $A6
0DBD9 85 BA                                   sta time_ones
0DBDB 85 BB                                   sta time_tens
0DBDD A9 06                                   lda #6
0DBDF 85 BC                                   sta time_hundreds
0DBE1                           
0DBE1 20 5B DC                                jsr init_startmotion
0DBE4                           
0DBE4                           
0DBE4                           
0DBE4                           
0DBE4                                         ;jsr LoadSprites1
0DBE4                                         ;lda #0
0DBE4                                         ;sta trig_gud
0DBE4                                         ;sta trig_bad
0DBE4                                         ;sta trig_que
0DBE4                           
0DBE4 60                        dn2rts rts
0DBE5                           
0DBE5                           ;;this is the place where the program runs when level is completed.., and it makes the prg bank switch after the "LEVEL2" animation is gone.......,it also initialises
0DBE5                           ;;the values for second level......;
0DBE5                           prgchang:
0DBE5                           
0DBE5 A5 B5                     lda $b5
0DBE7 C9 63                     cmp #99
0DBE9 D0 48                     bne dn2rtsk
0DBEB                           
0DBEB A9 00                     lda #0
0DBED 8D 01 20                  sta $2001
0DBF0 A9 28                     	LDA #$28                ; draw screen
0DBF2 8D 06 20                      	STA $2006
0DBF5 A9 00                         	LDA #$00
0DBF7 8D 06 20                      	STA $2006
0DBFA                           
0DBFA A0 00                             ldy #$00
0DBFC A2 04                             ldx #$04
0DBFE                           
0DBFE A9 87                             lda #<screen2_1
0DC00 85 10                             sta $10
0DC02 A9 9E                             lda #>screen2_1
0DC04 85 11                             sta $11
0DC06                           
0DC06                           @NameLoop1:
0DC06 B1 10                             lda ($10),y
0DC08 8D 07 20                          sta $2007
0DC0B C8                                iny
0DC0C D0 F8                             bne @NameLoop1
0DC0E E6 11                             inc $11
0DC10 CA                                dex
0DC11 D0 F3                             bne @NameLoop1
0DC13 A9 8A                       lda #%10001010
0DC15 85 A5                                   sta $A5
0DC17 8D 00 20                                sta $2000
0DC1A A9 EF                                   lda #239
0DC1C 85 A4                                   sta $A4
0DC1E A9 00                                   lda #0
0DC20 85 85                                   sta question_no
0DC22 85 77                                   sta question_count
0DC24                           
0DC24 A9 1E                                   lda #30
0DC26 8D 01 20                                sta $2001
0DC29                           
0DC29                           
0DC29 A9 67                                   lda #103                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0DC2B 85 B5                     sta $b5
0DC2D                           
0DC2D                           
0DC2D A9 00                     lda #0
0DC2F 85 76                     sta random_enable
0DC31 85 A9                     sta $A9
0DC33                                                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0DC33 60                        dn2rtsk  rts
0DC34                           ;;;;;;;;;;;;;;
0DC34                           ;;;to initialize and trigger end motion
0DC34                           ;;;
0DC34                           ;;;
0DC34                           init_endmotion :
0DC34                           
0DC34 A9 00                               lda #$00
0DC36 8D 01 05                            sta $501
0DC39 8D 05 05                            sta $505
0DC3C 8D 09 05                            sta $509
0DC3F 8D 0D 05                            sta $50D
0DC42 8D 10 05                            sta $510
0DC45 8D 15 05                            sta $515
0DC48 8D 19 05                            sta $519
0DC4B 8D C9 05                            sta $5c9
0DC4E                           
0DC4E A9 01                               lda #1
0DC50 85 EA                               sta trig_gud
0DC52 85 EB                               sta trig_bad
0DC54 85 E8                               sta trig_que
0DC56                           
0DC56                           
0DC56 A9 01                             lda #1
0DC58 85 E1                     	sta trig_endmotion
0DC5A                           
0DC5A 60                            rts
0DC5B                           ;;;;;;;;;;;;;;
0DC5B                           ;;;to initialize and trigger start motion
0DC5B                           ;;;
0DC5B                           ;;;
0DC5B                           init_startmotion:
0DC5B                           
0DC5B A9 E0                               lda #$e0
0DC5D 8D 1C 05                            sta $051C
0DC60 8D 20 05                            sta $0520
0DC63 8D 24 05                            sta $0524
0DC66 8D 28 05                            sta $0528
0DC69 A9 E8                               lda #$e8
0DC6B 8D 2C 05                            sta $052C
0DC6E 8D 30 05                            sta $0530
0DC71 8D 34 05                            sta $0534
0DC74 8D 38 05                            sta $0538
0DC77 A9 F0                               lda #$f0
0DC79 8D 3C 05                            sta $053C
0DC7C 8D 40 05                            sta $0540
0DC7F 8D 44 05                            sta $0544
0DC82 8D 48 05                            sta $0548
0DC85 A9 F8                               lda #$f8
0DC87 8D 4C 05                            sta $054C
0DC8A 8D 50 05                            sta $0550
0DC8D 8D 54 05                            sta $0554
0DC90 8D 58 05                            sta $0558
0DC93                           
0DC93 A9 30                               lda #$30
0DC95 8D 1F 05                            sta $51F
0DC98 8D 2F 05                            sta $52F
0DC9B 8D 3F 05                            sta $53F
0DC9E 8D 4F 05                            sta $54F
0DCA1                           
0DCA1 A9 38                               lda #$38
0DCA3 8D 23 05                            sta $523
0DCA6 8D 33 05                            sta $533
0DCA9 8D 43 05                            sta $543
0DCAC 8D 53 05                            sta $553
0DCAF                           
0DCAF A9 40                               lda #$40
0DCB1 8D 27 05                            sta $527
0DCB4 8D 37 05                            sta $537
0DCB7 8D 47 05                            sta $547
0DCBA 8D 57 05                            sta $557
0DCBD                           
0DCBD A9 48                               lda #$48
0DCBF 8D 2B 05                            sta $52B
0DCC2 8D 3B 05                            sta $53B
0DCC5 8D 4B 05                            sta $54B
0DCC8 8D 5B 05                            sta $55B
0DCCB                           
0DCCB A9 01                               lda #1
0DCCD 85 E2                     	  sta trig_startmotion
0DCCF                           
0DCCF                           
0DCCF                           
0DCCF                           
0DCCF 60                                  rts
0DCD0                           
0DCD0                           pal_level:
0DCD0 A9 00                              lda #0
0DCD2 8D 01 20                          sta $2001
0DCD5 A2 00                             ldx #0
0DCD7 A0 00                             ldy #0
0DCD9                           
0DCD9 A9 3F                            	LDA #$3F
0DCDB 8D 06 20                  	STA $2006
0DCDE A9 00                     	LDA #$00
0DCE0 8D 06 20                  	STA $2006
0DCE3                           load_pal1234:                       ; load palette
0DCE3 BD F4 E7                          LDA palette_level,x
0DCE6 8D 07 20                          sta $2007
0DCE9 E8                                inx
0DCEA E0 20                             cpx #$20
0DCEC D0 F5                             bne load_pal1234
0DCEE A9 1E                             lda #30
0DCF0 8D 01 20                          sta $2001
0DCF3 60                                rts
0DCF4                           
0DCF4                           new_desparate:
0DCF4 A5 FC                             lda desparate
0DCF6 C9 64                             cmp #100
0DCF8 D0 04                             bne jo
0DCFA                           
0DCFA A9 01                             lda #1
0DCFC 85 19                             sta trig_st
0DCFE 60                          jo:   rts
0DCFF                           
0DCFF                           
0DCFF                           back_to_start:
0DCFF                             ;    inc test
0DCFF                             ;    lda test
0DCFF                             ;    cmp #0
0DCFF                             ;    bne @rtt1
0DCFF A9 00                           lda #0
0DD01 85 FC                           sta desparate
0DD03 85 FB                           sta bug_imp
0DD05 85 B0                           sta $B0
0DD07 20 FF DA                        jsr palchange
0DD0A A9 00                             lda #0
0DD0C 85 76                             sta random_enable
0DD0E A9 00                             lda #0
0DD10 85 F8                     	sta ps
0DD12 85 BA                     	sta time_ones
0DD14 85 BB                     	sta time_tens
0DD16 A9 06                     	lda #6
0DD18 85 BC                     	sta time_hundreds
0DD1A 20 1A C3                  	jsr press1
0DD1D                           
0DD1D 20 0C C3                          jsr LoadSprites1
0DD20 20 5B DC                          jsr init_startmotion
0DD23                           
0DD23 A9 01                     	lda #1
0DD25 85 BD                     	sta pp
0DD27                           
0DD27                           
0DD27                           
0DD27 60                         @rtt1:    rts
0DD28                           
0DD28                            ;;Loads the credit screen  and credit screen pallete
0DD28                            creditscreen_ld:
0DD28 20 09 E3                      jsr palchange_galaxy
0DD2B A9 00                             lda #0
0DD2D 8D 01 20                         sta $2001
0DD30 A9 05                            LDA #$05
0DD32 20 04 C2                         JSR setCHRPage0000
0DD35 A9 20                             LDA #$20                ; draw screen
0DD37 8D 06 20                      	STA $2006
0DD3A A9 00                         	LDA #$00
0DD3C 8D 06 20                      	STA $2006
0DD3F                           
0DD3F A0 00                             ldy #$00
0DD41 A2 04                             ldx #$04
0DD43                           
0DD43 A9 87                             lda #<screen1_1
0DD45 85 10                             sta $10
0DD47 A9 9A                             lda #>screen1_1
0DD49 85 11                             sta $11
0DD4B                           
0DD4B                           @NameLoop211:
0DD4B B1 10                             lda ($10),y
0DD4D 8D 07 20                          sta $2007
0DD50 C8                                iny
0DD51 D0 F8                             bne @NameLoop211
0DD53 E6 11                             inc $11
0DD55 CA                                dex
0DD56 D0 F3                             bne @NameLoop211
0DD58 A9 0E                             LDA #%00001110
0DD5A 8D 01 20                  	STA $2001
0DD5D                           
0DD5D 85 FE                             sta credit_enable
0DD5F 60                        rts
0DD60                           ;;; trigger to load credit screen
0DD60                            creditscr_load:
0DD60 A5 FE                      lda credit_enable
0DD62 C9 0A                      cmp #10
0DD64 D0 0B                      bne fff2
0DD66 E6 FD                      inc test
0DD68 A5 FD                      lda test
0DD6A C9 00                      cmp #0
0DD6C D0 03                      bne fff2
0DD6E 20 28 DD                   jsr creditscreen_ld
0DD71 60                         fff2 rts
0DD72                           ;;;;;;;;;;;;;;;;;;;
0DD72                           ;;;to display "level 1" when first level starts
0DD72                           ;;;
0DD72                           ;;;
0DD72                           load_sprites_start:
0DD72                           
0DD72 A5 19                                       lda trig_st
0DD74 C9 01                                         cmp #1
0DD76 D0 1B                                         bne rt
0DD78                           
0DD78 E6 ED                                     INC smc1
0DD7A A5 ED                                     lda smc1
0DD7C C9 0F                                     CMP #15
0DD7E D0 13                                     BNE rt
0DD80 A9 00                                     lda #0
0DD82 85 ED                                     sta smc1
0DD84                           
0DD84                           
0DD84 A5 FF                      jjk :lda duf1
0DD86 C9 00                          cmp #0
0DD88 D0 0A                          bne jjk1
0DD8A A9 A2                          lda #$A2     ;;;L
0DD8C 8D A1 05                       sta $5A1
0DD8F                           
0DD8F A9 01                          lda #1
0DD91 85 FF                          sta duf1
0DD93 60                        rt:     rts
0DD94                           
0DD94 A5 FF                      jjk1: lda duf1
0DD96 C9 01                          cmp #1
0DD98 D0 0A                          bne jjk2
0DD9A A9 B2                           lda #$B2     ;;;E
0DD9C 8D A5 05                        sta $5A5
0DD9F                           
0DD9F A9 02                          lda #2
0DDA1 85 FF                          sta duf1
0DDA3 60                             rts
0DDA4                           
0DDA4 A5 FF                      jjk2:lda duf1
0DDA6 C9 02                          cmp #2
0DDA8 D0 0A                          bne jjk3
0DDAA A9 A3                          lda #$A3     ;;;V
0DDAC 8D A9 05                       sta $5A9
0DDAF                           
0DDAF A9 03                          lda #3
0DDB1 85 FF                          sta duf1
0DDB3 60                             rts
0DDB4                           
0DDB4 A5 FF                       jjk3:lda duf1
0DDB6 C9 03                          cmp #3
0DDB8 D0 0A                          bne jjk4
0DDBA A9 B2                          lda #$B2    ;;;E
0DDBC 8D AD 05                       sta $5AD
0DDBF A9 04                          lda #4
0DDC1 85 FF                          sta duf1
0DDC3 60                             rts
0DDC4                           
0DDC4 A5 FF                       jjk4:lda duf1
0DDC6 C9 04                          cmp #4
0DDC8 D0 0A                          bne jjk5
0DDCA A9 A2                          lda #$A2    ;;;L
0DDCC 8D B1 05                       sta $5B1
0DDCF A9 05                          lda #5
0DDD1 85 FF                          sta duf1
0DDD3 60                             rts
0DDD4                           
0DDD4 A5 FF                       jjk5:lda duf1
0DDD6 C9 05                          cmp #5
0DDD8 D0 0A                          bne jjk6
0DDDA A9 31                          lda #$31    ;;;1
0DDDC 8D B5 05                       sta $5B5
0DDDF A9 06                          lda #6
0DDE1 85 FF                          sta duf1
0DDE3 60                             rts
0DDE4                           
0DDE4                           
0DDE4 A5 FF                       jjk6:lda duf1
0DDE6 C9 06                           cmp #6
0DDE8 D0 05                           bne jjk7
0DDEA                           
0DDEA A9 07                           lda #7
0DDEC 85 FF                           sta duf1
0DDEE 60                              rts
0DDEF                           
0DDEF A5 FF                       jjk7:lda duf1
0DDF1 C9 07                           cmp #7
0DDF3 D0 05                           bne jjk8
0DDF5                           
0DDF5 A9 08                           lda #8
0DDF7 85 FF                           sta duf1
0DDF9 60                              rts
0DDFA                           
0DDFA A5 FF                       jjk8:lda duf1
0DDFC C9 08                           cmp #8
0DDFE D0 19                           bne jjk9
0DE00                           
0DE00 A9 00                           lda #$00
0DE02 8D A1 05                        sta $5A1
0DE05 8D A5 05                        sta $5A5
0DE08 8D A9 05                        sta $5A9
0DE0B 8D AD 05                        sta $5AD
0DE0E 8D B1 05                        sta $5B1
0DE11 8D B5 05                        sta $5B5
0DE14                           
0DE14 A9 09                          lda #9
0DE16 85 FF                          sta duf1
0DE18                           
0DE18 60                             rts
0DE19                           
0DE19                           
0DE19                           
0DE19 A5 FF                       jjk9:lda duf1
0DE1B C9 09                           cmp #9
0DE1D D0 05                           bne jjk10
0DE1F                           
0DE1F A9 0A                           lda #10
0DE21 85 FF                           sta duf1
0DE23 60                              rts
0DE24                           
0DE24 A9 00                      jjk10: lda #0
0DE26 85 19                             sta trig_st
0DE28 20 FF DC                          jsr back_to_start
0DE2B 60                                rts
0DE2C                            ;;;;;;;; this is the controller for selecting any of the three games
0DE2C                           start_controller:
0DE2C CE 8B 01                   dec initiate_con
0DE2F AD 8B 01                   lda initiate_con
0DE32 C9 00                      cmp #0
0DE34 D0 08                      bne @conti
0DE36 A9 00                      lda #0
0DE38 8D 89 01                   sta delay_selectup
0DE3B 8D 8A 01                   sta delay_selectdown
0DE3E                            @conti:
0DE3E A5 20                     	LDA $20
0DE40 85 22                     	sta $22
0DE42                           
0DE42 A2 00                             ldx #$00
0DE44                           
0DE44 A9 01                             LDA #$01		; strobe joypad
0DE46 8D 16 40                  	STA $4016
0DE49 A9 00                     	LDA #$00
0DE4B 8D 16 40                  	STA $4016
0DE4E                           @con_loop:
0DE4E AD 16 40                  	LDA $4016		; check the state of each button
0DE51 4A                        	LSR
0DE52 66 20                     	ROR $20
0DE54 E8                                INX
0DE55 E0 08                             CPX #$08
0DE57 D0 F5                             bne @con_loop
0DE59                           
0DE59 A5 22                     	LDA $22
0DE5B 49 FF                     	EOR #$FF
0DE5D 25 20                     	AND $20
0DE5F 85 24                     	STA $24
0DE61                           
0DE61                           @CheckUp:
0DE61                           
0DE61 AD 89 01                          lda delay_selectup
0DE64 C9 00                             cmp #0
0DE66 D0 34                             bne @CheckDown
0DE68 A9 10                     	LDA #%00010000
0DE6A                           	;AND justpressed
0DE6A 25 20                     	AND $20
0DE6C F0 2E                             BEQ @CheckDown
0DE6E A9 0D                             lda #13
0DE70 8D 8B 01                          sta initiate_con
0DE73 A9 03                             lda #3
0DE75 8D 89 01                          sta delay_selectup
0DE78 AD 00 05                          lda $500
0DE7B C9 5F                             cmp #$5F
0DE7D F0 18                             beq @three
0DE7F C9 70                             cmp #$70
0DE81 F0 04                             beq @one
0DE83 C9 81                             cmp #$81
0DE85 F0 08                             beq @two
0DE87 A9 5F                      @one:   lda #$5F
0DE89 8D 00 05                          sta $500
0DE8C 4C C2 DE                          jmp @CheckStart
0DE8F A9 70                      @two:  lda #$70
0DE91 8D 00 05                         sta $500
0DE94 4C C2 DE                         jmp @CheckStart
0DE97                           @three :
0DE97 A9 81                            lda #$81
0DE99 8D 00 05                         sta $500
0DE9C                           @CheckDown:
0DE9C                           
0DE9C AD 8A 01                          lda delay_selectdown
0DE9F C9 00                             cmp #0
0DEA1 D0 1F                             bne @CheckStart
0DEA3 A9 20                     	LDA #%00100000
0DEA5                           	;AND justpressed
0DEA5 25 20                     	AND $20
0DEA7 F0 19                     	BEQ @CheckStart
0DEA9 A9 0D                     	lda #13
0DEAB 8D 8B 01                  	sta initiate_con
0DEAE A9 03                     	lda #3
0DEB0 8D 8A 01                  	sta delay_selectdown
0DEB3 AD 00 05                          lda $500
0DEB6 C9 5F                             cmp #$5F
0DEB8 F0 D5                             beq @two
0DEBA C9 70                             cmp #$70
0DEBC F0 D9                             beq @three
0DEBE C9 81                             cmp #$81
0DEC0 F0 C5                             beq @one
0DEC2                           
0DEC2                           ;@CheckSel:
0DEC2                           ;	LDA #%00000100
0DEC2                           ;	AND justpressed
0DEC2                           ;	BEQ @CheckStart
0DEC2                           
0DEC2                           @CheckStart
0DEC2 A9 08                     	LDA #%00001000
0DEC4 25 24                     	AND $24
0DEC6 F0 34                     	BEQ @CheckOver
0DEC8                           
0DEC8 AD 00 05                  lda $500
0DECB C9 5F                     	cmp #$5F
0DECD D0 0E                     	bne @check2
0DECF 20 CE E0                  	jsr make_quiz
0DED2 A9 00                     	lda #0
0DED4 8D 00 01                  	sta screen_start6
0DED7 A9 01                     	lda #1
0DED9 8D 5E 01                  	sta game_no
0DEDC 60                        	rts
0DEDD C9 70                     @check2 cmp #$70
0DEDF D0 04                             bne @check3
0DEE1 20 1F DF                  jsr complete
0DEE4 60                            rts
0DEE5                           @check3:
0DEE5 C9 81                             cmp #$81
0DEE7 D0 13                             bne @CheckOver
0DEE9                           
0DEE9                               ;    LDX #%00011110
0DEE9                                ;   jsr initMMC1Mapper
0DEE9 A9 03                             lda #3
0DEEB 20 2C C2                          JSR setPRGBank
0DEEE 20 FD DE                          jsr make_malaria
0DEF1                           
0DEF1 A9 00                             lda #00
0DEF3 AA                                tax
0DEF4 20 50 AB                          jsr InitAddy
0DEF7                           
0DEF7 A9 00                             lda #0
0DEF9 8D 00 01                          sta screen_start6
0DEFC                           
0DEFC                           
0DEFC                           
0DEFC                           
0DEFC                           ;@CheckB:
0DEFC                           ;	LDA #%00000010
0DEFC                           ; 	AND justpressed
0DEFC                           ;	BEQ @CheckA
0DEFC                           
0DEFC                           ;@CheckA:
0DEFC                           ;	LDA #%00000001
0DEFC                           ;	AND justpressed
0DEFC                           ;	BEQ @CheckOver
0DEFC                           
0DEFC                           @CheckOver:
0DEFC 60                                RTS
0DEFD                           ;;;;;;;;;;;;;;;;Malaria Game Initialization;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0DEFD                           make_malaria:
0DEFD A9 00                     lda #0
0DEFF 8D 01 20                  sta $2001
0DF02                           
0DF02                           ;jsr initialise_var_malaria
0DF02 A9 0E                     LDA #$0e
0DF04 20 04 C2                  JSR setCHRPage0000
0DF07 A9 0F                     LDA #$0f
0DF09 20 18 C2                  JSR setCHRPage1000
0DF0C A2 00                     ldx #0
0DF0E A0 00                     ldy #0
0DF10 20 89 DF                  jsr load_pal_malaria
0DF13 20 9F DF                  jsr screen_load_malaria
0DF16                           ;	LDA #%10001000
0DF16                           ;	sta PPUCRTL
0DF16                           ;	STA $2000
0DF16                           ;ldx #0
0DF16                           ;stx scroll_h
0DF16                           ;stx scroll_v
0DF16 20 6E DF                  jsr LoadSprites_malaria
0DF19 A9 1E                     lda #30
0DF1B 8D 01 20                  sta $2001
0DF1E 60                        rts
0DF1F                           complete:
0DF1F A9 12                             LDA #18
0DF21 20 04 C2                          JSR setCHRPage0000
0DF24 20 E5 E2                          jsr pal_typestart
0DF27 A9 04                             lda #4
0DF29 20 2C C2                          jsr setPRGBank
0DF2C A9 04                             lda #4
0DF2E 8D 09 02                          sta game_no1
0DF31 A9 00                             lda #0
0DF33 8D 01 20                          sta $2001
0DF36 A9 20                            	LDA #$20                ; draw screen
0DF38 8D 06 20                      	STA $2006
0DF3B A9 00                         	LDA #$00
0DF3D 8D 06 20                      	STA $2006
0DF40                           
0DF40 A0 00                             ldy #$00
0DF42 A2 04                             ldx #$04
0DF44                           
0DF44 A9 00                             lda #<type_screen
0DF46 85 10                             sta $10
0DF48 A9 80                             lda #>type_screen
0DF4A 85 11                             sta $11
0DF4C                           
0DF4C                           @NameLoop:
0DF4C B1 10                             lda ($10),y
0DF4E 8D 07 20                          sta $2007
0DF51 C8                                iny
0DF52 D0 F8                             bne @NameLoop
0DF54 E6 11                             inc $11
0DF56 CA                                dex
0DF57 D0 F3                             bne @NameLoop
0DF59 A9 0E                             lda #%00001110
0DF5B 8D 01 20                          sta $2001
0DF5E A9 14                             lda #20
0DF60 8D 00 01                          sta screen_start6
0DF63 A9 00                             lda #0
0DF65 8D 09 02                          sta game_no1
0DF68 A9 00                             lda #0
0DF6A 20 2C C2                          JSR setPRGBank
0DF6D 60                                rts
0DF6E                           LoadSprites_malaria:
0DF6E A2 00                           LDX #$00
0DF70                           @LoadSpritesLoop:
0DF70 BD BC 91                        LDA sprites_malaria, x            ; load data from address (sprites + x)
0DF73 9D 00 05                        STA $0500, x              ; store into RAM address ($0200 + x)
0DF76 E8                              INX                       ; X = X + 1
0DF77 E0 6C                           CPX #108                   ; Compare X to # of values (divide by 4 for total # of sprites)
0DF79 D0 F5                           BNE @LoadSpritesLoop
0DF7B 60                              rts
0DF7C                           ;  -----------------------------------------------
0DF7C                           initialise_var_malaria:
0DF7C A9 50                                            lda #80
0DF7E 85 8A                                            sta $8A
0DF80                           
0DF80 A9 0F                                            lda #$0f
0DF82 85 26                                            sta $26
0DF84                           
0DF84 A9 06                                            lda #6
0DF86 85 27                                            sta $27
0DF88 60                                               rts
0DF89                           ;       ----------------------------------------------
0DF89                           load_pal_malaria:
0DF89 A9 3F                             LDA #$3F
0DF8B 8D 06 20                  	STA $2006
0DF8E A9 00                     	LDA #$00
0DF90 8D 06 20                  	STA $2006
0DF93                           @load_pal:                       ; load palette
0DF93 BD 9C 8D                          LDA palette_mal,x
0DF96 8D 07 20                          sta $2007
0DF99 E8                                inx
0DF9A E0 20                             cpx #$20
0DF9C D0 F5                             bne @load_pal
0DF9E 60                                rts
0DF9F                           ;       ----------------------------------------------
0DF9F                           screen_load_malaria:
0DF9F A9 20                             LDA #$20                ; draw screen
0DFA1 8D 06 20                      	STA $2006
0DFA4 A9 00                         	LDA #$00
0DFA6 8D 06 20                      	STA $2006
0DFA9                           
0DFA9 A0 00                             ldy #$00
0DFAB A2 04                             ldx #$04
0DFAD                           
0DFAD A9 BC                             lda #<screen_malaria
0DFAF 85 10                             sta $10
0DFB1 A9 8D                             lda #>screen_malaria
0DFB3 85 11                             sta $11
0DFB5                           
0DFB5                           @NameLoop:
0DFB5 B1 10                             lda ($10),y
0DFB7 8D 07 20                          sta $2007
0DFBA C8                                iny
0DFBB D0 F8                             bne @NameLoop
0DFBD E6 11                             inc $11
0DFBF CA                                dex
0DFC0 D0 F3                             bne @NameLoop
0DFC2                           
0DFC2 60                        rts
0DFC3                           ;;;;;;;;;;;;;;;;TYPING GAME INITIALISATION;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0DFC3                           screen_load_typing:
0DFC3                           
0DFC3                           
0DFC3 A9 20                        	LDA #$20                ; set to beginning of first nametable
0DFC5 8D 06 20                      	STA $2006
0DFC8 A9 00                         	LDA #$00
0DFCA 8D 06 20                      	STA $2006
0DFCD                           
0DFCD A9 88                             LDA #<screen1_typing              ; load low byte of first picture
0DFCF 85 10                             STA $10
0DFD1 A9 A7                             LDA #>screen1_typing            ; load high byte of first picture
0DFD3 85 11                             STA $11
0DFD5                           
0DFD5 A0 00                             LDY #$00
0DFD7 A2 04                             LDX #$04
0DFD9                           
0DFD9                           @NameLoop:                       ; loop to draw entire nametable
0DFD9 B1 10                             LDA ($10),y
0DFDB 8D 07 20                          STA $2007
0DFDE C8                                INY
0DFDF D0 F8                             BNE @NameLoop
0DFE1 E6 11                             INC $11
0DFE3 CA                                DEX
0DFE4 D0 F3                             BNE @NameLoop
0DFE6 60                             rts
0DFE7                           
0DFE7                           ;-------------------------------
0DFE7                            LoadSpritesLoop_1:
0DFE7 BD 18 A6                       LDA sprites_rock, x            ; load data from address (sprites + x)
0DFEA 9D 40 05                        STA $0540, x              ; store into RAM address ($0200 + x)
0DFED E8                              INX                       ; X = X + 1
0DFEE E0 54                           CPX #84
0DFF0                                                   ; Compare X to # of values (divide by 4 for total # of sprites)
0DFF0 D0 F5                           BNE LoadSpritesLoop_1
0DFF2 20 66 9C                        jsr load_hanuman
0DFF5 60                              rts
0DFF6                           load_pal_typing:
0DFF6                           
0DFF6 A9 3F                            	LDA #$3F
0DFF8 8D 06 20                  	STA $2006
0DFFB A9 00                     	LDA #$00
0DFFD 8D 06 20                  	STA $2006
0E000                           @load_pal:                       ; load palette
0E000 BD 88 AB                          LDA palette_typing,x
0E003 8D 07 20                          sta $2007
0E006 E8                                inx
0E007 E0 20                             cpx #$20
0E009 D0 F5                             bne @load_pal
0E00B A9 00                             lda #0
0E00D 8D 05 20                          sta $2005
0E010 8D 05 20                          sta $2005
0E013 60                                rts
0E014                           
0E014                           initialise_var_typing:
0E014 A9 F8                             lda #$f8
0E016 8D 17 01                          sta xright
0E019                                 ;
0E019 A9 01                            lda #$01
0E01B 8D 16 01                          sta xleft
0E01E 8D 27 01                          sta trigger
0E021 8D 40 01                          sta var_new
0E024 8D 31 01                         sta $131
0E027                           
0E027 A9 06                             lda #$06
0E029 8D 18 01                          sta ytop
0E02C                           
0E02C A9 F4                             lda #$F4
0E02E 8D 19 01                      sta ybottom
0E031                           
0E031 A9 04                              lda #4
0E033 8D 0B 01                           sta $10b
0E036                           
0E036 A9 00                              lda #0
0E038 8D 0D 01                           sta Current
0E03B 85 A3                              sta $A3
0E03D 85 A4                              sta $A4
0E03F 60                                rts
0E040                           
0E040                           make_typing:
0E040 A9 00                     lda #0
0E042 8D 01 20                  sta $2001
0E045 20 14 E0                  jsr initialise_var_typing
0E048 A9 06                     LDA #$06
0E04A 20 04 C2                  JSR setCHRPage0000
0E04D A9 08                     LDA #$08
0E04F 20 18 C2                  JSR setCHRPage1000
0E052 A2 00                     ldx #0
0E054 A0 00                     ldy #0
0E056 20 F6 DF                  jsr load_pal_typing
0E059 20 C3 DF                  jsr screen_load_typing
0E05C A9 88                     	LDA #%10001000
0E05E 8D 04 01                  	sta PPUCRTL
0E061 8D 00 20                  	STA $2000
0E064 A2 00                     ldx #0
0E066 20 E7 DF                  jsr LoadSpritesLoop_1
0E069 A9 1E                     lda #30
0E06B 8D 01 20                  sta $2001
0E06E 60                        rts
0E06F                           
0E06F                           ;;;;;;;;;;;;;;QUIZ Game initialisation  ;;;;;;;;;;
0E06F                           screenload_quiz:
0E06F A9 04                             lda #4
0E071 20 2C C2                          jsr setPRGBank
0E074 A9 04                             lda #4
0E076 8D 09 02                          sta game_no1
0E079                           
0E079 A9 20                         	LDA #$20                ; draw screen
0E07B 8D 06 20                      	STA $2006
0E07E A9 00                         	LDA #$00
0E080 8D 06 20                      	STA $2006
0E083                           
0E083 A0 00                             ldy #$00
0E085 A2 04                             ldx #$04
0E087                           
0E087 A9 00                             lda #<start_screen11
0E089 85 10                             sta $10
0E08B A9 84                             lda #>start_screen11
0E08D 85 11                             sta $11
0E08F                           
0E08F                           @NameLoop:
0E08F B1 10                             lda ($10),y
0E091 8D 07 20                          sta $2007
0E094 C8                                iny
0E095 D0 F8                             bne @NameLoop
0E097 E6 11                             inc $11
0E099 CA                                dex
0E09A D0 F3                             bne @NameLoop
0E09C A9 00                             lda #0
0E09E 20 2C C2                          jsr setPRGBank
0E0A1 A9 00                             lda #0
0E0A3 8D 09 02                          sta game_no1
0E0A6                                   ;jsr initMusic
0E0A6 60                                rts
0E0A7                           
0E0A7                           loadsprites_quiz:
0E0A7 A2 00                             LDX #$00
0E0A9                           @LoadSpritesLoop:
0E0A9 BD 40 C2                        LDA sprites, x            ; load data from address (sprites + x)
0E0AC 9D 00 05                        STA $0500, x              ; store into RAM address ($0200 + x)
0E0AF E8                              INX                       ; X = X + 1
0E0B0 E0 CC                           CPX #204                   ; Compare X to # of values (divide by 4 for total # of sprites)
0E0B2 D0 F5                           BNE @LoadSpritesLoop
0E0B4 20 8C C1                        jsr InitMusic
0E0B7 60                               rts
0E0B8                           
0E0B8                           palchange_quiz:
0E0B8 A9 3F                           	LDA #$3F
0E0BA 8D 06 20                  	STA $2006
0E0BD A9 00                     	LDA #$00
0E0BF 8D 06 20                  	STA $2006
0E0C2                           @load_pal:                       ; load palette
0E0C2 BD 94 E7                          LDA palette_quiz,x
0E0C5 8D 07 20                          sta $2007
0E0C8 E8                                inx
0E0C9 E0 20                             cpx #$20
0E0CB D0 F5                             bne @load_pal
0E0CD 60                                rts
0E0CE                           ;;; this is the palce where the program executes when he selects hanuman quiz game
0E0CE                           make_quiz:
0E0CE A9 00                            lda #0
0E0D0 8D 01 20                         sta $2001
0E0D3 A2 00                            ldx #0
0E0D5 A0 00                            ldy #0
0E0D7 A9 00                            LDA #$0
0E0D9 20 04 C2                         JSR setCHRPage0000
0E0DC A9 03                            LDA #$3
0E0DE 20 18 C2                         JSR setCHRPage1000
0E0E1 20 B8 E0                         jsr palchange_quiz
0E0E4 20 6F E0                         jsr screenload_quiz
0E0E7 20 A7 E0                         jsr loadsprites_quiz
0E0EA A9 8A                            	LDA #%10001010
0E0EC 8D 00 20                  	STA $2000
0E0EF 85 A5                     	sta $A5
0E0F1 A9 1E                            lda #30
0E0F3 8D 01 20                         sta $2001
0E0F6 60                               rts
0E0F7                            ;;;;;;;;;;;;;;;;;;;;;;;
0E0F7                             body_touch:
0E0F7 A5 CF                            lda trig_controller1
0E0F9 C9 01                            cmp #1
0E0FB D0 31                            bne @TP2
0E0FD AD 1C 05                         lda $51C
0E100 8D 8E 01                         sta head
0E103 CE 8E 01                         dec head
0E106 CE 8E 01                         dec head
0E109 A0 00                             ldy #0
0E10B A2 00                             ldx #0
0E10D                           @touch_loop:
0E10D B9 00 05                             lda $500,y
0E110 CD 8E 01                             cmp head                ; comparing the y position of the bag
0E113 F0 1A                                beq @obj
0E115 EE 8E 01                             inc head
0E118 CD 8E 01                             cmp head                ; comparing the y position of the bag
0E11B F0 12                                beq @obj
0E11D EE 8E 01                             inc head
0E120 CD 8E 01                             cmp head                ; comparing the y position of the bag
0E123 F0 0A                                beq @obj
0E125 C8                                   iny
0E126 C8                                   iny
0E127 C8                                   iny
0E128 C8                                   iny
0E129 E8                                   inx
0E12A E0 03                                cpx #3
0E12C D0 DF                                bne @touch_loop
0E12E                           @TP2:
0E12E 60                                   rts
0E12F                           
0E12F                           ;------------------------------------------------
0E12F                           @obj:
0E12F C8                        iny
0E130 C8                        iny
0E131 C8                        iny
0E132 B9 00 05                  lda $500,y                 ;loading the x position of corresponding tiles
0E135 8D 8F 01                  sta bad                ; loading x position of corresponding object in varyjsr
0E138                           
0E138                           
0E138                           
0E138 A5 98                     lda L
0E13A C9 00                     cmp #0
0E13C F0 09                     beq @right6
0E13E AD 27 05                  lda $527
0E141 8D 8D 01                  sta hanu                  ; loading x position of bag when hanuman is moving left
0E144 4C 4D E1                  jmp @loopin6
0E147                           
0E147                           @right6:
0E147 AD 1F 05                  lda $51f                  ; loading x position of bag when hanuman is moving right
0E14A 8D 8D 01                  sta hanu
0E14D                           
0E14D                           @loopin6:
0E14D AD 8F 01                  lda bad
0E150 85 D0                     sta temp_varyjsr
0E152 A9 08                     lda #8
0E154 85 D1                     sta loop_var1
0E156                           ;lda #7
0E156 85 D2                     sta loop_var2
0E158                           @touch_loop1:
0E158 AD 8D 01                              lda hanu
0E15B CD 8F 01                              cmp bad
0E15E F0 20                                 beq @detected
0E160 EE 8F 01                              inc bad
0E163 C6 D1                                 dec loop_var1
0E165 A5 D1                                 lda loop_var1
0E167 C9 00                                 cmp #0
0E169 D0 ED                                 bne @touch_loop1
0E16B A5 D0                                 lda temp_varyjsr
0E16D 8D 8F 01                              sta bad
0E170 C6 D2                                 dec loop_var2
0E172 EE 8D 01                              inc hanu
0E175 A9 07                                 lda #7
0E177 85 D1                                 sta loop_var1
0E179 A5 D2                                 lda loop_var2
0E17B C9 00                                 cmp #0
0E17D D0 D9                                 bne @touch_loop1
0E17F 60                                    rts
0E180                           
0E180                           @detected:
0E180 A9 FF                               lda #$ff
0E182 99 00 05                            sta $500,y
0E185 A9 01                               lda #1
0E187 85 6C                               sta bo
0E189 85 B6                               sta bo0
0E18B                           @TP1:
0E18B 60                                  rts
0E18C                           ;  ----------------------------------------------------------------------------------------------
0E18C                           body_touch1:
0E18C A5 CF                            lda trig_controller1
0E18E C9 01                            cmp #1
0E190 D0 31                            bne @TP2
0E192 AD 30 05                         lda $530
0E195 8D 8E 01                         sta head
0E198 CE 8E 01                         dec head
0E19B CE 8E 01                         dec head
0E19E A0 00                             ldy #0
0E1A0 A2 00                             ldx #0
0E1A2                           @touch_loop:
0E1A2 B9 00 05                             lda $500,y
0E1A5 CD 8E 01                             cmp head                ; comparing the y position of the bag
0E1A8 F0 1A                                beq @obj
0E1AA EE 8E 01                             inc head
0E1AD CD 8E 01                             cmp head                ; comparing the y position of the bag
0E1B0 F0 12                                beq @obj
0E1B2 EE 8E 01                             inc head
0E1B5 CD 8E 01                             cmp head                ; comparing the y position of the bag
0E1B8 F0 0A                                beq @obj
0E1BA C8                                   iny
0E1BB C8                                   iny
0E1BC C8                                   iny
0E1BD C8                                   iny
0E1BE E8                                   inx
0E1BF E0 03                                cpx #3
0E1C1 D0 DF                                bne @touch_loop
0E1C3                           @TP2:
0E1C3 60                                   rts
0E1C4                           
0E1C4                           ;------------------------------------------------
0E1C4                           @obj:
0E1C4 C8                        iny
0E1C5 C8                        iny
0E1C6 C8                        iny
0E1C7 B9 00 05                  lda $500,y                 ;loading the x position of corresponding tiles
0E1CA 8D 8F 01                  sta bad                ; loading x position of corresponding object in varyjsr
0E1CD                           
0E1CD                           
0E1CD                           
0E1CD A5 98                     lda L
0E1CF C9 00                     cmp #0
0E1D1 F0 09                     beq @right6
0E1D3 AD 33 05                  lda $533
0E1D6 8D 8D 01                  sta hanu                  ; loading x position of bag when hanuman is moving left
0E1D9 4C E2 E1                  jmp @loopin6
0E1DC                           
0E1DC                           @right6:
0E1DC AD 33 05                  lda $533                  ; loading x position of bag when hanuman is moving right
0E1DF 8D 8D 01                  sta hanu
0E1E2                           
0E1E2                           @loopin6:
0E1E2 AD 8F 01                  lda bad
0E1E5 85 D0                     sta temp_varyjsr
0E1E7 A9 08                     lda #8
0E1E9 85 D1                     sta loop_var1
0E1EB                           ;lda #7
0E1EB 85 D2                     sta loop_var2
0E1ED                           @touch_loop1:
0E1ED AD 8D 01                              lda hanu
0E1F0 CD 8F 01                              cmp bad
0E1F3 F0 20                                 beq @detected
0E1F5 EE 8F 01                              inc bad
0E1F8 C6 D1                                 dec loop_var1
0E1FA A5 D1                                 lda loop_var1
0E1FC C9 00                                 cmp #0
0E1FE D0 ED                                 bne @touch_loop1
0E200 A5 D0                                 lda temp_varyjsr
0E202 8D 8F 01                              sta bad
0E205 C6 D2                                 dec loop_var2
0E207 EE 8D 01                              inc hanu
0E20A A9 07                                 lda #7
0E20C 85 D1                                 sta loop_var1
0E20E A5 D2                                 lda loop_var2
0E210 C9 00                                 cmp #0
0E212 D0 D9                                 bne @touch_loop1
0E214 60                                    rts
0E215                           
0E215                           @detected:
0E215 A9 FF                               lda #$ff
0E217 99 00 05                            sta $500,y
0E21A A9 01                               lda #1
0E21C 85 6C                               sta bo
0E21E 85 B6                               sta bo0
0E220                           @TP1:
0E220 60                                  rts
0E221                           ;;;;;;;;;;;;;;;;;;;;;;;
0E221                           
0E221                           ;;;;;;;;;;;;;;;;;;;;;;;
0E221                           dec_hanuman:
0E221 CE 1C 05                          dec $051C
0E224 CE 20 05                          dec $0520
0E227 CE 24 05                          dec $0524
0E22A CE 28 05                          dec $0528
0E22D CE 2C 05                          dec $052C
0E230 CE 30 05                          dec $0530
0E233 CE 34 05                          dec $0534
0E236 CE 38 05                          dec $0538
0E239 CE 3C 05                          dec $053C
0E23C CE 40 05                          dec $0540
0E23F CE 44 05                          dec $0544
0E242 CE 48 05                          dec $0548
0E245 CE 4C 05                          dec $054C
0E248 CE 50 05                          dec $0550
0E24B CE 54 05                          dec $0554
0E24E CE 58 05                          dec $0558
0E251 60                        rts
0E252                           
0E252                           inc_hanuman:
0E252 EE 28 05                          inc $0528
0E255 EE 24 05                          inc $0524
0E258 EE 20 05                          inc $0520
0E25B EE 1C 05                          inc $051C
0E25E EE 2C 05                          inc $052C
0E261 EE 30 05                          inc $0530
0E264 EE 34 05                          inc $0534
0E267 EE 38 05                          inc $0538
0E26A EE 3C 05                          inc $053C
0E26D EE 40 05                          inc $0540
0E270 EE 44 05                          inc $0544
0E273 EE 48 05                          inc $0548
0E276 EE 4C 05                          inc $054C
0E279 EE 50 05                          inc $0550
0E27C EE 54 05                          inc $0554
0E27F EE 58 05                          inc $0558
0E282 60                        rts
0E283                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;
0E283                           dec_hanuman_left:
0E283 CE 1F 05                                   dec $051F
0E286 CE 27 05                          dec $0527
0E289 CE 23 05                          dec $0523
0E28C CE 2B 05                          dec $052B
0E28F CE 2F 05                          dec $052F
0E292 CE 37 05                          dec $0537
0E295 CE 33 05                          dec $0533
0E298 CE 3B 05                          dec $053B
0E29B CE 3F 05                          dec $053F
0E29E CE 47 05                          dec $0547
0E2A1 CE 43 05                          dec $0543
0E2A4 CE 4B 05                          dec $054B
0E2A7 CE 4F 05                          dec $054F
0E2AA CE 57 05                          dec $0557
0E2AD CE 53 05                          dec $0553
0E2B0 CE 5B 05                          dec $055B
0E2B3 60                                rts
0E2B4                           ;;;;;;;;;;;;;;;;;;
0E2B4                           inc_hanuman_right:
0E2B4 EE 23 05                          inc $0523
0E2B7 EE 2B 05                          inc $052B
0E2BA EE 1F 05                          inc $051F
0E2BD EE 27 05                          inc $0527
0E2C0 EE 2F 05                          inc $052F
0E2C3 EE 37 05                          inc $0537
0E2C6 EE 33 05                          inc $0533
0E2C9 EE 3B 05                          inc $053B
0E2CC EE 3F 05                          inc $053F
0E2CF EE 47 05                          inc $0547
0E2D2 EE 43 05                          inc $0543
0E2D5 EE 4B 05                          inc $054B
0E2D8 EE 4F 05                          inc $054F
0E2DB EE 57 05                          inc $0557
0E2DE EE 53 05                          inc $0553
0E2E1 EE 5B 05                          inc $055B
0E2E4 60                                rts
0E2E5                           ;;;;;;;;;;;;;;
0E2E5                           
0E2E5                           pal_typestart:
0E2E5 A9 00                             lda #0
0E2E7 8D 01 20                          sta $2001
0E2EA A2 00                             ldx #0
0E2EC A0 00                             ldy #0
0E2EE                           
0E2EE A9 3F                            	LDA #$3F
0E2F0 8D 06 20                  	STA $2006
0E2F3 A9 00                     	LDA #$00
0E2F5 8D 06 20                  	STA $2006
0E2F8                           @load_pal12:                       ; load palette
0E2F8 BD 54 E7                          LDA palette_typestart,x
0E2FB 8D 07 20                          sta $2007
0E2FE E8                                inx
0E2FF E0 20                             cpx #$20
0E301 D0 F5                             bne @load_pal12
0E303 A9 0E                             lda #%00001110
0E305 8D 01 20                          sta $2001
0E308                           
0E308 60                        @brk2rts2  rts
0E309                           
0E309                           palchange_galaxy:
0E309 A9 00                             lda #0
0E30B 8D 01 20                          sta $2001
0E30E A2 00                             ldx #0
0E310 A0 00                             ldy #0
0E312                           
0E312 A9 3F                            	LDA #$3F
0E314 8D 06 20                  	STA $2006
0E317 A9 00                     	LDA #$00
0E319 8D 06 20                  	STA $2006
0E31C                           @load_pal12:                       ; load palette
0E31C BD B4 E7                          LDA palette_galaxy,x
0E31F 8D 07 20                          sta $2007
0E322 E8                                inx
0E323 E0 20                             cpx #$20
0E325 D0 F5                             bne @load_pal12
0E327 A9 1E                             lda #30
0E329 8D 01 20                          sta $2001
0E32C                           
0E32C 60                        @brk2rts2  rts
0E32D                           ; --------------------------------------------
0E32D                           ;;;;;;;;;;;;;;;;;
0E32D A9 1F                     arrow11: lda #$1f
0E32F 8D 95 05                          sta $595
0E332 8D 99 05                          sta $599
0E335                           
0E335 A9 D8                             lda #$d8
0E337 8D 94 05                           sta $594
0E33A 8D 98 05                           sta $598
0E33D                           
0E33D 60                                rts
0E33E                           
0E33E                           
0E33E                           
0E33E A9 D8                     arrow22: lda #$d8
0E340 8D 94 05                           sta $594
0E343 8D 98 05                           sta $598
0E346 A9 63                              lda #$63
0E348 8D 95 05                          sta $595
0E34B A9 73                             lda #$73
0E34D 8D 99 05                          sta $599
0E350 A9 50                             lda #$50
0E352 8D 97 05                           sta $597
0E355 A9 58                              lda #$58
0E357 8D 9B 05                           sta $59b
0E35A 60                                rts
0E35B                           
0E35B                           
0E35B                           
0E35B                           
0E35B                           press_arrow:
0E35B A5 2C                                lda ps2
0E35D C9 01                                 cmp #1
0E35F D0 21                                 bne avv1
0E361                           
0E361 E6 2E                                 INC varch8
0E363 A5 2E                                  lda varch8
0E365 C9 0A                                  CMP #10
0E367 D0 19                                  BNE avv1
0E369 A9 00                                  lda #0
0E36B 85 2E                                  sta varch8
0E36D                           
0E36D A5 2D                                 lda ps3
0E36F C9 00                                 cmp #0
0E371 D0 08                                 bne ffg1
0E373 20 2D E3                              jsr arrow11
0E376 A9 01                                 lda #1
0E378 85 2D                                 sta ps3
0E37A 60                                    rts
0E37B                           
0E37B 20 3E E3                       ffg1:  jsr arrow22
0E37E A9 00                                lda #0
0E380 85 2D                                sta ps3
0E382                           
0E382                           
0E382 60                               avv1: rts
0E383                           
0E383                           
0E383                           ; ---------------------------------------------
0E383                           start_controller_typing:
0E383                           
0E383 A5 20                     	LDA $20
0E385 85 22                     	sta $22
0E387                           
0E387 A2 00                             ldx #$00
0E389                           
0E389 A9 01                             LDA #$01		; strobe joypad
0E38B 8D 16 40                  	STA $4016
0E38E A9 00                     	LDA #$00
0E390 8D 16 40                  	STA $4016
0E393                           @con_loop:
0E393 AD 16 40                  	LDA $4016		; check the state of each button
0E396 4A                        	LSR
0E397 66 20                     	ROR $20
0E399 E8                                INX
0E39A E0 08                             CPX #$08
0E39C D0 F5                             bne @con_loop
0E39E                           
0E39E A5 22                     	LDA $22
0E3A0 49 FF                     	EOR #$FF
0E3A2 25 20                     	AND $20
0E3A4 85 24                     	STA $24
0E3A6                           
0E3A6                           
0E3A6                           @CheckB:
0E3A6 A9 02                             LDA #%00000010
0E3A8 25 24                     	AND $24
0E3AA F0 18                     	BEQ @CheckA
0E3AC A9 02                             lda #2
0E3AE 8D 5E 01                          sta game_no
0E3B1 A9 02                             lda #2
0E3B3 20 2C C2                          JSR setPRGBank
0E3B6 20 40 E0                          jsr make_typing
0E3B9                           
0E3B9 A9 00                             lda #00
0E3BB AA                                tax
0E3BC 20 E2 AD                          jsr InitAddyt
0E3BF                           
0E3BF A9 00                             lda #0
0E3C1 8D 00 01                          sta screen_start6
0E3C4                           
0E3C4                           
0E3C4                           @CheckA:
0E3C4 60                                RTS
0E3C5                           ;       --------------------------------------------------
0E3C5                           
0E3C5                           ;     -----------------------------------------------
0E3C5                           
0E3C5                           ClearSprites11:
0E3C5 A9 00                           lda #0
0E3C7 A2 00                           ldx #0
0E3C9                           @loop:
0E3C9 9D 00 06                        STA $600, x
0E3CC E8                              INX
0E3CD D0 FA                           BNE @loop
0E3CF 60                              rts
0E3D0                           ;     -----------------------------------------
0E3D0                           
0E3D0                           ;     ----------------------------------------------------
0E3D0                           load_correct:
0E3D0 A9 00                                  lda #0
0E3D2 A2 00                                  ldx #0
0E3D4 A0 00                                  ldy #0
0E3D6 A9 00                                  lda #%00000000
0E3D8 8D 01 20                               sta $2001
0E3DB                           @loop1:
0E3DB A9 21                                  LDA #$21                ; draw screen
0E3DD 8D 06 20                      	     STA $2006
0E3E0 B9 48 E7                      	     LDA typ_byte,y
0E3E3 8D 06 20                      	     STA $2006
0E3E6 84 2F                         	     sty typ_variable
0E3E8 A0 00                         	     ldy #0
0E3EA                           @loop:
0E3EA BD 92 E8                               lda correct_sprite,x
0E3ED 8D 07 20                      	     sta $2007
0E3F0 C8                            	     iny
0E3F1 E8                            	     inx
0E3F2 C0 08                         	     cpy #8
0E3F4 D0 F4                         	     bne @loop
0E3F6 A4 2F                         	     ldy typ_variable
0E3F8 C8                            	     iny
0E3F9 C0 08                         	     cpy #8
0E3FB D0 DE                         	     bne @loop1
0E3FD                           
0E3FD A9 1E                                  lda #%00011110
0E3FF 8D 01 20                               sta $2001
0E402 A9 00                                  lda #0
0E404 8D 05 20                               sta $2005
0E407 8D 05 20                               sta $2005
0E40A 60                                     rts
0E40B                           ;            ----------------------------------------------
0E40B                           load_incorrect:
0E40B A9 00                                  lda #0
0E40D A2 00                                  ldx #0
0E40F A0 00                                  ldy #0
0E411 A9 00                                  lda #%00000000
0E413 8D 01 20                               sta $2001
0E416                           @loop1:
0E416 A9 21                                  LDA #$21                ; draw screen
0E418 8D 06 20                      	     STA $2006
0E41B B9 48 E7                      	     LDA typ_byte,y
0E41E 8D 06 20                      	     STA $2006
0E421 84 2F                         	     sty typ_variable
0E423 A0 00                         	     ldy #0
0E425                           @loop:
0E425 BD 52 E8                               lda incorr,x
0E428 8D 07 20                      	     sta $2007
0E42B C8                            	     iny
0E42C E8                            	     inx
0E42D C0 08                         	     cpy #8
0E42F D0 F4                         	     bne @loop
0E431 A4 2F                         	     ldy typ_variable
0E433 C8                            	     iny
0E434 C0 08                         	     cpy #8
0E436 D0 DE                         	     bne @loop1
0E438                           
0E438 A9 1E                                  lda #%00011110
0E43A 8D 01 20                               sta $2001
0E43D A9 00                                  lda #0
0E43F 8D 05 20                               sta $2005
0E442 8D 05 20                               sta $2005
0E445 60                                     rts
0E446                           ;            -----------------------------------------------
0E446                           typ_end_seq:
0E446 A5 96                                 lda end_seq
0E448 C9 01                                 cmp #1
0E44A D0 23                                 bne @ppp
0E44C                           
0E44C A9 10                                   LDA #$10
0E44E 20 04 C2                                JSR setCHRPage0000
0E451                           
0E451 A9 0B                                   LDA #$0b
0E453 20 18 C2                                JSR setCHRPage1000
0E456                           
0E456                           
0E456                           
0E456                           
0E456 20 70 E4                                jsr end_initialization_typ
0E459 A9 00                                   lda #0
0E45B 85 96                                   sta end_seq
0E45D                           
0E45D A9 05                                   LDA #$05
0E45F 20 2C C2                                JSR setPRGBank
0E462                                         
0E462 A9 04                                   lda #4
0E464 8D 5B 01                                sta level_change
0E467                                         
0E467 A9 02                                   lda #2
0E469 8D 5E 01                                sta game_no
0E46C                                         
0E46C 20 C7 80                                jsr ClearSprites12
0E46F                           
0E46F 60                        @ppp:       rts
0E470                           
0E470                           ;       -------------------------------------------------
0E470                           end_initialization_typ:
0E470 A9 01                                            lda #1
0E472 8D 27 01                                         sta trigger
0E475 8D 40 01                                         sta var_new
0E478 85 29                                            sta $29
0E47A 85 CF                                            sta trig_controller1
0E47C 85 5A                                            sta end_seq_check
0E47E                                                  ;inc level_change
0E47E                                                  ;jsr loading_letters_end
0E47E 60                                               rts
0E47F                           
0E47F                           ;       -------------------------------------------------
0E47F                           NMI:
0E47F A5 5A                             lda end_seq_check
0E481 C9 01                             cmp #1
0E483 D0 03                             bne @lol
0E485 4C AB E6                          jmp ending_seq
0E488                           @lol:
0E488 AD 09 02                          lda game_no1
0E48B C9 04                             cmp #4
0E48D D0 01                             bne dwnrr
0E48F 40                                rti
0E490 AD 00 01                  dwnrr :  lda screen_start6
0E493 C9 0A                             cmp #10
0E495 D0 07                             bne dwntogame
0E497 20 2C DE                          jsr start_controller
0E49A 20 AA C1                          jsr update_spr_2in1
0E49D 40                        checkfor2        rti
0E49E                           
0E49E                           
0E49E                                 ;  jsr load_objects
0E49E                           dwntogame :
0E49E C9 14                             cmp #20
0E4A0 D0 04                             bne enterthegame
0E4A2 20 83 E3                          jsr start_controller_typing
0E4A5                                  ; inc delay_start_typing
0E4A5                                   ;cmp #0
0E4A5                                  ; beq enterthegame
0E4A5 40                                rti
0E4A6                           enterthegame:
0E4A6 AD 5E 01                          lda game_no
0E4A9 C9 01                             cmp #1
0E4AB D0 45                             bne checkfor2_1
0E4AD 20 72 DD                          jsr load_sprites_start
0E4B0 20 F4 DC                          jsr new_desparate
0E4B3 20 D3 D1                          jsr endmotion                 ;to enable the motion of hanuman when level completes
0E4B6 20 28 D2                          jsr startmotion               ;to enable the motion of hanuman when level begins
0E4B9 20 E5 DB                          jsr prgchang
0E4BC 20 4E C3                          jsr press_start               ;to display "press start" in starting screen
0E4BF 20 47 DB                          jsr level1to2
0E4C2 20 7A DB                          jsr lev1_screen1load
0E4C5 20 9A D8                          jsr gud_exp                   ;to change the frame when one takes gud object
0E4C8 20 4C D9                          jsr bad_exp                   ;to change the expression when one takes bad object
0E4CB 20 EE D8                          jsr pal_change                ;to change the pallete when one takes bad objects
0E4CE 20 8E DA                          jsr load_timer
0E4D1 20 A7 DA                          jsr delay_1_sec
0E4D4 20 E9 D9                          jsr controller_test_start
0E4D7 20 23 D7                          jsr endscreen
0E4DA 20 C0 D7                          jsr moveend
0E4DD 20 47 D8                          jsr moveaway
0E4E0 20 E7 D7                          jsr face
0E4E3 20 2A D8                          jsr baggoingdown
0E4E6 20 B5 C1                          jsr update_sprites
0E4E9 20 55 D0                          jsr controller_test
0E4EC 20 C6 C1                          jsr update_sprites1
0E4EF                                   
0E4EF                                   ;lda fast_speed               ;trigger for turbo speed
0E4EF                                   ;cmp #1
0E4EF                                   ;bne gt
0E4EF                                   ;jsr controller_test
0E4EF 4C F5 E4                          jmp gt
0E4F2                           
0E4F2                                   checkfor2_1:
0E4F2 4C D6 E5                          jmp checkfor2_2
0E4F5                                   ;lda #0
0E4F5                                   ;sta fast_speed
0E4F5                           ;;;     -------------------------------------------------------
0E4F5                           ;;;     BANK SWITCHING
0E4F5 A5 CE                       gt:   lda gamelevel
0E4F7 C9 00                             cmp #0
0E4F9 D0 68                             bne change_level1
0E4FB 20 00 80                          jsr load_sprites
0E4FE 20 6B 8F                          jsr scrollup
0E501 20 91 91                          jsr scrolldown
0E504 20 AE 8C                          jsr delay_cal
0E507 20 A9 8B                          jsr delay_cal2
0E50A 20 F2 91                          jsr triggering_scroll
0E50D 20 A9 84                          jsr background
0E510 20 63 86                          jsr background1
0E513 20 58 81                          JSR newcontroller
0E516 20 53 AB                          jsr PlayAddy
0E519                           
0E519                           
0E519 A5 76                     lda random_enable
0E51B C9 00                     cmp #0
0E51D D0 31                     bne hhhh
0E51F                           
0E51F                           
0E51F                           
0E51F A5 28                             lda $28
0E521 C9 01                             cmp #1
0E523 D0 2C                             BNE here
0E525 20 C2 D5                          jsr touch
0E528 20 35 D5                          jsr newgd_touch
0E52B 20 F7 E0                          jsr body_touch
0E52E 20 8C E1                          jsr body_touch1
0E531 20 F9 C7                          jsr load         ; to set diffrent delays for diffrent object
0E534                           
0E534                           
0E534 20 C7 C4                           jsr m1          ; m1-m7 -to drop the seven objects randomly  from the top of the screen
0E537 20 15 C5                           jsr m2          ; m1-m4 bad objects
0E53A 20 61 C5                           jsr m3          ; m5-quetion object
0E53D 20 AA C5                           jsr m4          ; m6-m7 good objects
0E540 20 FF C5                           jsr m5          ;
0E543 20 45 C6                           jsr m6          ;
0E546 20 DF C6                           jsr m7          ;
0E549 20 6F C7                           jsr m8
0E54C                           
0E54C 20 25 D5                           jsr timepass     ;jst for delay
0E54F 40                               RTI
0E550                           hhhh
0E550 40                              RTI
0E551 20 18 D5                   here:     jsr inc_k
0E554                           
0E554 20 F9 C7                             jsr load
0E557 A5 49                                lda $49
0E559 8D 13 05                             sta #$513
0E55C AD 96 01                             lda loc8
0E55F 8D CB 05                             sta $5CB
0E562                           
0E562 40                                   RTI
0E563                           
0E563                           change_level1:
0E563 A5 CE                                   lda gamelevel
0E565                                         ;cmp #1
0E565                                         ;bne change_level22
0E565                           
0E565                                      ;   jsr load_sprites_1
0E565 20 60 DD                                jsr creditscr_load
0E568 20 B3 8E                                jsr scrollup_1
0E56B 20 6F 90                                jsr scrolldown_1
0E56E 20 6C 8C                                jsr delay_cal_1
0E571 20 99 8B                                jsr delay_cal2_1
0E574 20 17 91                                jsr triggering_scroll_1
0E577 20 99 84                                jsr background_1
0E57A 20 53 86                                jsr background1_1
0E57D 20 2A 81                                JSR newcontroller_1
0E580 20 53 AB                                jsr PlayAddy
0E583                           
0E583                           
0E583 A5 76                     lda random_enable
0E585 C9 00                     cmp #0
0E587 D0 3A                     bne hhhh1
0E589                           
0E589                           
0E589                           
0E589 A5 28                             lda $28
0E58B C9 01                             cmp #1
0E58D D0 35                             BNE here1
0E58F                           
0E58F 20 C2 D5                          jsr touch
0E592 20 35 D5                          jsr newgd_touch
0E595 20 F7 E0                          jsr body_touch
0E598 20 8C E1                          jsr body_touch1
0E59B 20 F9 C7                          jsr load          ; to set diffrent delays for diffrent object
0E59E                           
0E59E 20 C7 C4                           jsr m1          ; m1-m7 -to drop the seven objects randomly  from the top of the screen
0E5A1 20 15 C5                           jsr m2          ; m1-m4 bad objects
0E5A4 20 61 C5                           jsr m3          ; m5-quetion object
0E5A7 20 AA C5                           jsr m4          ; m6-m7 good objects
0E5AA 20 FF C5                           jsr m5          ;
0E5AD 20 45 C6                           jsr m6          ;
0E5B0 20 DF C6                           jsr m7          ;
0E5B3 20 61 C5                           jsr m3          ;
0E5B6                                   ; jsr m4          ;
0E5B6 20 FF C5                           jsr m5          ;
0E5B9 20 45 C6                           jsr m6          ;
0E5BC                                  ;s  jsr m7          ;
0E5BC 20 6F C7                           jsr m8
0E5BF                           
0E5BF                           
0E5BF 20 25 D5                           jsr timepass     ;jst for delay
0E5C2 40                               RTI
0E5C3                           hhhh1
0E5C3 40                              RTI
0E5C4 20 18 D5                   here1:     jsr inc_k
0E5C7                           
0E5C7 20 F9 C7                             jsr load
0E5CA A5 49                                lda $49
0E5CC 8D 13 05                             sta #$513
0E5CF AD 96 01                             lda loc8
0E5D2 8D CB 05                             sta $5CB
0E5D5 40                        IRQ           RTI
0E5D6                           checkfor2_2:
0E5D6 C9 02                              cmp #2
0E5D8 D0 3D                              bne @checkfor3
0E5DA 20 AA C1                           jsr update_spr_2in1
0E5DD 20 8A 92                           jsr clearing_letters
0E5E0                                   ;     ----------------------------------------------------------
0E5E0                                   ;     first rock level code
0E5E0                                   ;     -----------------------------------------------------------
0E5E0 AD 5B 01                                lda level_change
0E5E3 C9 00                                   cmp #0
0E5E5 D0 13                                   bne @mon_level
0E5E7                           
0E5E7 20 C1 99                                jsr loading_letters_0
0E5EA A5 A3                                   LDA $A3
0E5EC 8D 05 20                                STA $2005
0E5EF A5 A4                                   LDA $A4
0E5F1 8D 05 20                                STA $2005
0E5F4 20 54 99                                jsr Compare_0
0E5F7                           
0E5F7                                         ;jsr scrollanimation_0
0E5F7                           
0E5F7 4C C9 E6                                jmp universal
0E5FA                                   ;     ----------------------------------------------------------
0E5FA                                   ;     first monster level code
0E5FA                                   ;     -----------------------------------------------------------
0E5FA                           @mon_level:
0E5FA AD 5B 01                                lda level_change
0E5FD C9 01                                   cmp #1
0E5FF D0 19                                   bne @snake_level
0E601                           
0E601 20 74 9A                                jsr loading_letters_1
0E604 A5 A3                                   LDA $A3
0E606 8D 05 20                                STA $2005
0E609 A5 A4                                   LDA $A4
0E60B 8D 05 20                                STA $2005
0E60E 20 07 9A                                jsr Compare_1
0E611 20 D9 9E                                jsr update2
0E614                                         ;jsr scrollanimation_1
0E614                           
0E614 4C C9 E6                                jmp universal
0E617 4C 61 E6                                @checkfor3: jmp @checkfor3_1
0E61A                                   ;     ----------------------------------------------------------
0E61A                                   ;     second snake code
0E61A                                   ;     -----------------------------------------------------------
0E61A                           @snake_level:
0E61A AD 5B 01                                 lda level_change
0E61D C9 02                                    cmp #2
0E61F D0 43                                    bne @snow_level
0E621 20 C5 92                                 jsr loading_letters
0E624 20 10 93                                 jsr loading_letters2
0E627 A5 A3                                    LDA $A3
0E629 8D 05 20                                 STA $2005
0E62C A5 A4                                    LDA $A4
0E62E 8D 05 20                                 STA $2005
0E631 20 20 8D                                 jsr monster_colour
0E634 20 6D 8B                                 jsr mon_exp
0E637 20 AC 94                                 jsr projectile1
0E63A 20 AA 95                                 jsr projectile2
0E63D 20 6C 96                                 jsr projectile3
0E640 20 D3 98                                 jsr trigger_proj1
0E643 20 0B 99                                 jsr trigger_proj2
0E646 20 16 99                                 jsr trigger_proj3
0E649 20 36 99                                 jsr trigger_proj4
0E64C 20 9C 90                                 JSR controller_test_typing      ; check for user input
0E64F 20 DA 8A                                 jsr Compare2          ;to make hanuman walk when we found correct letter
0E652 20 3D 8E                                 jsr monster_fun1
0E655 20 4E 8F                                 jsr monster_fun2
0E658 20 56 93                                 jsr delay_typing_lol
0E65B 20 D2 A0                                 jsr update3
0E65E                           
0E65E 4C C9 E6                                 jmp universal
0E661 4C FB E6                                 @checkfor3_1: jmp checkfor3_2
0E664                                   ;     ----------------------------------------------------------
0E664                                   ;     third snow code
0E664                                   ;     -----------------------------------------------------------
0E664                           @snow_level:
0E664 AD 5B 01                                 lda level_change
0E667 C9 03                                    cmp #3
0E669 D0 40                                    bne ending_seq
0E66B 20 91 9B                                 jsr loading_letters_3
0E66E 20 DC 9B                                 jsr loading_letters2_3
0E671 A5 A3                                    LDA $A3
0E673 8D 05 20                                 STA $2005
0E676 A5 A4                                    LDA $A4
0E678 8D 05 20                                 STA $2005
0E67B 20 CD 9C                                 jsr snow_monster_static
0E67E 20 91 9E                                 jsr snow_monster_hit
0E681 20 00 80                                 jsr snow_monster_fall
0E684 20 20 8D                                 jsr monster_colour
0E687 20 56 93                                 jsr delay_typing_lol
0E68A 20 AC 94                                 jsr projectile1
0E68D 20 AA 95                                 jsr projectile2
0E690 20 6C 96                                 jsr projectile3
0E693 20 D3 98                                 jsr trigger_proj1
0E696 20 0B 99                                 jsr trigger_proj2
0E699 20 16 99                                 jsr trigger_proj3
0E69C 20 36 99                                 jsr trigger_proj4
0E69F 20 BA 9A                                 JSR Compare1_3      ; check for user input
0E6A2 20 31 9B                                 jsr Compare2_3
0E6A5 20 D2 A0                                 jsr update3
0E6A8                                          ;jsr scrollanimation_3
0E6A8 4C C9 E6                                 jmp universal
0E6AB                           ;              --------------------------------------------------------
0E6AB                           ending_seq:
0E6AB                                         ;lda level_change
0E6AB                                         ;cmp #4
0E6AB                                         ;bne universal
0E6AB                                          
0E6AB 20 46 E4                                jsr typ_end_seq
0E6AE 20 5B 80                                jsr loading_letters_end
0E6B1                           
0E6B1 20 59 81                                jsr ResetKeyboard_end
0E6B4 20 69 81                                jsr ReadKeyboard_end
0E6B7 20 97 81                                jsr ParseKeyboard_end
0E6BA                           
0E6BA                           
0E6BA 20 D2 80                                jsr typ_end_loading_underlines
0E6BD 20 1A 81                                jsr typ_end_clearing_underlines
0E6C0 20 00 80                                jsr typ_end_Compare
0E6C3 20 BC 80                                JSR update_spritespp
0E6C6                           
0E6C6 4C 47 E7                                jmp ennd
0E6C9                                   ;     ----------------------------------------------------------
0E6C9                                   ;     universal code
0E6C9                                   ;     -----------------------------------------------------------
0E6C9                           
0E6C9                                         universal:
0E6C9                                         ;jsr press_arrow
0E6C9                           
0E6C9 20 B2 8E                                jsr hanuman_colour                              ;;;;;;universal jsr
0E6CC 20 23 8E                                jsr scroll_walk
0E6CF 20 EC 93                                jsr loading_underlines
0E6D2 20 25 94                                jsr loading_underlines1
0E6D5                           
0E6D5 20 6D 94                                jsr clearing_underlines
0E6D8 20 B5 C1                                JSR update_sprites
0E6DB 20 6F A3                                jsr ResetKeyboard
0E6DE 20 7F A3                                jsr ReadKeyboard
0E6E1 20 AD A3                                jsr ParseKeyboard
0E6E4 20 F2 8D                                jsr walk_fun             ;to make hanuman walk when we found correct letter
0E6E7 20 03 8C                                jsr hit_fun
0E6EA 20 A3 90                                jsr StartHitRockAnim
0E6ED 20 A5 80                                jsr scrollanimation
0E6F0 A5 A3                                   LDA $A3
0E6F2 8D 05 20                                 STA $2005
0E6F5 A5 A4                                    LDA $A4
0E6F7 8D 05 20                                 STA $2005
0E6FA                                         ;jsr PlayAddyt
0E6FA                           
0E6FA 40                                      rti
0E6FB                           checkfor3_2:
0E6FB                           
0E6FB AD 85 01                          lda $185
0E6FE C9 0A                             cmp #10
0E700 D0 00                             bne nex
0E702                                  ;  jsr palchange_mal
0E702 20 B5 C1                  nex :   jsr update_sprites
0E705                           
0E705 20 00 80                          jsr controller_test_malaria
0E708 20 07 82                          jsr garbage_motion
0E70B 20 39 82                          jsr mos_motion
0E70E 20 81 8B                          jsr ultimate
0E711 20 53 AB                          jsr PlayAddy
0E714 20 C3 82                          jsr mos_1
0E717 20 E1 82                          jsr mos_2
0E71A 20 FC 82                          jsr mos_3
0E71D 20 21 83                          jsr mos_4
0E720 20 3F 83                          jsr mos_5
0E723                           
0E723 20 C1 83                          jsr update_boy
0E726 20 27 84                          jsr update_girl
0E729 20 F6 86                          jsr detection1
0E72C 20 E2 87                         jsr detection2
0E72F 20 47 88                          jsr detection3
0E732 20 E1 8B                         jsr found1
0E735 20 11 8C                          jsr found2
0E738                           
0E738 20 41 8C                        jsr found3
0E73B 20 71 8C                          jsr found4
0E73E 20 A1 8C                          jsr found5
0E741 20 BB 81                          jsr racket_mos
0E744 20 10 81                          jsr demoscreen_load
0E747                                   ;
0E747                             ;      jsr PlayAddy            ; play the music
0E747                                  ;
0E747                           
0E747 40                        ennd        RTI
0E748                           
0E748                           
0E748                           ;       ----------------------------------------------------
0E748                           typ_byte:
0E748 0D 2D 4D 6D 8D AD CD ED   .db $0d,$2d,$4d,$6d,$8d,$ad,$cd,$ed
0E750                           ;   ----------------------------------------------------
0E750                           
0E750                            sprites_2in1:
0E750                           
0E750                           ;   vert tile attr horiz
0E750                           ;neg o
0E750                              ;vert tile attr horiz
0E750 5F C4 00 21               .db $5f, $C4, $00, $21 ;sprite 0
0E754                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  typing game palletes;;;;;;;;;;;;;;;;;;;;;;
0E754                           
0E754                           ;       ----------------------------------------------------------
0E754                           
0E754                           palette_typestart:
0E754                           ;.byte $3F,$20 ,$27, $28, $3F, $14   , $27,$21,$3F,$20 ,$27, $28 ,$3F, $14   , $27,$21
0E754 3F 3F 3F 28 3F 14 28 21.. .byte $3F ,$3F ,$3F, $28,$3F ,$14 ,$28 ,$21 , $3F ,$3F ,$28 ,$02 ,$3F ,$3F, $3F ,$28
0E764 3F 20 27 28 3F 14 27 21.. .byte $3F,$20 ,$27, $28 ,$3F, $14   , $27,$21,$3F,$20 ,$27, $28 ,$3F, $14   , $27,$21
0E774                           palette_new:
0E774                           
0E774 28 07 27 28 28 29 1A 0A.. .byte $28, $07, $27, $28 ,$28, $29, $1a ,$0a, $28 ,$11, $30, $21 ,$28,$29, $21, $0a
0E784                           
0E784 28 16 0F 38 28 0D 20 16.. .byte $28,$16,$0f,$38,  $28, $0D, $20, $16,   $28,$30,$2e,$06,    $28, $16, $07, $27
0E794                           palette_quiz:
0E794 21 16 0F 07 21 16 0F 07.. 	.byte $21,$16,$0f,$07,   $21,$16,$0f,$07,   $21,$16,$0f,$07,   $21,$16,$0f,$07
0E7A4                           	;SPR
0E7A4 28 16 0F 38 28 16 28 18.. 	.byte $28,$16,$0f,$38, $28,$16,$28,$18,   $28,$30,$2e,$06,    $28,$28,$3d,$08
0E7B4                           palette_galaxy:
0E7B4 3F 30 01 21 3F 08 17 27..    .byte $3F, $30 ,$01, $21 ,$3F, $08 , $17, $27, $3F, $31 , $01 ,$12 , $3F, $31 , $01 ,$12
0E7C4 3F 16 0F 38 3F 0D 20 16..    .byte $3f,$16,$0f,$38,  $3f, $0D, $20, $16,   $3f,$30,$2e,$06,    $3f,$28,$3d,$08
0E7D4                           palette_question:
0E7D4 30 03 12 0F 30 0A 1A 0F..          .byte $30,$03,$12,$0f,   $30,$0a,$1a,$0f,   $30,$26,$0f,$16,   $30,$27,$09,$1A
0E7E4                           	;SPR
0E7E4 30 16 0F 05 30 16 38 18.. 	.byte $30,$16,$0f,$05, $30,$16,$38,$18,   $30,$30,$2e,$06,    $30,$17,$27,$28
0E7F4                           
0E7F4                            palette_level:
0E7F4 0F 0F 0F 0F 0F 0F 0F 0F..   .byte $0f,$0f,$0f,$0f,   $0f,$0f,$0f,$0f,   $0f,$0f,$0f,$0f,   $0f,$0f,$0f,$0f
0E804                           	;SPR
0E804 0F 16 0F 38 0F 16 38 18.. 	.byte $0f,$16,$0f,$38, $0f,$16,$38,$18,   $0f,$30,$2e,$06,    $0f,$17,$27,$28
0E814                           
0E814                           no_of_gudobjects:
0E814 C8 0A 06 04               .db #200,#10, #6, $04
0E818                           
0E818                           Library:
0E818 15 15 14 05 02 13         .db $15,$15,$14,$05,$02,$13
0E81E                           
0E81E                           sprite:
0E81E 8E 1E 00 50               .db #142, $1e, $00, $50 ;sprite 0
0E822                           
0E822                           palette:
0E822                           	;BG
0E822 12 0F 15 30 12 0F 15 30.. 	.byte $12, $0f ,$15, $30,$12, $0f ,$15, $30,$12, $0f ,$15, $30,$12, $0f ,$15, $30
0E832                           	;SPR
0E832 12 30 20 10 12 0F 0F 0F.. 	.byte $12,$30,$20,$10,$12,$0F,$0F,$0F,$12,$0F,$0F,$0F,$12,$0F,$0F,$0F
0E842                           
0E842                           
0E842                           Pall:
0E842 11 0E 05 30 11 18 27 30..     .byte  $11,$0E,$05,$30,  $11,$18,$27,$30,   $11,$21,$01,$30,    $11,$0E,$15,$30
0E852                           ;     -------------------------------------------------------------------
0E852                           incorr:
0E852 1A 1B 1C E7 23 20 21 22   .db $1a, $1b, $1c, $E7, $23, $20, $21, $22
0E85A 24 25 26 E7 27 28 29 E7   .db $24, $25, $26, $E7, $27, $28, $29, $E7
0E862 E7 2A 28 2C 3A 3B 3C E7   .db $E7, $2A, $28, $2c, $3a, $3b, $3c, $e7
0E86A E7 0F 1F 28 28 6E E7 E7   .db $e7, $0f, $1f, $28, $28, $6e, $e7, $e7
0E872 E7 2B 0D 28 28 1D E7 E7   .db $e7, $2b, $0d, $28, $28, $1d, $e7, $e7
0E87A E7 27 28 2D 3D 0E 1E E7   .db $e7, $27, $28, $2d, $3d, $0e, $1e, $e7
0E882 2E 28 3E E7 3F 28 6F E7   .db $2e, $28, $3e, $e7, $3f, $28, $6f, $e7
0E88A 60 70 80 E7 90 A0 68 22   .db $60, $70, $80, $e7, $90, $a0, $68, $22
0E892                           ;   --------------------------------------------------------
0E892                           correct_sprite:
0E892 E7 E7 E7 E7 E7 E7 00 01   .db $E7, $E7, $E7, $E7, $E7, $E7, $00, $01
0E89A E7 E7 E7 E7 E7 02 03 04   .db $E7, $E7, $E7, $E7, $E7, $02, $03, $04
0E8A2 E7 E7 E7 E7 02 05 04 E7   .db $E7, $E7, $E7, $E7, $02, $05, $04, $E7
0E8AA E7 E7 E7 02 05 04 E7 E7   .db $E7, $E7, $E7, $02, $05, $04, $E7, $E7
0E8B2 0B 07 08 09 0A E7 E7 E7   .db $0b, $07, $08, $09, $0a, $E7, $E7, $E7
0E8BA 13 0C 10 11 12 E7 E7 E7   .db $13, $0c, $10, $11, $12, $E7, $E7, $E7
0E8C2 E7 14 15 16 E7 E7 E7 E7   .db $E7, $14, $15, $16, $E7, $E7, $E7, $E7
0E8CA E7 17 18 19 E7 E7 E7 E7   .db $E7, $17, $18, $19, $E7, $E7, $E7, $E7
0E8D2                           ;   ------------------------------------------------------------
0E8D2                           
0E8D2                           
0E8D2                           sf:
0E8D2 40 40 40 40 40 40 40 40.. .db $40, $40, $40, $40, $40, $40, $40, $40, $40, $40, $40, $40, $40, $40, $40, $40, $40, $40, $40, $40
0E8E6                           
0E8E6                           sf2:
0E8E6 41 41 41 41 41 41 41 41.. .db $41, $41, $41, $41, $41, $41, $41, $41, $41, $41, $41, $41, $41, $41, $41, $41, $41, $41, $41, $41
0E8FA                           
0E8FA                           up_r1:
0E8FA 7B 7C 74 74 8B 8C 74 74.. .db  #$7B, #$7C, #$74, #$74, #$8B, #$8C, #$74, #$74, #$9B, #$9C, #$74, #$74, #$AD, #$BD, #$74,#$74
0E90A                           
0E90A                           up_r2:
0E90A 67 77 74 74 87 97 74 74.. .db  #$67, #$77, #$74, #$74, #$87, #$97, #$74, #$74, #$A7, #$B6, #$74, #$74, #$C6, #$D6, #$74,#$74
0E91A                           
0E91A                           up_r3:
0E91A CF 77 74 74 DF 97 74 74.. .db #$CF, #$77, #$74,#$74 , #$DF, #$97, #$74, #$74, #$A7, #$B6, #$74, #$74, #$DE, #$D6, #$74 , #$74
0E92A                           
0E92A                           dn_r1:
0E92A 17 18 74 74 27 28 29 74.. .db #$17, #$18, #$74, #$74, #$27, #$28, #$29, #$74, #$22, #$23, #$19, #$74, #$74, #$24, #$25, #$74
0E93A                           
0E93A                           dn_r2:
0E93A 16 18 74 74 27 28 29 74.. .db #$16, #$18, #$74, #$74, #$27, #$28, #$29, #$74, #$12, #$23, #$19, #$74, #$74, #$24, #$25, #$74
0E94A                           
0E94A                           up_l1:
0E94A 41 42 74 74 51 52 74 74.. .db  #$41, #$42, #$74, #$74, #$51, #$52, #$74, #$74, #$43, #$44, #$74, #$74, #$53, #$54, #$74,#$74
0E95A                           
0E95A                           up_l2:
0E95A 48 49 74 74 58 59 74 74.. .db #$48, #$49, #$74, #$74, #$58, #$59, #$74, #$74, #$45, #$46, #$74, #$74, #$55, #$56, #$74, #$74
0E96A                           
0E96A                           up_l3:
0E96A 0C 0D 74 74 1C 1D 74 74.. .db  #$0C, #$0D, #$74, #$74, #$1C, #$1D, #$74, #$74, #$2C, #$2D, #$74, #$74, #$3C, #$3D, #$74 ,#$74
0E97A                           
0E97A                           dn_l1:
0E97A 74 4E 4F 74 5D 5E 5F 74.. .db #$74, #$4E, #$4F, #$74, #$5D, #$5E, #$5F, #$74, #$4D, #$5A, #$5B, #$74, #$6B, #$6A, #$74, #$74
0E98A                           
0E98A                           dn_l2:
0E98A 74 4E 6F 74 5D 5E 5F 74.. .db #$74, #$4E, #$6F, #$74, #$5D, #$5E, #$5F, #$74, #$4D, #$5A, #$4B, #$74, #$6B, #$6A, #$74, #$74
0E99A                           
0E99A                           ld_r1:
0E99A 74 62 63 74 74 72 73 74.. .db #$74, #$62, #$63, #$74, #$74, #$72, #$73, #$74, #$81, #$82, #$83, #$74, #$91, #$92, #$93, #$74
0E9AA                           
0E9AA                           ld_r2:
0E9AA 74 60 61 74 74 70 71 74.. .db #$74, #$60, #$61, #$74, #$74, #$70, #$71, #$74, #$81, #$82, #$83, #$74, #$91, #$92, #$93, #$74
0E9BA                           
0E9BA                           ld_r3:
0E9BA 74 62 63 74 74 72 73 74.. .db #$74, #$62, #$63, #$74, #$74, #$72, #$73, #$74, #$74, #$82, #$83, #$74, #$80, #$92, #$93, #$74
0E9CA                           
0E9CA                           ld_r4:
0E9CA 74 60 61 74 74 70 71 74.. .db #$74, #$60, #$61, #$74, #$74, #$70, #$71, #$74, #$74, #$82, #$83, #$74, #$80, #$92, #$93, #$74
0E9DA                           
0E9DA                           ld_l1:
0E9DA 74 AB AC 74 74 BB BC 74.. .db #$74, #$AB, #$AC, #$74, #$74, #$BB, #$BC, #$74, #$74, #$CB, #$CC, #$CD, #$74, #$DB, #$DC, #$DD
0E9EA                           
0E9EA                           ld_l2:
0E9EA 74 AE AF 74 74 BE BF 74.. .db #$74, #$AE, #$AF, #$74, #$74, #$BE, #$BF, #$74, #$74, #$CB, #$CC, #$CD, #$74, #$DB, #$DC, #$DD
0E9FA                           
0E9FA                           ld_l3:
0E9FA 74 AB AC 74 74 BB BC 74.. .db #$74, #$AB, #$AC, #$74, #$74, #$BB, #$BC, #$74, #$74, #$CB, #$CC, #$74, #$74, #$DB, #$DC, #$CE
0EA0A                           
0EA0A                           ld_l4:
0EA0A 74 AE AF 74 74 BE BF 74.. .db #$74, #$AE, #$AF, #$74, #$74, #$BE, #$BF, #$74, #$74, #$CB, #$CC, #$74, #$74, #$DB, #$DC, #$CE
0EA1A                           
0EA1A                           ln_l1:
0EA1A 74 A4 A5 A6 B3 B4 B5 74.. .db #$74, #$A4, #$A5, #$A6, #$B3, #$B4, #$B5, #$74, #$C3, #$C4, #$C5, #$74, #$D3, #$D4, #$D5, #$74
0EA2A                           
0EA2A                           ln_l2:
0EA2A 74 A8 A9 AA B7 B8 B9 74.. .db #$74, #$A8, #$A9, #$AA, #$B7, #$B8, #$B9, #$74, #$C7, #$C8, #$C9, #$74, #$D7, #$D8, #$D9, #$74
0EA3A                           
0EA3A                           ln_l3:
0EA3A E0 E1 E2 E3 F0 F1 F2 74.. .db #$E0, #$E1, #$E2, #$E3, #$F0, #$F1, #$F2, #$74, #$C7, #$C8, #$C9, #$74, #$D7, #$D8, #$D9, #$74
0EA4A                           
0EA4A                           ln_r1:
0EA4A 68 69 74 74 78 79 7A 74.. .db #$68, #$69, #$74, #$74, #$78, #$79, #$7A, #$74, #$88, #$89, #$8A, #$74, #$98, #$99, #$9A, #$74
0EA5A                           
0EA5A                           ln_r2:
0EA5A 6D 6E 74 74 7D 7E 7F 74.. .db #$6D, #$6E, #$74, #$74, #$7D, #$7E, #$7F, #$74, #$8D, #$8E, #$8F, #$74, #$9D, #$9E, #$9F, #$74
0EA6A                           
0EA6A                           ln_r3:
0EA6A E9 EA 74 EC F9 FA FB 74.. .db #$E9, #$EA, #$74, #$EC, #$F9, #$FA, #$FB, #$74, #$8D, #$8E, #$8F, #$74, #$9D, #$9E, #$9F, #$74
0EA7A                           
0EA7A                           sadfac:
0EA7A 64 65 66 74 74 75 76 74.. .db #$64, #$65, #$66, #$74, #$74, #$75, #$76, #$74, #$84, #$85, #$86, #$74, #$94, #$95, #$96, #$74
0EA8A                           
0EA8A                           hanutile:
0EA8A 68 69 6A 6B 78 79 7A 7B.. .db #$68, #$69, #$6A, #$6B, #$78, #$79, #$7A, #$7B, #$88, #$89, #$8A, #$8B, #$98, #$99, #$9A, #$9B
0EA9A                           
0EA9A                           xpost:
0EA9A 00 08 10 18 00 08 10 18.. .db #$00, #$08, #$10, #$18, #$00, #$08, #$10, #$18, #$00, #$08, #$10, #$18, #$00, #$08, #$10, #$18
0EAAA                           
0EAAA                           ypost:
0EAAA 78 78 78 78 80 80 80 80.. .db #$78, #$78, #$78, #$78, #$80, #$80, #$80, #$80, #$88, #$88, #$88, #$88, #$90, #$90, #$90, #$90
0EABA                           
0EABA                           
0EABA                           screen1_3:                                    ;;;;;;;;;;;;;;;;;;;;;;; level2 screen1
0EABA                                   ;.incbin "screen5.nam"
0EABA                           
0EABA                           screen2_3:                                    ;;;;;;;;;;;;;;;;;;;;;;  level2 screen2
0EABA                                   ;.incbin "screen6.nam"
0EABA                           
0EABA                           start_screen1:
0EABA                              ;  .incbin "start.nam"
0EABA                           
0EABA                           pic1:
0EABA 06 06 06 06 06 06 06 06..         .INCBIN "pic1.nam"     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Question screen [second screen]
0EEBA                           
0EEBA                           start_2in1:
0EEBA 00 00 00 00 00 00 00 00..         .incbin "screen_2in1 .nam"
0F27A                           
0F27A                           
0F27A                           
0F27A                           snake_typing:
0F27A 00 00 00 00 00 00 00 00..              .incbin "screen1_typing.nam"
0F67A                           snow_typing:
0F67A 00 00 00 00 00 00 00 00..         .incbin "snow.nam"
0FA7A                           
0FA7A                           ;       ---------------------------;       ----------------------------------------------------
0FA7A                                   ;     .org LoadAddy
0FA7A                           ;     .incbin "music.nsf"
0FA7A                           
0FA7A 00 00 00 00 00 00 00 00.. 	.ORG $fffa
0FFFA 7F E4                     	.dw NMI
0FFFC 00 C0                     	.dw Reset
0FFFE D5 E5                     	.dw IRQ
10000                            .org $10000
10000                           ;       ----------------------------------------------------
